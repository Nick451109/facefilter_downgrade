com.google.android.filament.RenderTarget$Builder$BuilderFinalizer
com.google.android.filament.Material$Builder
com.google.ar.core.exceptions.FatalException
com.google.android.filament.Texture$Builder$BuilderFinalizer
com.google.ar.schemas.lull.ModelPipelineCollidableDef
com.google.ar.core.Session$Feature
com.google.ar.sceneform.rendering.Light$1
androidx.core.widget.NestedScrollView
com.google.ar.sceneform.lullmodel.Quat
com.google.ar.sceneform.rendering.Vertex$UvCoordinate
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
com.google.ar.sceneform.R$drawable
com.google.android.filament.MaterialInstance$FloatElement
com.google.android.filament.View
com.google.ar.sceneform.rendering.ExternalTexture
com.google.android.filament.Colors$LinearColor
androidx.window.layout.WindowLayoutInfo
com.google.ar.sceneform.R$color
androidx.window.R$id
com.google.ar.schemas.lull.DataString
com.google.ar.sceneform.rendering.Vertex$Builder
com.google.ar.sceneform.lullmodel.MaterialTextureUsage
com.google.ar.core.Session$TrackableType-IA
com.google.android.filament.Colors$RgbType
com.google.ar.schemas.lull.Vec2i
com.google.ar.core.ArCoreApk$Availability$5-IA
com.google.ar.sceneform.ux.BaseGestureRecognizer$OnGestureStartedListener
com.google.ar.schemas.lull.Quat
com.google.ar.schemas.sceneform.CollisionShapeType
com.google.android.filament.Fence$Mode
com.google.ar.sceneform.rendering.ThreadPools
com.google.ar.schemas.lull.DataVec3
com.google.ar.sceneform.ux.PlaneDiscoveryController
com.google.android.filament.android.TextureHelper
com.google.android.filament.LightManager$ShadowOptions
com.google.ar.schemas.lull.DataHashValue
androidx.core.app.RemoteActionCompat
com.google.ar.sceneform.rendering.ResourceManager
com.google.ar.sceneform.rendering.Light$LightChangedListener
com.google.ar.schemas.sceneform.LightingCubeDef
androidx.lifecycle.LiveData
com.google.ar.sceneform.collision.Sphere
com.google.ar.sceneform.NodeParent
com.google.android.filament.IndirectLight$Builder
com.google.android.filament.Texture$CompressedFormat
com.google.android.filament.Texture$Sampler
com.google.ar.core.Anchor$CloudAnchorState
androidx.fragment.app.FragmentManager
com.google.ar.core.dependencies.g
com.google.android.filament.NioUtils
com.google.ar.sceneform.lullmodel.VariantDef
com.google.ar.sceneform.ux.R$bool
com.google.ar.sceneform.ux.BaseArFragment$OnTapArPlaneListener
com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory
androidx.lifecycle.MutableLiveData
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.ar.core.Config$GeospatialMode
com.google.ar.sceneform.rendering.CameraProvider
androidx.window.layout.SidecarCompat
com.google.ar.core.CameraConfig$DepthSensorUsage
com.google.ar.schemas.lull.DeviceType
com.google.ar.schemas.sceneform.SamplerUsageType
com.google.ar.schemas.lull.Vec4
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.fragment.app.Fragment$AnimationInfo
com.google.ar.schemas.lull.TextureWrap
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef
com.google.ar.sceneform.rendering.ViewRenderable$1
com.google.ar.core.exceptions.DataInvalidFormatException
com.google.ar.sceneform.rendering.FilamentEngineWrapper
com.google.ar.sceneform.rendering.Renderable$Builder
com.google.ar.sceneform.FrameTime
com.google.ar.core.Config
com.google.ar.core.ArCoreApk$Availability$2-IA
com.google.ar.schemas.sceneform.RenderFlags
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.android.filament.AndroidPlatform
androidx.core.app.SharedElementCallback
com.google.ar.schemas.sceneform.ScalarInit
com.google.ar.sceneform.ux.BaseGestureRecognizer
androidx.window.embedding.SplitController
io.flutter.embedding.android.FlutterSplashView$SavedState
com.google.ar.sceneform.rendering.FixedHeightViewSizer
com.google.ar.schemas.sceneform.DoubleVec4Init
com.google.android.filament.Fence$Type
com.google.ar.sceneform.rendering.LightInstance$LightInstanceChangeListener
com.google.ar.core.exceptions.CloudAnchorsNotConfiguredException
androidx.window.layout.FoldingFeature$OcclusionType$Companion
com.google.ar.sceneform.collision.Ray
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.google.ar.core.SharedCamera$SharedCameraInfo-IA
com.google.ar.core.exceptions.DeadlineExceededException
com.google.ar.sceneform.lullmodel.DataBool
com.google.ar.sceneform.math.Quaternion
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.SidecarAdapter
com.google.ar.core.dependencies.a
com.google.ar.sceneform.rendering.EngineInstance
com.google.ar.sceneform.rendering.R$string
com.google.ar.core.ArCoreApk$InstallStatus
androidx.window.layout.ActivityCompatHelperApi24
androidx.fragment.app.FragmentViewLifecycleOwner
com.google.ar.schemas.sceneform.SamplerDef
com.google.ar.sceneform.Node$TapTrackingData
com.google.android.filament.Stream$Builder
androidx.window.layout.WindowBackend
com.google.ar.sceneform.rendering.Texture
com.google.ar.core.exceptions.UnavailableDeviceNotCompatibleException
com.google.ar.schemas.lull.DataVec4
com.google.ar.sceneform.lullmodel.VariantMapDef
com.google.ar.sceneform.rendering.MaterialParameters
com.google.ar.core.TrackingFailureReason
com.google.android.filament.EntityManager$1
com.google.ar.sceneform.lullmodel.MaterialTextureDef
com.google.ar.sceneform.Node$OnTapListener
com.google.ar.core.AugmentedImage$TrackingMethod
com.google.ar.sceneform.ux.DragGesture$OnGestureEventListener
io.flutter.plugins.GeneratedPluginRegistrant
com.google.ar.schemas.sceneform.IntVec3Init
androidx.activity.ComponentActivity$2
com.google.android.filament.android.UiHelper$1
com.google.ar.sceneform.rendering.AnimatorImpl
com.google.ar.sceneform.lullmodel.DataHashValue
androidx.window.layout.ExtensionWindowLayoutInfoBackend
com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory
androidx.lifecycle.LifecycleRegistry
com.google.ar.schemas.lull.ModelIndexRange
com.google.ar.schemas.sceneform.BoolVec2Init
androidx.window.layout.FoldingFeature$State$Companion
com.google.ar.sceneform.lullmodel.AxisSystem
com.google.ar.sceneform.rendering.AnimationData$Factory
androidx.fragment.app.Fragment
com.google.ar.schemas.lull.ModelPipelineRenderableDef
com.google.ar.sceneform.rendering.R
com.google.android.filament.TextureSampler$CompareFunction
androidx.window.layout.SidecarCompat$DistinctElementCallback
com.google.ar.sceneform.SceneView$AnimationTimeTransformer
com.google.ar.core.Session$TrackableType$3-IA
com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment
com.google.ar.sceneform.rendering.TextureInternalData
com.google.ar.sceneform.assets.R
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.ar.sceneform.rendering.ViewAttachmentManager
com.google.ar.sceneform.lullmodel.SkeletonDef
com.example.downgrade_filtro.MainActivity
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.embedding.SplitController$Companion
com.google.ar.sceneform.rendering.SkeletonRig
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage$CubeMapPlane
com.google.ar.sceneform.rendering.SceneformBundle
com.google.ar.core.Frame
com.google.android.filament.Box
com.google.ar.sceneform.rendering.Color
com.google.ar.sceneform.rendering.MaterialFactory
com.google.ar.sceneform.lullmodel.VertexAttributeType
com.google.ar.schemas.lull.DataBytes
com.google.android.filament.android.UiHelper$RenderSurface
com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment
com.google.android.filament.Entity
com.google.ar.schemas.sceneform.SceneformBundleDef
com.google.ar.sceneform.rendering.IRenderableInternalData
com.google.ar.core.Session$TrackableType$9-IA
com.google.ar.core.Session$TrackableType$6-IA
com.google.ar.sceneform.rendering.FixedWidthViewSizer
com.google.ar.sceneform.rendering.Material$Builder
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef
com.google.android.filament.R
com.google.android.filament.LightManager$Builder$BuilderFinalizer
com.google.android.filament.Texture$PixelBufferDescriptor
androidx.window.embedding.ActivityFilter
com.google.ar.sceneform.lullmodel.Recti
com.google.ar.sceneform.ux.BaseTransformableNode
com.google.android.filament.RenderTarget$AttachmentPoint
com.google.android.filament.Camera
com.google.ar.core.Quaternion
com.google.ar.core.annotations.NativeEnum
com.google.ar.core.Config$CloudAnchorMode
com.google.ar.sceneform.rendering.R$drawable
com.google.android.filament.Material$Parameter$Type
androidx.window.embedding.SplitRule
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
com.google.ar.core.Pose
com.google.android.filament.Platform$UnknownPlatform
androidx.savedstate.SavedStateRegistry
com.google.ar.sceneform.ux.R$drawable
com.google.ar.sceneform.ux.TranslationController
com.google.ar.core.ImageFormat
com.google.ar.core.Session$TrackableType$1-IA
com.google.ar.sceneform.lullmodel.DataVec4
com.google.ar.core.SharedCamera
com.google.android.filament.Scene
com.google.ar.core.dependencies.c
com.google.ar.sceneform.rendering.ViewRenderableInternalData
com.google.android.filament.View$RenderQuality
com.google.android.filament.Material$VertexDomain
com.google.ar.sceneform.ux.R$layout
com.google.ar.sceneform.utilities.MovingAverage
androidx.window.embedding.SplitInfo
com.google.android.filament.Colors$1
com.google.ar.schemas.lull.Vec2
com.google.ar.schemas.sceneform.IntVec2Init
androidx.window.layout.SidecarCompat$Companion
com.google.ar.core.PlaybackStatus
com.google.ar.schemas.lull.MaterialTextureUsage
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.window.layout.SidecarWindowBackend$Companion
com.google.ar.core.ArCoreApk
com.google.ar.sceneform.lullmodel.ModelInstanceDef
com.google.ar.sceneform.utilities.AndroidPreconditions
androidx.window.R$attr
com.google.ar.schemas.lull.Recti
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.google.ar.sceneform.lullmodel.DataBytes
androidx.lifecycle.Lifecycling$1
androidx.window.R$styleable
com.google.android.filament.MathUtils
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh
com.google.android.filament.NativeSurface
com.google.ar.sceneform.rendering.LightProbe$1
com.google.ar.sceneform.math.Vector3
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.google.ar.schemas.sceneform.VersionDef
com.google.android.filament.Material$Parameter$Precision
com.google.ar.sceneform.Node
com.google.flatbuffers.FlatBufferBuilder
com.google.android.filament.Stream$Builder$BuilderFinalizer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.google.ar.schemas.lull.VariantMapDef
com.google.ar.sceneform.ux.R$id
com.google.ar.sceneform.ux.DragGestureRecognizer
com.google.ar.sceneform.lullmodel.ModelPipelineDef
com.google.ar.sceneform.rendering.Renderable
androidx.window.embedding.SplitRuleParser
com.google.ar.sceneform.lullmodel.BlendShape
com.google.ar.sceneform.rendering.ViewRenderable$Builder
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef
androidx.window.embedding.ActivityRule
com.google.android.filament.RenderTarget
com.google.ar.sceneform.R$raw
com.google.ar.sceneform.rendering.Texture$1
com.google.android.filament.Material$BlendingMode
com.google.ar.sceneform.lullmodel.TextureFiltering
androidx.window.layout.WindowMetrics
com.google.ar.schemas.lull.ModelPipelineSkeletonDef
com.google.android.filament.View$QualityLevel
com.google.ar.core.annotations.UsedByNative
androidx.versionedparcelable.ParcelImpl
com.google.ar.sceneform.ux.DragGesture
androidx.window.java.R
androidx.window.layout.ExtensionInterfaceCompat
com.google.ar.core.CameraConfigFilter
com.google.ar.sceneform.rendering.RenderableInstance$SkinningModifier
com.google.ar.sceneform.collision.Collider
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda3
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef
com.google.ar.schemas.sceneform.DoubleVec3Init
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.ar.sceneform.ux.TransformationSystem
com.google.android.filament.IndirectLight
com.google.ar.core.annotations.UsedByReflection
androidx.activity.ImmLeaksCleaner
com.google.ar.sceneform.rendering.R$layout
androidx.window.layout.FoldingFeature$State
io.flutter.embedding.engine.FlutterJNI
com.google.ar.sceneform.ux.AugmentedFaceNode
com.google.ar.sceneform.assets.RenderableSource$1
com.google.android.filament.View$ToneMapping
com.google.android.filament.View$AmbientOcclusionOptions
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.google.ar.sceneform.rendering.PlaneRenderer
com.google.ar.sceneform.utilities.Preconditions
com.google.ar.sceneform.Scene$OnTouchListener
com.google.android.filament.Skybox$Builder$BuilderFinalizer
com.google.ar.sceneform.assets.Converter
com.google.android.filament.NioUtils$BufferType
com.google.ar.core.AugmentedFace$RegionType
com.google.ar.sceneform.ArSceneView
com.google.ar.core.dependencies.i
com.google.ar.sceneform.ux.R$color
androidx.window.layout.HardwareFoldingFeature
com.google.ar.sceneform.rendering.LightProbe$Builder
com.google.ar.sceneform.Scene
com.google.android.filament.IndirectLight$Builder$BuilderFinalizer
com.google.android.filament.IndexBuffer
com.google.ar.sceneform.TouchEventSystem$TouchTarget
com.google.ar.core.Earth
com.google.ar.sceneform.resources.ResourceHolder
com.google.ar.sceneform.rendering.ViewRenderable
com.google.android.filament.Skybox$Builder
com.google.android.filament.Platform
com.google.ar.schemas.lull.KeyVariantPairDef
com.google.ar.core.Session$TrackableType$5-IA
com.google.ar.schemas.lull.OptionalBool
com.google.android.filament.EntityInstance
com.google.android.filament.Texture$1
com.google.ar.core.Session
com.google.ar.sceneform.AnchorNode
com.google.ar.schemas.lull.AabbDef
com.google.ar.sceneform.R$layout
androidx.window.layout.WindowInfoTracker
com.google.ar.schemas.lull.DataQuat
androidx.window.layout.WindowInfoTrackerImpl$Companion
com.google.ar.sceneform.utilities.LoadHelper
com.google.ar.sceneform.lullmodel.AabbDef
com.google.ar.sceneform.ux.R$style
com.google.ar.schemas.sceneform.BoolVec3Init
com.google.ar.core.InstantPlacementPoint
com.google.ar.sceneform.rendering.IEngine
androidx.window.embedding.ExtensionEmbeddingBackend
com.google.flatbuffers.Constants
androidx.lifecycle.Lifecycle$State
com.google.ar.sceneform.ux.BaseArFragment
androidx.window.layout.WindowMetricsCalculatorDecorator
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda2
com.google.android.filament.RenderTarget$1
com.google.ar.schemas.sceneform.Vec2Init
com.google.ar.sceneform.R$integer
com.google.ar.sceneform.utilities.FlatBufferUtils
com.google.ar.core.TrackingState
com.google.ar.sceneform.rendering.Renderer
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage
com.google.ar.sceneform.Node$LifecycleListener
com.google.ar.core.Camera
com.google.ar.core.ArCoreApk$UserMessageType
com.google.ar.schemas.lull.DataBool
com.google.android.filament.IndexBuffer$1
com.google.ar.schemas.lull.VariantDef
com.google.ar.core.Coordinates2d
androidx.window.core.ExperimentalWindowApi
com.google.ar.schemas.lull.TextureFiltering
com.google.android.filament.VertexBuffer$Builder$BuilderFinalizer
com.google.ar.sceneform.Scene$OnPeekTouchListener
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda0
com.google.ar.schemas.sceneform.Vec4Init
io.flutter.plugin.platform.SingleViewPresentation
com.google.ar.sceneform.TouchEventSystem
com.google.ar.core.exceptions.SessionPausedException
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef
com.google.ar.sceneform.rendering.AnimationData
com.google.android.filament.IndexBuffer$Builder$IndexType
androidx.window.layout.WindowMetricsCalculatorCompat
com.google.ar.sceneform.ux.R$dimen
com.google.ar.core.dependencies.h
androidx.window.layout.WindowInfoTrackerImpl
com.google.ar.sceneform.lullmodel.DataVec3
com.google.ar.sceneform.collision.Plane
com.google.ar.sceneform.ux.R$styleable
com.google.ar.core.TrackData
com.google.ar.schemas.sceneform.ParameterDef
com.google.ar.core.ArCoreApk$Availability
com.google.ar.sceneform.collision.CollisionSystem
com.google.ar.core.dependencies.d
com.google.ar.schemas.sceneform.LightingDef
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter
com.google.ar.sceneform.rendering.ShapeFactory
com.google.android.filament.Fence$FenceStatus
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.layout.DisplayCompatHelperApi28
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker
com.google.ar.core.Config$UpdateMode
com.google.ar.schemas.lull.ModelInstanceDef
com.google.android.filament.android.UiHelper
com.google.ar.core.dependencies.f
com.google.ar.schemas.sceneform.DoubleInit
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda1
androidx.core.graphics.drawable.IconCompat
com.google.ar.core.PointCloud
com.google.ar.sceneform.R$interpolator
com.google.ar.sceneform.resources.ResourceRegistry
com.google.ar.sceneform.ux.HandMotionView
com.google.android.filament.EntityManager
com.google.ar.sceneform.rendering.ViewSizer
com.google.ar.core.ArCoreApk$Availability$4-IA
androidx.appcompat.app.AppCompatViewInflater
com.google.vr.dynamite.client.UsedByReflection
androidx.window.embedding.ActivityStack
com.google.ar.sceneform.rendering.CameraStream
com.google.android.filament.MaterialInstance$IntElement
com.google.android.filament.MaterialInstance
com.google.ar.sceneform.collision.Box
com.google.ar.sceneform.rendering.LullModel
com.google.ar.sceneform.rendering.R$id
com.google.android.filament.RenderableManager$PrimitiveType
com.google.ar.core.Session$TrackableType$8-IA
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters
com.google.ar.schemas.sceneform.SamplerCompareMode
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.fragment.app.Fragment$OnStartEnterTransitionListener
androidx.appcompat.widget.DialogTitle
com.google.ar.sceneform.collision.RayHit
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate
com.google.ar.core.AugmentedImageDatabase
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.embedding.SplitRule$Api30Impl
androidx.savedstate.SavedStateRegistryController
com.google.ar.schemas.lull.ModelPipelineDef
androidx.appcompat.widget.ButtonBarLayout
com.google.ar.sceneform.SceneView
androidx.fragment.app.Fragment$SavedState
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda2
com.google.ar.sceneform.lullmodel.VariantArrayDef
com.google.ar.core.ArCoreApk$Availability$3-IA
com.google.ar.sceneform.rendering.SkeletonRig$Factory
androidx.appcompat.widget.Toolbar
com.google.ar.schemas.sceneform.TransformDef
androidx.appcompat.app.AlertController$RecycleListView
com.google.ar.sceneform.utilities.ChangeId
androidx.window.layout.DisplayCompatHelperApi17
com.google.ar.core.exceptions.NotYetAvailableException
com.google.android.filament.View$DepthPrepass
com.google.ar.sceneform.R$id
com.google.android.filament.TextureSampler$1
com.google.android.filament.android.UiHelper$TextureViewHandler
com.google.android.filament.Camera$Projection
com.google.ar.schemas.sceneform.ParameterInitDef
androidx.window.core.Version$Companion
com.google.ar.sceneform.rendering.Material
com.google.ar.core.exceptions.PlaybackFailedException
com.google.ar.schemas.lull.DataFloat
com.google.ar.sceneform.rendering.ModelRenderable
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.ar.schemas.sceneform.SamplerMinFilter
com.google.android.filament.Texture$Builder
com.google.ar.core.GeospatialPose
com.google.android.filament.TextureSampler$WrapMode
androidx.fragment.app.Fragment$2
kotlin.internal.jdk7.JDK7PlatformImplementations
com.google.ar.sceneform.assets.RenderableSource$SourceType
com.google.ar.schemas.sceneform.BoolInit
com.google.ar.core.Session$TrackableType$2-IA
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.filament.android.UiHelper$ContextErrorPolicy
com.google.ar.schemas.sceneform.BoolVec4Init
com.google.android.filament.Platform$1
com.google.ar.schemas.lull.VertexAttribute
com.google.ar.schemas.sceneform.IntVec4Init
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
com.google.ar.sceneform.math.MathHelper
com.google.ar.sceneform.lullmodel.ArcDef
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$1
com.google.android.filament.android.UiHelper$SurfaceViewHandler
androidx.appcompat.view.menu.ActionMenuItemView
com.google.ar.sceneform.rendering.HeadlessEngineWrapper
com.google.ar.core.HitResult
com.google.ar.core.exceptions.DataUnsupportedVersionException
com.google.ar.core.R
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.lifecycle.Lifecycle
com.google.ar.schemas.sceneform.SamplerWrapMode
com.google.ar.core.exceptions.ResourceExhaustedException
com.google.ar.schemas.lull.LayoutFillOrder
com.google.ar.sceneform.ux.TwistGestureRecognizer
com.google.ar.core.ArCoreApk$Availability$1-IA
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef
com.google.ar.sceneform.rendering.Texture$Sampler$Builder
com.google.ar.schemas.sceneform.LightingCubeFaceDef
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.vr.dynamite.client.INativeLibraryLoader
androidx.appcompat.widget.AppCompatImageHelper
com.google.ar.sceneform.lullmodel.LayoutFillOrder
com.google.android.filament.Asserts
com.google.android.filament.VertexBuffer$VertexAttribute
com.google.ar.core.dependencies.e
com.google.ar.sceneform.ux.R$raw
com.google.ar.schemas.lull.ModelPipelineImportDef
com.google.ar.sceneform.SkeletonNode$NodeBinding
com.google.ar.sceneform.ux.ArFragment
com.google.ar.core.SessionCreateJniHelper
androidx.window.core.Bounds
com.google.ar.sceneform.lullmodel.OptionalBool
com.google.ar.core.exceptions.UnavailableException
com.google.ar.schemas.sceneform.RuntimeAssetDef
com.google.ar.sceneform.lullmodel.Mat4x3
com.google.ar.sceneform.ux.R$integer
com.google.ar.core.CameraConfig$FacingDirection
com.google.ar.core.Anchor
com.google.ar.sceneform.lullmodel.VertexAttribute
com.google.ar.sceneform.rendering.RenderViewToExternalTexture$OnViewSizeChangedListener
androidx.window.layout.FoldingFeature
com.google.android.filament.Stream
com.google.ar.sceneform.rendering.R$raw
com.google.ar.sceneform.ux.R$string
com.google.ar.schemas.lull.MaterialDef
androidx.appcompat.widget.ViewStubCompat
com.google.android.filament.TransformManager
com.google.ar.schemas.lull.SubmeshAabb
androidx.appcompat.widget.ContentFrameLayout
com.google.ar.core.RecordingStatus
com.google.ar.sceneform.common.TransformProvider
com.google.ar.sceneform.lullmodel.Color
com.google.ar.sceneform.rendering.RenderableDefinition$Builder
com.google.android.filament.BuildConfig
com.google.ar.sceneform.lullmodel.VertexAttributeUsage
com.google.ar.sceneform.assets.RenderableSource$Builder
androidx.appcompat.view.menu.ListMenuItemView
com.google.ar.core.Plane
com.google.ar.core.Earth$EarthState
com.google.ar.sceneform.R$anim
com.google.vr.dynamite.client.ObjectWrapper
com.google.ar.sceneform.lullmodel.DeviceType
com.google.ar.sceneform.rendering.Texture$Sampler
com.google.android.filament.Engine
com.google.ar.core.exceptions.UnavailableArcoreNotInstalledException
com.google.ar.core.dependencies.j
com.google.ar.sceneform.math.QuaternionEvaluator
com.google.android.filament.EntityManager$Holder
androidx.window.embedding.MatcherUtils
com.google.android.filament.MaterialInstance$BooleanElement
com.google.ar.sceneform.ux.GesturePointersUtility
androidx.window.core.Version
com.google.android.filament.Material$Shading
com.google.ar.sceneform.utilities.TimeAccumulator
com.google.android.filament.TextureSampler$MinFilter
androidx.savedstate.Recreator
com.google.android.filament.Texture$Usage
com.google.ar.core.AugmentedFace
io.flutter.view.FlutterCallbackInformation
com.google.ar.core.InstantPlacementPoint$TrackingMethod
com.google.ar.schemas.lull.VariantArrayDefImpl
com.google.ar.core.ArCoreApk$Availability$6-IA
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker$Clock
com.google.ar.sceneform.rendering.LightProbe
com.google.android.filament.TextureSampler$MagFilter
com.google.ar.schemas.sceneform.AnimationDef
com.google.ar.core.Config$InstantPlacementMode
com.google.ar.core.CameraIntrinsics
com.google.ar.core.DepthPoint
com.google.android.filament.android.UiHelper$RendererCallback
com.google.ar.sceneform.rendering.Light
com.google.ar.core.TrackableBase
com.google.android.filament.Material$Interpolation
com.google.android.filament.android.TextureHelper$1
com.google.ar.schemas.lull.AxisSystem
com.google.ar.schemas.sceneform.CubemapSamplerInit
com.google.android.filament.LightManager$Type
com.google.ar.sceneform.utilities.SceneformBufferUtils
com.google.ar.schemas.sceneform.DoubleVec2Init
com.google.vr.dynamite.client.ILoadedInstanceCreator
com.google.ar.sceneform.rendering.CleanupRegistry
com.google.ar.core.Point$OrientationMode
com.google.ar.core.exceptions.UnavailableUserDeclinedInstallationException
androidx.window.layout.EmptyDecorator
com.google.ar.core.Config$AugmentedFaceMode
com.google.android.filament.Material$CullingMode
kotlin.internal.jdk8.JDK8PlatformImplementations
com.google.ar.sceneform.ux.DragGestureRecognizer$OnGestureStartedListener
androidx.activity.ComponentActivity$3
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
com.google.ar.sceneform.collision.CollisionShape
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
com.google.ar.schemas.lull.TextureDef
com.google.android.filament.Skybox
com.google.android.filament.Texture$Type
com.google.android.filament.RenderableManager$Builder$BuilderFinalizer
androidx.window.layout.FoldingFeature$Orientation$Companion
com.google.android.filament.Renderer
com.google.ar.sceneform.ux.BaseGesture$OnGestureEventListener
com.google.ar.sceneform.R
com.google.ar.sceneform.ux.RotationController
com.google.ar.core.exceptions.CameraNotAvailableException
com.google.ar.sceneform.ux.FootprintSelectionVisualizer
com.google.ar.schemas.lull.Vec3
com.google.ar.sceneform.ux.TwistGesture
com.google.android.filament.R$string
com.google.android.filament.Colors
com.google.ar.sceneform.Node$TransformChangedListener
com.google.ar.sceneform.lullmodel.DataVec2
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.google.ar.schemas.sceneform.SamplerInit
com.google.ar.schemas.lull.BlendShape
androidx.fragment.app.FragmentManagerImpl
com.google.android.filament.Fence
com.google.android.filament.proguard.UsedByNative
androidx.window.embedding.SplitPlaceholderRule
androidx.core.app.CoreComponentFactory
com.google.ar.sceneform.lullmodel.MaterialDef
com.google.android.filament.VertexBuffer
kotlinx.coroutines.CoroutineExceptionHandler
com.google.ar.schemas.lull.LayoutVerticalAlignment
com.google.ar.schemas.sceneform.IntInit
com.google.android.filament.VertexBuffer$QuatType
androidx.window.embedding.EmptyEmbeddingComponent
com.google.ar.core.LightEstimate$State
androidx.annotation.Keep
androidx.window.embedding.SplitPairRule
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
com.google.ar.core.exceptions.TextureNotSetException
com.google.ar.sceneform.rendering.ModelRenderable$1
io.flutter.embedding.engine.FlutterOverlaySurface
com.google.ar.core.exceptions.GooglePlayServicesLocationLibraryNotLinkedException
com.google.ar.core.exceptions.UnsupportedConfigurationException
com.google.ar.sceneform.utilities.ArCoreVersion
com.google.ar.sceneform.ux.R$attr
com.google.ar.core.ArCoreApk$Availability$7-IA
com.google.android.filament.Filament
com.google.ar.sceneform.rendering.Light$Type
androidx.window.embedding.EmbeddingAdapter
com.google.ar.core.InstallActivity
com.google.android.filament.TextureSampler
com.google.ar.sceneform.R$dimen
com.google.ar.schemas.lull.LayoutHorizontalAlignment
com.google.flatbuffers.Table
com.google.ar.schemas.sceneform.MaterialDef
androidx.appcompat.widget.ActionMenuView
com.google.ar.sceneform.resources.SharedReference
com.google.ar.core.Config$FocusMode
com.google.ar.core.dependencies.b
com.google.ar.schemas.sceneform.SamplerMagFilter
androidx.window.embedding.EmbeddingRule
com.google.ar.sceneform.lullmodel.TextureDef
com.google.android.filament.Material
com.google.ar.schemas.lull.ModelPipelineMaterialDef
com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda3
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.appcompat.view.menu.ExpandedMenuView
com.google.ar.sceneform.ux.R$anim
androidx.lifecycle.LifecycleOwner
com.google.android.filament.Texture$Format
androidx.window.layout.DisplayFeature
androidx.window.layout.SidecarAdapter$Companion
com.google.android.filament.RenderableManager$Builder
com.google.ar.sceneform.Node$OnTouchListener
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.ar.core.exceptions.SessionUnsupportedException
com.google.ar.sceneform.ux.BaseGesture
com.google.ar.core.LightEstimate
kotlinx.coroutines.internal.MainDispatcherFactory
com.google.ar.sceneform.lullmodel.Rect
com.google.ar.sceneform.ux.PinchGesture$OnGestureEventListener
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
com.google.ar.schemas.lull.ArcDef
com.google.android.filament.Material$Parameter
androidx.window.layout.WindowMetricsCalculator$Companion
com.google.ar.sceneform.rendering.ModelRenderable$Builder
com.google.ar.core.Session$TrackableType$4-IA
com.google.ar.sceneform.SequentialTask
com.google.ar.sceneform.rendering.AnimatorImpl$Factory
com.google.vr.dynamite.client.DynamiteClient
com.google.android.filament.android.UiHelper$2
com.google.ar.sceneform.Scene$OnUpdateListener
androidx.window.embedding.SplitRule$LayoutDir
com.google.ar.sceneform.ux.TwistGestureRecognizer$OnGestureStartedListener
androidx.appcompat.widget.ActionBarContainer
com.google.ar.sceneform.ux.PinchGestureRecognizer
android.support.v4.app.RemoteActionCompatParcelizer
com.google.ar.sceneform.rendering.Vertex$1
androidx.window.layout.WindowInfoTracker$Companion
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda0
com.google.android.filament.RenderableManager
androidx.window.embedding.SplitPairFilter
com.google.ar.sceneform.ux.R
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.ar.schemas.lull.ModelDef
com.google.ar.schemas.lull.VertexAttributeType
com.google.android.filament.LightManager
com.google.ar.schemas.lull.DataInt
androidx.window.embedding.EmbeddingCompat
com.google.android.filament.RenderTarget$Builder
com.google.android.filament.Texture
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.lifecycle.FullLifecycleObserverAdapter
com.google.ar.sceneform.rendering.Material$1
com.google.ar.core.exceptions.ImageInsufficientQualityException
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.google.ar.sceneform.rendering.LightInstance
com.google.ar.sceneform.rendering.Light$Builder
com.google.ar.sceneform.R$attr
com.google.vr.dynamite.client.UsedByNative
androidx.versionedparcelable.CustomVersionedParcelable
com.google.ar.sceneform.ux.HandMotionAnimation
com.google.ar.sceneform.rendering.Texture$Usage
com.google.android.filament.VertexBuffer$AttributeType
com.google.ar.schemas.sceneform.ParameterInitDefType
com.google.ar.sceneform.lullmodel.DataString
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment
com.google.ar.sceneform.ux.PinchGesture
androidx.appcompat.widget.SearchView
com.google.ar.schemas.lull.TextureTargetType
com.google.ar.sceneform.R$styleable
com.google.android.filament.VertexBuffer$1
com.google.android.filament.IndexBuffer$Builder$BuilderFinalizer
com.google.android.filament.Texture$CubemapFace
com.google.flatbuffers.Utf8Safe
com.google.android.filament.View$AntiAliasing
com.google.ar.core.CameraConfig
com.google.ar.sceneform.lullmodel.TextureWrap
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
com.google.ar.sceneform.ux.ScaleController
com.google.ar.core.exceptions.MissingGlContextException
androidx.appcompat.widget.ActionBarOverlayLayout
com.google.ar.core.exceptions.UnavailableSdkTooOldException
com.google.ar.sceneform.lullmodel.SubmeshAabb
com.google.ar.sceneform.R$bool
com.google.android.filament.Camera$Fov
com.google.vr.dynamite.client.IObjectWrapper
com.google.android.filament.Colors$RgbaType
com.google.ar.schemas.sceneform.Vec3Init
com.google.ar.core.Config$LightEstimationMode
com.google.ar.sceneform.lullmodel.ModelIndexRange
com.google.ar.sceneform.ux.SelectionVisualizer
io.flutter.view.AccessibilityViewEmbedder
com.google.ar.sceneform.lullmodel.DataInt
com.google.ar.sceneform.rendering.MaterialInternalData
com.google.android.filament.IndexBuffer$Builder
com.google.ar.sceneform.rendering.Texture$Builder
com.google.ar.sceneform.Camera
com.google.ar.sceneform.rendering.Vertex
com.google.ar.sceneform.rendering.RenderableDefinition
com.google.ar.sceneform.rendering.LoadGltfListener
com.google.ar.core.Track
com.google.ar.schemas.lull.Color
com.google.ar.sceneform.HitTestResult
com.google.ar.sceneform.math.Matrix
com.google.ar.core.ArCoreApk$InstallBehavior
com.google.ar.sceneform.rendering.RenderableDefinition$1
com.google.flatbuffers.Struct
com.google.android.filament.Colors$Conversion
com.google.ar.core.Config$PlaneFindingMode
androidx.savedstate.SavedStateRegistry$1
com.google.android.filament.View$AmbientOcclusion
com.google.android.filament.Viewport
com.google.ar.sceneform.R$style
com.google.ar.schemas.lull.SkeletonDef
com.google.ar.schemas.sceneform.ExternalSamplerInit
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef
com.google.ar.sceneform.lullmodel.DataQuat
com.google.android.filament.proguard.UsedByReflection
androidx.window.layout.HardwareFoldingFeature$Type
com.google.ar.sceneform.assets.RenderableSource
com.google.ar.sceneform.ux.TwistGesture$OnGestureEventListener
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode
androidx.window.embedding.EmbeddingCompat$Companion
androidx.appcompat.widget.ActionBarContextView
com.google.ar.core.SharedCamera$$ExternalSyntheticLambda0
androidx.fragment.app.FragmentActivity
com.google.ar.sceneform.rendering.DpToMetersViewSizer
com.google.ar.core.Session$FeatureMapQuality
com.google.android.filament.Engine$Backend
com.google.ar.sceneform.rendering.Material$IMaterialInstance
com.google.ar.schemas.lull.VariantArrayDef
androidx.window.layout.WindowInfoTrackerDecorator
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl
androidx.window.layout.HardwareFoldingFeature$Companion
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda4
com.google.ar.sceneform.lullmodel.ModelDef
com.google.ar.schemas.lull.Mat4x3
com.google.ar.core.Point
com.google.ar.sceneform.SkeletonNode
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.window.embedding.EmbeddingBackend
com.google.ar.schemas.sceneform.CompiledMaterialDef
com.google.ar.core.ImageMetadata
androidx.appcompat.widget.AppCompatBackgroundHelper
com.google.android.filament.VertexBuffer$QuatTangentContext
androidx.lifecycle.ViewModelStore
com.google.ar.sceneform.lullmodel.Vec2
com.google.ar.core.ArCoreApkJniAdapter
com.google.ar.sceneform.rendering.RenderableInstance
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.core.graphics.drawable.IconCompatParcelizer
com.google.ar.sceneform.rendering.GLHelper
com.google.android.filament.LightManager$Builder
com.google.ar.sceneform.lullmodel.TextureTargetType
com.google.ar.sceneform.lullmodel.DataFloat
com.google.ar.sceneform.R$string
com.google.ar.core.Config$DepthMode
com.google.ar.core.RecordingConfig
com.google.ar.sceneform.math.Vector3Evaluator
com.google.android.filament.View$DynamicResolutionOptions
com.google.ar.core.Plane$Type
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
com.google.ar.sceneform.lullmodel.Vec4
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.window.layout.SidecarCompat$TranslatingCallback
com.google.android.filament.VertexBuffer$Builder
com.google.android.filament.Texture$InternalFormat
com.google.ar.core.exceptions.RecordingFailedException
com.google.ar.schemas.lull.DataVec2
com.google.ar.core.Session$TrackableType$7-IA
com.google.ar.core.Anchor$TerrainAnchorState
com.google.ar.sceneform.ux.PinchGestureRecognizer$OnGestureStartedListener
com.google.ar.sceneform.ux.TransformableNode
com.google.ar.core.exceptions.NotTrackingException
com.google.ar.schemas.sceneform.SamplerCompareFunc
androidx.window.core.Version$bigInteger$2
com.google.ar.sceneform.ux.BaseTransformationController
com.google.ar.sceneform.ux.R$interpolator
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder
com.google.flatbuffers.Utf8
com.google.ar.core.exceptions.FineLocationPermissionNotGrantedException
com.google.android.filament.View$Dithering
com.google.ar.sceneform.lullmodel.Vec3
com.google.android.filament.SwapChain
com.google.ar.core.AugmentedImage
androidx.loader.app.LoaderManager
com.google.ar.schemas.lull.VertexAttributeUsage
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder
com.google.ar.sceneform.SkeletonNode$SkeletonSkinningModifier
androidx.window.layout.FoldingFeature$Orientation
androidx.fragment.app.FragmentHostCallback
com.google.ar.core.Trackable
com.google.ar.core.CameraConfig$TargetFps
com.google.ar.core.ArCoreApk$Availability-IA
com.google.ar.sceneform.Sun
com.google.ar.sceneform.lullmodel.KeyVariantPairDef
com.google.ar.schemas.sceneform.LightingCubeFaceType
com.google.ar.schemas.sceneform.NullInit
com.google.ar.sceneform.rendering.MaterialInternalDataGltfImpl
com.google.ar.sceneform.lullmodel.Vec2i
com.google.ar.core.ArImage
androidx.window.R
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.layout.WindowMetricsCalculator
com.google.ar.core.exceptions.UnavailableApkTooOldException
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda1
com.google.ar.sceneform.assets.RenderableSource$RecenterMode
com.google.ar.core.exceptions.MetadataNotFoundException
androidx.appcompat.widget.AlertDialogLayout
com.google.ar.schemas.lull.MaterialTextureDef
com.google.ar.schemas.lull.Rect
com.google.android.filament.TextureSampler$CompareMode
com.google.ar.schemas.sceneform.InputDef
com.google.ar.core.exceptions.SessionNotPausedException
com.google.ar.schemas.sceneform.SamplerParamsDef
androidx.window.layout.SidecarWindowBackend
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.embedding.EmbeddingInterfaceCompat
com.google.android.filament.Texture$PrefilterOptions
com.google.ar.core.exceptions.AnchorNotSupportedForHostingException
com.google.ar.core.CameraConfig$StereoCameraUsage
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.google.ar.sceneform.ux.R$drawable: int abc_text_cursor_material
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.ar.sceneform.Scene: com.google.ar.sceneform.collision.CollisionSystem collisionSystem
com.google.ar.schemas.sceneform.SamplerMagFilter: short Nearest
com.google.ar.sceneform.ux.R$style: int Platform_ThemeOverlay_AppCompat_Dark
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.ar.core.SharedCamera$$ExternalSyntheticLambda0: com.google.ar.core.SharedCamera$$ExternalSyntheticLambda0 INSTANCE
com.google.ar.sceneform.R$styleable: int AppCompatTheme_viewInflaterClass
com.google.ar.sceneform.ux.R$drawable: int btn_checkbox_unchecked_mtrl
com.google.ar.sceneform.rendering.LightProbe: float intensity
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_fontVariationSettings
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_XBack_ZRight
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.google.android.filament.View$AntiAliasing: com.google.android.filament.View$AntiAliasing FXAA
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.google.ar.sceneform.rendering.PlaneRenderer: boolean isShadowReceiver
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.google.ar.sceneform.R$style: int Theme_AppCompat_Light_DarkActionBar
com.google.ar.sceneform.ux.R$attr: int titleTextColor
com.google.flatbuffers.FlatBufferBuilder: int space
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType DOUBLE
com.google.ar.core.ImageMetadata: int SECTION_STATISTICS
androidx.window.core.Version: int major
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState[] $VALUES
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarTabStyle
com.google.ar.sceneform.ux.R$attr: int dividerVertical
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_multiChoiceItemLayout
com.google.ar.sceneform.ux.R$attr: int listPreferredItemPaddingEnd
androidx.fragment.app.Fragment: boolean mFromLayout
com.google.ar.sceneform.collision.CollisionSystem: java.util.ArrayList colliders
com.google.ar.sceneform.rendering.LightProbe: com.google.ar.sceneform.rendering.Color colorCorrection
com.google.ar.sceneform.ux.R$id: int notification_main_column_container
com.google.ar.schemas.sceneform.ParameterInitDefType: byte BoolVec4Init
com.google.ar.sceneform.ux.R$attr: int checkedTextViewStyle
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.google.ar.sceneform.ux.R$dimen: int abc_config_prefDialogWidth
com.google.ar.sceneform.rendering.Renderer: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters environmentalHdrParameters
androidx.fragment.app.Fragment: boolean mHidden
com.google.ar.sceneform.R$id: int center_vertical
androidx.window.R$attr: int finishPrimaryWithSecondary
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.GesturePointersUtility gesturePointersUtility
com.google.ar.sceneform.R$color: int primary_text_default_material_light
com.google.ar.sceneform.ux.ArFragment: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int ActionMenuItemView_android_minWidth
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorPrimary
com.google.android.filament.VertexBuffer$Builder: long mNativeBuilder
androidx.window.R$styleable: int ActivityFilter_activityName
com.google.ar.sceneform.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.google.ar.sceneform.assets.RenderableSource: java.lang.Float scale
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.RenderViewToExternalTexture$OnViewSizeChangedListener onViewSizeChangedListener
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.ar.sceneform.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.google.ar.sceneform.R$dimen: int abc_text_size_menu_header_material
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionButton_Overflow
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowNoTitle
com.google.ar.sceneform.rendering.CameraStream: int FLOAT_SIZE_IN_BYTES
com.google.ar.sceneform.R$attr: int colorAccent
com.google.ar.sceneform.R$dimen: int notification_large_icon_height
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState[] $VALUES
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type BOOL3
com.google.ar.sceneform.ux.TransformationSystem: java.util.ArrayList recognizers
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_fontFamily
com.google.ar.sceneform.R$style: int Widget_AppCompat_ButtonBar
com.google.ar.sceneform.R$id: int icon
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.google.ar.sceneform.R$dimen: int compat_button_padding_vertical_material
com.google.ar.sceneform.ux.R$attr: int drawableEndCompat
com.google.ar.sceneform.Camera: float nearPlane
com.google.ar.sceneform.ux.R$id: int search_voice_btn
com.google.ar.sceneform.ArSceneView: com.google.ar.core.Session session
com.google.android.filament.android.UiHelper: java.lang.Object mNativeWindow
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.ar.sceneform.ux.R$style: int Base_V21_Theme_AppCompat_Dialog
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type INT2
com.google.ar.core.Camera: com.google.ar.core.Session session
com.google.ar.sceneform.FrameTime: long lastNanoTime
com.google.ar.sceneform.rendering.CameraStream: java.lang.String TAG
com.google.ar.sceneform.ux.R$string: int abc_shareactionprovider_share_with
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.google.ar.schemas.lull.LayoutFillOrder: int RightUp
com.google.ar.core.CameraConfig$FacingDirection: com.google.ar.core.CameraConfig$FacingDirection[] $VALUES
com.google.ar.sceneform.ux.R$drawable: int abc_seekbar_thumb_material
com.google.ar.sceneform.ux.R$attr: int isLightTheme
com.google.ar.core.Config$CloudAnchorMode: com.google.ar.core.Config$CloudAnchorMode ENABLED
com.google.ar.sceneform.ux.R$attr: int trackTint
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_textLocale
com.google.ar.sceneform.R$attr: int fontProviderCerts
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.google.ar.sceneform.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.google.ar.sceneform.rendering.Vertex$UvCoordinate: float x
com.google.ar.sceneform.rendering.Material$Builder: java.lang.Object registryId
com.google.ar.sceneform.R$raw: int sceneform_plane_shadow_material
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Scalar1f
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Caption
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Headline
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.ar.sceneform.ux.R$attr: int listDividerAlertDialog
com.google.ar.sceneform.ux.R$color: int abc_hint_foreground_material_light
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Button
com.google.ar.schemas.lull.LayoutFillOrder: int DownRight
com.google.ar.sceneform.R$attr: int textAllCaps
com.google.ar.core.CameraConfig$DepthSensorUsage: int nativeCode
com.google.ar.sceneform.R$color: int abc_tint_default
com.google.ar.sceneform.R$styleable: int[] FontFamilyFont
com.google.ar.sceneform.ux.R$integer: int status_bar_notification_info_maxnum
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_ZFront_YRight
com.google.ar.sceneform.R$styleable: int GradientColor_android_endX
com.google.ar.sceneform.R$styleable: int TextAppearance_android_typeface
com.google.ar.sceneform.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.google.ar.core.AugmentedImageDatabase: long nativeSymbolTableHandle
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.rendering.RenderableInstance$SkinningModifier skinningModifier
com.google.ar.sceneform.R$styleable: int SearchView_voiceIcon
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.google.ar.core.ImageMetadata: int CONTROL_AWB_STATE
com.google.ar.sceneform.ux.R$attr: int dropdownListPreferredItemHeight
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment: java.lang.String[] names
com.google.ar.sceneform.utilities.LoadHelper: java.lang.String ANDROID_ASSET
com.google.ar.sceneform.R$styleable: int ColorStateListItem_android_color
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.ar.sceneform.ux.R$drawable: int abc_item_background_holo_light
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type FOCUSED_SPOT
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.google.ar.sceneform.ux.R$attr: int customNavigationLayout
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionButton
com.google.ar.sceneform.R$color: int bright_foreground_material_light
com.google.android.filament.Texture: long mNativeObject
com.google.ar.sceneform.ux.R$attr: int autoCompleteTextViewStyle
com.google.ar.core.ImageMetadata: int CONTROL_AE_EXPOSURE_COMPENSATION
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.google.ar.sceneform.R$attr: int navigationContentDescription
com.google.ar.sceneform.ux.R$style: int Widget_Compat_NotificationActionText
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float[] direction
com.google.android.filament.IndirectLight$Builder: long mNativeBuilder
com.google.ar.sceneform.ux.R$color: int bright_foreground_inverse_material_light
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.rendering.Renderer attachedRenderer
com.google.ar.core.Config$InstantPlacementMode: com.google.ar.core.Config$InstantPlacementMode[] $VALUES
com.google.ar.sceneform.R$drawable: int notification_bg
com.google.ar.schemas.sceneform.SamplerCompareFunc: short LessEqual
com.google.ar.sceneform.R$drawable: int abc_ic_voice_search_api_material
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int DownLeft
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode VERTICAL
com.google.ar.sceneform.R$dimen: int abc_dialog_list_padding_top_no_title
com.google.ar.sceneform.R$dimen: int abc_disabled_alpha_material_dark
com.google.ar.sceneform.R$style: int Theme_AppCompat_DayNight
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_dividerVertical
com.google.ar.sceneform.ux.R$attr: int showTitle
androidx.fragment.app.Fragment: float mPostponedAlpha
com.google.android.filament.RenderableManager$PrimitiveType: com.google.android.filament.RenderableManager$PrimitiveType POINTS
com.google.ar.sceneform.R$styleable: int AppCompatImageView_tint
com.google.ar.core.ImageMetadata: int STATISTICS_LENS_SHADING_MAP
com.google.ar.sceneform.ux.R$color: int highlighted_text_material_dark
com.google.ar.sceneform.R$styleable: int Toolbar_contentInsetStart
com.google.ar.sceneform.R$id: int accessibility_custom_action_20
com.google.ar.sceneform.ux.R$attr: int actionModeWebSearchDrawable
com.google.ar.sceneform.ux.R$styleable: int Spinner_android_entries
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.google.ar.sceneform.R$styleable: int[] ActionMenuView
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float DEFAULT_DIRECT_INTENSITY_FOR_FILAMENT
com.google.ar.sceneform.ux.R$attr: int tint
com.google.ar.sceneform.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.google.ar.sceneform.ux.TwistGesture: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_thumbTint
com.google.ar.sceneform.R$styleable: int[] PopupWindowBackgroundState
com.google.ar.core.ImageMetadata: int BLACK_LEVEL_LOCK
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.google.ar.schemas.lull.TextureWrap: short ClampToEdge
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.ar.sceneform.R$attr: int drawableLeftCompat
com.google.ar.sceneform.ux.R$id: int showHome
com.google.ar.sceneform.R$id: int topPanel
com.google.ar.core.AugmentedFace$RegionType: int nativeCode
com.google.ar.sceneform.ux.R$drawable: int btn_radio_off_mtrl
com.google.ar.sceneform.R$styleable: int View_theme
com.google.ar.sceneform.ux.AugmentedFaceNode: int FACE_MESH_RENDER_PRIORITY
com.google.ar.schemas.lull.AxisSystem: int YUp_ZBack_XLeft
com.google.ar.core.ImageMetadata: int COLOR_CORRECTION_TRANSFORM
com.google.ar.sceneform.R$dimen: int compat_button_padding_horizontal_material
com.google.ar.sceneform.ux.R$attr: int panelMenuListTheme
com.google.ar.sceneform.R$dimen: int abc_text_size_subhead_material
com.google.ar.sceneform.R$color: int abc_primary_text_disable_only_material_dark
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeStyle
com.google.ar.sceneform.R$color: int dim_foreground_material_light
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorControlNormal
com.google.android.filament.Texture$Sampler: com.google.android.filament.Texture$Sampler SAMPLER_2D
com.google.ar.sceneform.rendering.R$string: int __arcore_install_feature
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.google.ar.sceneform.rendering.Light: float spotlightConeInner
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.RenderTarget$Builder$BuilderFinalizer mFinalizer
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_22
com.google.ar.sceneform.R$id: int disableHome
com.google.ar.sceneform.R$id: int async
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.ar.sceneform.R$attr: int buttonPanelSideLayout
com.google.ar.core.ImageMetadata: int FLASH_STATE
com.google.ar.sceneform.ux.R$attr: int drawableBottomCompat
com.google.ar.sceneform.ux.R$attr: int queryBackground
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.google.ar.core.TrackingFailureReason: int nativeCode
com.google.ar.sceneform.R$color: int abc_search_url_text
com.google.ar.sceneform.R$styleable: int Toolbar_popupTheme
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionMode
com.google.ar.sceneform.R$attr: int queryHint
com.google.ar.sceneform.ux.R$drawable: int abc_textfield_search_material
com.google.ar.sceneform.ux.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.google.ar.sceneform.R$styleable: int MenuGroup_android_enabled
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type SAMPLER_CUBEMAP
com.google.android.filament.NativeSurface: int mWidth
com.google.ar.sceneform.ux.R$id: int showCustom
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.google.ar.sceneform.R$color: int material_blue_grey_900
com.google.ar.sceneform.R$style: int Platform_ThemeOverlay_AppCompat
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_DrawerArrowToggle
com.google.ar.core.CameraConfig$TargetFps: com.google.ar.core.CameraConfig$TargetFps TARGET_FPS_30
com.google.ar.sceneform.R$id: int listMode
com.google.ar.sceneform.ux.R$layout: int abc_tooltip
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Matrix cachedWorldModelMatrixInverse
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.google.ar.sceneform.ux.R$id: int right_icon
com.google.ar.core.SharedCamera: com.google.ar.core.Session session
com.google.ar.sceneform.R$attr: int actionModeSelectAllDrawable
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_stacked_max_height
com.google.ar.sceneform.ux.R$styleable: int SearchView_submitBackground
com.google.ar.sceneform.R$styleable: int Toolbar_titleMargins
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_AutoCompleteTextView
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker frameUpdateTracker
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.google.ar.schemas.sceneform.ParameterInitDefType: byte CubemapSamplerInit
com.google.ar.sceneform.R$styleable: int ActionBar_divider
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.google.android.filament.Fence: long WAIT_FOR_EVER
com.google.ar.sceneform.ux.R$styleable: int[] ActivityChooserView
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.ar.sceneform.ux.R$color: int abc_tint_switch_track
com.google.ar.core.ImageMetadata: long nativeHandle
com.google.ar.sceneform.R$style: int Widget_AppCompat_ProgressBar
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.google.ar.sceneform.R$id: int accessibility_custom_action_25
com.google.ar.sceneform.R$attr: int actionModeCloseButtonStyle
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter LINEAR
com.google.ar.sceneform.R$attr: int windowNoTitle
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.google.ar.sceneform.R$color: int highlighted_text_material_dark
com.google.ar.sceneform.ux.R$styleable: int ActionBar_subtitleTextStyle
com.google.ar.sceneform.ux.R$attr: int switchStyle
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ListView_Menu
com.google.ar.core.Session$Feature: com.google.ar.core.Session$Feature SHARED_CAMERA
com.google.ar.core.Quaternion: float x
com.google.ar.sceneform.ux.R$string: int abc_menu_ctrl_shortcut_label
com.google.ar.sceneform.ux.R$attr: int navigationMode
com.google.ar.sceneform.R$drawable: int abc_edit_text_material
com.google.ar.sceneform.R$color: int abc_tint_edittext
com.google.ar.sceneform.ux.R$attr: int seekBarStyle
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar
com.google.ar.sceneform.R$layout: int notification_template_custom_big
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_overflow_padding_end_material
com.google.ar.sceneform.R$dimen: int hint_alpha_material_light
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_barLength
com.google.ar.sceneform.Node: java.lang.String name
com.google.ar.sceneform.R$id: int action_text
com.google.android.filament.VertexBuffer$QuatTangentContext: java.nio.Buffer outBuffer
com.google.ar.sceneform.R$layout: int abc_popup_menu_item_layout
com.google.ar.sceneform.rendering.PlaneRenderer: java.lang.String MATERIAL_SPOTLIGHT_RADIUS
com.google.ar.sceneform.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.google.ar.sceneform.R$id: int shortcut
com.google.ar.sceneform.rendering.Texture$Builder: int MAX_BITMAP_SIZE
androidx.window.core.Version: androidx.window.core.Version CURRENT
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_YBack_ZLeft
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.google.ar.sceneform.utilities.LoadHelper: java.lang.String TAG
com.google.ar.sceneform.R$color: int foreground_material_light
com.google.ar.sceneform.R$styleable: int ActionBar_elevation
com.google.ar.sceneform.assets.RenderableSource$RecenterMode: com.google.ar.sceneform.assets.RenderableSource$RecenterMode CENTER
com.google.ar.sceneform.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.google.ar.sceneform.R$id: int custom
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment CENTER
com.google.ar.sceneform.ux.R$styleable: int MenuView_android_horizontalDivider
com.google.ar.sceneform.ux.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionBar_TabText
com.google.ar.sceneform.R$attr: int font
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment: int Left
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB8UI
com.google.ar.sceneform.ux.R$attr: int editTextStyle
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Medium
com.google.ar.sceneform.ux.R$layout: int abc_alert_dialog_button_bar_material
com.google.ar.sceneform.ux.R$string: int abc_searchview_description_query
com.google.ar.sceneform.ux.R$id: int italic
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
com.google.ar.sceneform.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.google.ar.sceneform.R$drawable: int abc_btn_check_material_anim
com.google.ar.sceneform.ux.R$styleable: int SearchView_android_maxWidth
com.google.ar.schemas.lull.MaterialTextureUsage: int Light
com.google.ar.sceneform.ux.R$raw: int sceneform_plane_material
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState ERROR_INTERNAL
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.ar.sceneform.ux.BaseArFragment: boolean canRequestDangerousPermissions
com.google.ar.sceneform.R$dimen: int abc_dropdownitem_text_padding_right
com.google.ar.sceneform.R$attr: int titleMargins
com.google.ar.sceneform.ux.R$attr: int contentInsetStartWithNavigation
com.google.ar.sceneform.R$styleable: int SwitchCompat_trackTint
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.Converter defaultConverter
com.google.ar.sceneform.ux.R$styleable: int Toolbar_buttonGravity
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Caption
com.google.ar.core.ImageMetadata: int CONTROL_AE_LOCK
com.google.ar.schemas.lull.MaterialTextureUsage: int DiffuseColor
com.google.ar.schemas.lull.TextureTargetType: java.lang.String[] names
com.google.ar.core.ImageMetadata: int TONEMAP_MODE
com.google.ar.sceneform.ux.R$style: int TextAppearance_Compat_Notification
com.google.ar.sceneform.ux.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.google.ar.sceneform.R$styleable: int MenuItem_iconTintMode
com.google.ar.sceneform.assets.RenderableSource$SourceType: com.google.ar.sceneform.assets.RenderableSource$SourceType GLTF2
com.google.ar.sceneform.R$anim: int abc_slide_out_bottom
com.google.android.filament.RenderableManager: long mNativeObject
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
com.google.ar.sceneform.R$styleable: int SearchView_closeIcon
com.google.ar.sceneform.ux.BaseGestureRecognizer: java.util.ArrayList gestures
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableEndCompat
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.google.ar.sceneform.R$dimen: int tooltip_corner_radius
com.google.ar.sceneform.ux.R$styleable: int Toolbar_navigationContentDescription
com.google.ar.sceneform.AnchorNode: boolean wasTracking
com.google.ar.sceneform.ux.R$layout: int select_dialog_singlechoice_material
com.google.ar.sceneform.R$attr: int ratingBarStyleSmall
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.TextureInternalData textureInternalData
com.google.ar.sceneform.R$drawable: int abc_list_selector_disabled_holo_dark
com.google.ar.sceneform.ux.R$dimen: int abc_search_view_preferred_height
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.google.ar.sceneform.rendering.Color: float a
com.google.android.filament.BuildConfig: java.lang.String FLAVOR
com.google.ar.sceneform.R$dimen: int abc_action_bar_default_height_material
com.google.ar.sceneform.rendering.RenderableDefinition: int UV_SIZE
com.google.ar.schemas.lull.TextureFiltering: short NearestMipmapNearest
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA16UI
com.google.ar.sceneform.ux.R$layout: int abc_action_mode_bar
com.google.ar.schemas.lull.VariantDef: byte DataVec4
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleMargin
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Vec2us
com.google.ar.sceneform.R$style: int Widget_AppCompat_CompoundButton_Switch
com.google.android.filament.View$RenderQuality: com.google.android.filament.View$QualityLevel hdrColorBuffer
com.google.ar.sceneform.ux.R$dimen: int abc_switch_padding
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability UNKNOWN_ERROR
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.google.ar.sceneform.ux.R$string: int abc_searchview_description_voice
com.google.ar.sceneform.R$style: int Widget_AppCompat_PopupMenu
com.google.ar.sceneform.R$color: int material_deep_teal_500
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_CompactMenu
com.google.ar.sceneform.ux.R$raw: int sceneform_face_mesh
com.google.ar.schemas.lull.TextureTargetType: short CubeMap
com.google.ar.sceneform.R$attr: int subtitleTextStyle
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.ar.sceneform.R$string: int __arcore_install_feature
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R16UI
com.google.ar.sceneform.collision.Ray: com.google.ar.sceneform.math.Vector3 direction
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Inverse
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.math.Vector3 position
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type MAT4
com.google.ar.core.ImageMetadata: int STATISTICS_FACE_LANDMARKS
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.google.ar.sceneform.Sun: float LIGHT_ESTIMATE_OFFSET
com.google.ar.sceneform.math.MathHelper: float FLT_EPSILON
com.google.android.filament.android.UiHelper: boolean LOGGING
com.google.ar.sceneform.R$id: int accessibility_custom_action_26
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Button
com.google.android.filament.LightManager: long mNativeObject
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.core.AugmentedFace augmentedFace
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA8UI
com.google.ar.sceneform.ux.R$attr: int alertDialogCenterButtons
com.google.ar.sceneform.R$attr: int panelMenuListWidth
androidx.fragment.app.Fragment: boolean mMenuVisible
com.google.ar.core.ImageMetadata: int SECTION_FLASH_INFO
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format UNUSED
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_alphabeticShortcut
com.google.ar.sceneform.ux.R$attr: int actionBarWidgetTheme
com.google.ar.sceneform.ux.R$style: int Base_Animation_AppCompat_Dialog
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.google.ar.sceneform.R$string: int abc_searchview_description_clear
com.google.ar.sceneform.R$attr: int alertDialogCenterButtons
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode MODULATE
com.google.ar.sceneform.R$id: int accessibility_custom_action_16
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA32UI
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float directIntensityForFilament
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format RG
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.TwistGestureRecognizer twistGestureRecognizer
com.google.ar.sceneform.math.MathHelper: float MAX_DELTA
com.google.ar.sceneform.ux.R$dimen: int disabled_alpha_material_light
com.google.ar.sceneform.R$styleable: int View_paddingEnd
com.google.ar.sceneform.R$styleable: int ColorStateListItem_android_alpha
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarTheme
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
com.google.ar.sceneform.rendering.CameraStream: short[] CAMERA_INDICES
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: java.util.List triangleIndices
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_orderInCategory
com.google.ar.core.ImageMetadata: int TONEMAP_CURVE_BLUE
com.google.ar.sceneform.R$attr: int queryBackground
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Headline
com.google.ar.sceneform.rendering.AnimationData: com.google.ar.sceneform.rendering.AnimationData$Factory factory
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.google.ar.sceneform.rendering.PlaneRenderer: java.lang.String TAG
com.google.ar.sceneform.R$dimen: int abc_list_item_height_small_material
com.google.android.filament.Colors$RgbaType: com.google.android.filament.Colors$RgbaType PREMULTIPLIED_SRGB
com.google.ar.sceneform.R$styleable: int[] TextAppearance
com.google.ar.sceneform.ux.R$attr: int goIcon
com.google.ar.core.InstallActivity: com.google.ar.core.t lastEvent
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager
com.google.ar.sceneform.R$styleable: int ActionBar_indeterminateProgressStyle
com.google.ar.sceneform.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.ar.sceneform.rendering.FixedHeightViewSizer: float heightMeters
com.google.ar.sceneform.R$styleable: int[] SearchView
com.google.ar.sceneform.R$styleable: int MenuView_subMenuArrow
com.google.ar.sceneform.ux.R$style: int Base_V7_Theme_AppCompat
com.google.ar.sceneform.ux.R$attr: int searchHintIcon
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.google.ar.sceneform.ux.R$id: int textSpacerNoButtons
com.google.android.filament.MaterialInstance$IntElement: com.google.android.filament.MaterialInstance$IntElement[] $VALUES
com.google.ar.sceneform.R$id: int tag_screen_reader_focusable
com.google.ar.sceneform.ux.R$styleable: int AppCompatImageView_android_src
com.google.ar.sceneform.R$anim: int abc_tooltip_enter
com.google.ar.schemas.lull.OptionalBool: int True
com.google.ar.sceneform.ux.R$attr: int imageButtonStyle
com.google.ar.sceneform.ux.R$styleable: int MenuItem_iconTint
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Display1
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.google.ar.sceneform.R$drawable: int abc_list_selector_background_transition_holo_dark
com.google.ar.core.ImageMetadata: int SECTION_NOISE_REDUCTION
com.google.ar.sceneform.ux.R$styleable: int StateListDrawable_android_variablePadding
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.google.ar.sceneform.Node: int nameHash
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode DISABLED
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.google.ar.core.Config$GeospatialMode: com.google.ar.core.Config$GeospatialMode[] $VALUES
com.google.ar.sceneform.ux.R$id: int end
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionBar_TabBar
com.google.ar.sceneform.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.google.ar.sceneform.rendering.SkeletonRig: int BYTES_PER_BONE
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Vertex$UvCoordinate uvCoordinate
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.google.ar.sceneform.ux.R$layout: int __arcore_education
com.google.ar.sceneform.ux.R$integer: int abc_config_activityDefaultDur
com.google.android.filament.VertexBuffer: long mNativeObject
com.google.ar.sceneform.Scene: float DEFAULT_EXPOSURE
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.Texture faceMeshTexture
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.ar.sceneform.HitTestResult: com.google.ar.sceneform.Node node
com.google.ar.core.ImageMetadata: int SECTION_HOT_PIXEL
com.google.ar.sceneform.Node: int LOCAL_DIRTY_FLAGS
com.google.ar.sceneform.ux.ScaleController: float maxScale
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Button
com.google.ar.sceneform.R$styleable: int Toolbar_navigationContentDescription
com.google.ar.sceneform.R$layout: int abc_dialog_title_material
com.google.ar.sceneform.lullmodel.VariantDef: byte DataVec4
com.google.ar.sceneform.R$dimen: int tooltip_vertical_padding
com.google.ar.core.ImageMetadata: int SECTION_LENS
com.google.ar.sceneform.rendering.Renderer: float ARCORE_HDR_LIGHTING_CAMERA_ISO
com.google.ar.sceneform.ux.R$drawable: int abc_list_divider_mtrl_alpha
com.google.ar.core.ImageMetadata: int LENS_FILTER_DENSITY
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType USHORT3
com.google.ar.core.Point$OrientationMode: com.google.ar.core.Point$OrientationMode[] $VALUES
com.google.android.filament.Engine: com.google.android.filament.TransformManager mTransformManager
com.google.ar.sceneform.R$attr: int colorSwitchThumbNormal
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Light_Dialog
com.google.android.filament.View$DepthPrepass: com.google.android.filament.View$DepthPrepass ENABLED
com.google.ar.sceneform.ux.R$attr: int actionModeCloseDrawable
com.google.ar.sceneform.ux.R$attr: int buttonGravity
com.google.ar.schemas.sceneform.SamplerWrapMode: short MirroredRepeat
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableStartCompat
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.google.ar.sceneform.R$styleable: int AppCompatTextView_fontVariationSettings
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearanceListItem
com.google.ar.sceneform.ux.AugmentedFaceNode: java.util.ArrayList vertices
com.google.ar.sceneform.ux.GesturePointersUtility: android.util.DisplayMetrics displayMetrics
com.google.ar.sceneform.rendering.MaterialFactory: float DEFAULT_REFLECTANCE_PROPERTY
com.google.android.filament.Texture$1: int[] $SwitchMap$com$google$android$filament$Texture$Type
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda0: android.hardware.camera2.CameraDevice$StateCallback f$0
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.google.ar.sceneform.ux.R$styleable: int ActionBar_contentInsetRight
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.google.ar.sceneform.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.google.ar.sceneform.rendering.ViewRenderable$Builder: android.view.View view
com.google.ar.sceneform.R$styleable: int MenuItem_contentDescription
com.google.ar.sceneform.Node: int WORLD_POSITION_DIRTY
com.google.ar.sceneform.R$styleable: int Toolbar_title
com.google.ar.sceneform.ux.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.google.android.filament.Camera$Fov: com.google.android.filament.Camera$Fov[] $VALUES
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute POSITION
com.google.ar.sceneform.R$styleable: int FontFamilyFont_ttcIndex
com.google.ar.sceneform.rendering.ViewRenderable$Builder: java.util.OptionalInt resourceId
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.LoadGltfListener loadGltfListener
com.google.ar.sceneform.R$attr: int actionButtonStyle
com.google.ar.sceneform.utilities.SceneformBufferUtils: int DEFAULT_BLOCK_SIZE
com.google.ar.sceneform.R$styleable: int[] ViewBackgroundHelper
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_drawableSize
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement FLOAT4
com.google.ar.sceneform.R$id: int accessibility_custom_action_17
com.google.ar.sceneform.R$dimen: int hint_alpha_material_dark
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d IMAGE_PIXELS
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat ETC2_EAC_RGBA8
com.google.ar.sceneform.R$styleable: int Toolbar_maxButtonHeight
com.google.ar.sceneform.ux.BaseGesture: com.google.ar.sceneform.ux.BaseGesture$OnGestureEventListener eventListener
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState TASK_IN_PROGRESS
com.google.ar.sceneform.rendering.Color: float b
com.google.ar.sceneform.R$id: int ifRoom
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_buttonStyleSmall
com.google.ar.core.ImageMetadata: int LENS_STATE
com.google.ar.sceneform.ux.R$id: int action_bar_title
com.google.ar.sceneform.R$styleable: int Toolbar_logo
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_titleCondensed
com.google.ar.core.Config$CloudAnchorMode: com.google.ar.core.Config$CloudAnchorMode DISABLED
com.google.ar.sceneform.R$string: int abc_menu_enter_shortcut_label
com.google.ar.sceneform.rendering.RenderableInstance: java.lang.String TAG
com.google.ar.sceneform.R$style: int Theme_AppCompat_NoActionBar
com.google.ar.sceneform.R$style: int Base_V22_Theme_AppCompat
com.google.ar.sceneform.ux.R$attr: int tooltipFrameBackground
com.google.ar.sceneform.ux.R$id: int submenuarrow
com.google.ar.core.LightEstimate: long nativeSymbolTableHandle
com.google.ar.sceneform.R$id: int search_close_btn
com.google.ar.sceneform.ux.R$id: int withText
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.google.android.filament.Stream: long mNativeEngine
com.google.android.filament.Engine: long mNativeObject
com.google.ar.sceneform.R$id: int message
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_menuCategory
com.google.android.filament.Colors$RgbaType: com.google.android.filament.Colors$RgbaType PREMULTIPLIED_LINEAR
com.google.ar.sceneform.R$id: int accessibility_custom_action_6
com.google.ar.sceneform.ux.R$attr: int thickness
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_barLength
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type HALF
com.google.android.filament.TextureSampler$MagFilter: com.google.android.filament.TextureSampler$MagFilter[] $VALUES
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Large_Inverse
com.google.ar.sceneform.R$id: int action_divider
com.google.ar.sceneform.ux.R$attr: int windowNoTitle
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_ZFront_XLeft
com.google.ar.sceneform.R$color: int abc_secondary_text_material_dark
com.google.ar.sceneform.ux.R$drawable: int btn_radio_on_mtrl
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.google.ar.sceneform.ux.R$layout: int abc_select_dialog_material
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_fontFamily
com.google.ar.sceneform.ux.R$raw: int sceneform_opaque_colored_material
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace NEGATIVE_Y
com.google.android.filament.Texture$PixelBufferDescriptor: int left
com.google.ar.sceneform.R$id: int SHIFT
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.google.ar.sceneform.ux.R$drawable: int abc_seekbar_tick_mark_material
com.google.ar.sceneform.rendering.Light: float intensity
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod LAST_KNOWN_POSE
com.google.ar.sceneform.R$attr: int panelMenuListTheme
com.google.ar.sceneform.R$dimen: int tooltip_margin
com.google.ar.sceneform.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.google.ar.sceneform.R$style: int TextAppearance_Compat_Notification_Info
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Light_Dialog
com.google.ar.sceneform.R$attr: int lastBaselineToBottomHeight
com.google.ar.sceneform.ux.R$attr: int navigationIcon
com.google.ar.sceneform.R$id: int accessibility_custom_action_3
com.google.ar.sceneform.ux.R$styleable: int Spinner_android_prompt
com.google.ar.sceneform.ux.R$styleable: int CompoundButton_buttonTintMode
com.google.ar.sceneform.R$styleable: int AppCompatTheme_alertDialogTheme
com.google.android.filament.EntityManager$Holder: com.google.android.filament.EntityManager INSTANCE
com.google.ar.sceneform.ux.R$color: int material_grey_800
com.google.ar.sceneform.lullmodel.OptionalBool: int False
com.google.android.filament.Texture$Sampler: com.google.android.filament.Texture$Sampler[] $VALUES
com.google.ar.sceneform.R$attr: int titleMargin
com.google.ar.sceneform.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.google.ar.sceneform.ux.R$id: int search_src_text
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.google.ar.sceneform.R$raw: int sceneform_plane_material
com.google.ar.sceneform.rendering.CleanupRegistry: java.util.HashSet cleanupItemHashSet
com.google.ar.sceneform.R$string: int abc_menu_space_shortcut_label
com.google.android.filament.MaterialInstance$BooleanElement: com.google.android.filament.MaterialInstance$BooleanElement[] $VALUES
com.google.ar.sceneform.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.google.ar.sceneform.R$attr: int popupMenuStyle
com.google.ar.sceneform.R$style: int Widget_AppCompat_Button_Borderless
com.google.ar.sceneform.R$raw: int sceneform_camera_material
com.google.android.filament.RenderTarget: com.google.android.filament.Texture[] mTextures
com.google.ar.sceneform.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode ADD
com.google.ar.sceneform.R$style: int Theme_AppCompat_DialogWhenLarge
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement MAT4
com.google.ar.sceneform.Node: boolean active
com.google.ar.core.ImageMetadata: int CONTROL_AWB_MODE
com.google.ar.sceneform.ux.R$styleable: int MenuGroup_android_menuCategory
com.google.ar.sceneform.R$dimen: int abc_seekbar_track_background_height_material
androidx.fragment.app.Fragment: boolean mDetached
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_23
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.google.ar.core.LightEstimate$State: com.google.ar.core.LightEstimate$State NOT_VALID
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d TEXTURE_TEXELS
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionMode
com.google.ar.sceneform.R$attr: int actionOverflowButtonStyle
com.google.android.filament.View$DynamicResolutionOptions: float minScale
com.google.ar.sceneform.R$color: int button_material_dark
com.google.android.filament.View$DepthPrepass: int value
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute UV0
com.google.ar.sceneform.R$drawable: int abc_text_select_handle_right_mtrl_dark
com.google.android.filament.LightManager$ShadowOptions: float normalBias
com.google.ar.sceneform.rendering.Renderable$Builder: java.lang.Object registryId
androidx.fragment.app.Fragment: android.view.View mInnerView
com.google.ar.sceneform.R$attr: int colorError
com.google.ar.sceneform.R$attr: int windowActionModeOverlay
com.google.ar.sceneform.rendering.LightProbe: int RGB_BYTES_PER_PIXEL
com.google.ar.sceneform.R$dimen: int abc_dialog_fixed_height_minor
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.google.ar.sceneform.R$id: int wrap_content
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.google.ar.sceneform.R$id: int action_context_bar
com.google.ar.sceneform.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.google.ar.sceneform.R$color: int material_grey_800
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarStyle
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.google.ar.core.LightEstimate$State: int nativeCode
com.google.ar.core.InstallActivity: com.google.ar.core.ArCoreApk$UserMessageType messageType
com.google.flatbuffers.FlatBufferBuilder: boolean finished
com.google.ar.core.ImageMetadata: int DEPTH_START
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer$Builder$BuilderFinalizer mFinalizer
com.google.ar.sceneform.R$styleable: int[] StateListDrawableItem
com.google.ar.sceneform.ux.HandMotionView: com.google.ar.sceneform.ux.HandMotionAnimation animation
com.google.ar.sceneform.ux.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.google.ar.sceneform.ux.DragGesture: int pointerId
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.google.android.filament.Entity: int NULL
com.google.ar.core.ImageMetadata: int INFO_START
com.google.ar.sceneform.ux.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.ar.sceneform.R$attr: int windowFixedWidthMajor
com.google.ar.sceneform.ArSceneView: boolean isLightDirectionUpdateEnabled
com.google.ar.sceneform.rendering.Light$Type: com.google.ar.sceneform.rendering.Light$Type DIRECTIONAL
com.google.ar.sceneform.R$id: int image
com.google.ar.sceneform.ux.R$attr: int paddingStart
com.google.ar.sceneform.R$styleable: int AlertDialog_listLayout
com.google.ar.schemas.sceneform.ParameterInitDefType: byte ExternalSamplerInit
com.google.ar.sceneform.ux.R$style: int Base_V21_Theme_AppCompat_Light
com.google.ar.sceneform.R$drawable: int abc_ic_star_half_black_48dp
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.SwapChain swapChain
com.google.ar.sceneform.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.google.ar.sceneform.R$attr: int actionBarTheme
androidx.fragment.app.Fragment: int mContainerId
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_content_inset_with_nav
com.google.ar.sceneform.ux.R$id: int search_badge
com.google.ar.core.Config: long nativeSymbolTableHandle
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_fontStyle
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.google.ar.sceneform.R$color: int secondary_text_default_material_light
com.google.android.filament.Viewport: int left
com.google.ar.core.Config$GeospatialMode: com.google.ar.core.Config$GeospatialMode DISABLED
com.google.ar.core.PointCloud: com.google.ar.core.Session session
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionBar
com.google.ar.sceneform.ux.R$styleable: int GradientColorItem_android_offset
com.google.ar.sceneform.ux.R$style: int Base_AlertDialog_AppCompat_Light
com.google.ar.sceneform.ux.R$id: int tag_transition_group
com.google.ar.sceneform.R$style: int Base_V7_Theme_AppCompat_Dialog
com.google.ar.sceneform.ux.R$styleable: int[] Toolbar
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA16F
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_color
com.google.ar.sceneform.R$color: int ripple_material_light
com.google.ar.sceneform.ux.R$attr: int alertDialogStyle
com.google.ar.sceneform.ux.R$attr: int windowFixedHeightMajor
com.google.ar.sceneform.R$layout: int abc_screen_simple
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType BYTE2
com.google.ar.sceneform.rendering.Renderable: boolean isShadowReceiver
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DayNight
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode TRANSPARENT
com.google.ar.sceneform.R$anim: int abc_slide_in_bottom
com.google.ar.sceneform.ux.R$attr: int checkboxStyle
com.google.ar.sceneform.ux.R$string: int __arcore_continue
com.google.ar.sceneform.R$drawable: int notification_icon_background
com.google.ar.sceneform.ux.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
androidx.window.R$attr: int splitLayoutDirection
com.google.ar.sceneform.ux.R$id: int checked
com.google.ar.sceneform.R$id: int multiply
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewRenderableInternalData viewRenderableData
com.google.android.filament.TextureSampler$CompareMode: com.google.android.filament.TextureSampler$CompareMode COMPARE_TO_TEXTURE
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionButton
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_display_1_material
com.google.ar.sceneform.ux.R$color: int primary_text_default_material_dark
com.google.ar.sceneform.ux.R$attr: int listPreferredItemHeight
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
com.google.ar.sceneform.R$drawable: int abc_textfield_search_material
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Button_Colored
com.google.android.filament.Texture$PixelBufferDescriptor: int compressedSizeInBytes
com.google.ar.sceneform.ux.R$string: int abc_searchview_description_search
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat SRGB8_A8
com.google.ar.sceneform.math.Quaternion: float w
com.google.ar.sceneform.ux.R$raw: int sceneform_footprint
com.google.ar.schemas.lull.AxisSystem: int YUp_XBack_ZRight
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.google.ar.sceneform.ux.R$attr: int selectableItemBackground
com.google.ar.sceneform.ux.R$color: int tooltip_background_dark
com.google.ar.sceneform.ux.R$layout: int abc_action_bar_title_item
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker$Clock clock
com.google.ar.sceneform.ux.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType USER_ALREADY_INFORMED
com.google.ar.sceneform.R$styleable: int AppCompatTheme_editTextBackground
com.google.ar.sceneform.ux.R$dimen: int highlight_alpha_material_colored
com.google.android.filament.Fence$FenceStatus: com.google.android.filament.Fence$FenceStatus[] $VALUES
com.google.ar.sceneform.ux.R$dimen: int abc_button_inset_horizontal_material
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage: com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage$CubeMapPlane[] planes
com.google.ar.sceneform.ux.R$styleable: int Toolbar_subtitleTextAppearance
com.google.ar.sceneform.rendering.Material$Builder: java.util.concurrent.Callable inputStreamCreator
com.google.ar.sceneform.ux.R$dimen: int notification_media_narrow_margin
com.google.ar.sceneform.R$dimen: int abc_control_padding_material
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.ar.sceneform.ux.R$drawable: int abc_btn_check_to_on_mtrl_000
com.google.ar.sceneform.ux.R$layout: int notification_template_part_chronometer
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.google.ar.core.Quaternion: float w
com.google.ar.sceneform.R$id: int expanded_menu
com.google.ar.sceneform.ux.R$attr: int firstBaselineToTopHeight
com.google.ar.core.ImageMetadata: int LENS_INTRINSIC_CALIBRATION
com.google.ar.sceneform.R$layout: int abc_popup_menu_header_item_layout
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.ar.sceneform.ux.R$attr: int titleMargins
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.google.ar.sceneform.R$drawable: int abc_control_background_material
com.google.ar.sceneform.ux.R$color: int dim_foreground_material_dark
com.google.ar.sceneform.R$styleable: int ActionBar_background
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type INT4
com.google.ar.sceneform.R$styleable: int AlertDialog_multiChoiceItemLayout
com.google.ar.sceneform.collision.CollisionShape: com.google.ar.sceneform.utilities.ChangeId changeId
com.google.ar.sceneform.R$styleable: int AppCompatTheme_imageButtonStyle
com.google.android.filament.BuildConfig: java.lang.String VERSION_NAME
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading UNLIT
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.google.ar.sceneform.ux.R$id: int action_bar_subtitle
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format DEPTH_COMPONENT
com.google.ar.sceneform.lullmodel.VariantDef: byte DataInt
com.google.ar.sceneform.R$attr: int listPreferredItemHeightLarge
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.google.ar.sceneform.ux.R$attr: int titleMarginTop
com.google.ar.sceneform.ux.R$attr: int backgroundTintMode
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_31
com.google.ar.sceneform.R$id: int progress_circular
com.google.ar.sceneform.R$attr: int dialogCornerRadius
com.google.ar.sceneform.ux.R$dimen: int notification_large_icon_width
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOLVING_LOCALIZATION_NO_MATCH
com.google.ar.core.ImageMetadata: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_android_textAppearance
com.google.ar.sceneform.ux.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.google.ar.sceneform.ux.R$attr: int actionModePasteDrawable
com.google.ar.sceneform.R$styleable: int PopupWindow_android_popupBackground
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState ERROR_GEOSPATIAL_MODE_DISABLED
com.google.ar.sceneform.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.google.ar.sceneform.R$string: int abc_capital_off
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Subhead
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_PopupMenu
com.google.ar.sceneform.ux.R$styleable: int Toolbar_collapseIcon
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.google.ar.sceneform.R$attr: int titleTextAppearance
com.google.ar.sceneform.ux.R$string: int __arcore_install_app
com.google.ar.sceneform.NodeParent: java.util.List unmodifiableChildren
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.ar.sceneform.R$attr: int drawableTint
com.google.ar.sceneform.ux.R$attr: int homeLayout
com.google.ar.sceneform.Node: int WORLD_TRANSFORM_DIRTY
com.google.ar.sceneform.R$id: int action_container
com.google.android.filament.Engine$Backend: com.google.android.filament.Engine$Backend VULKAN
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_SeekBar_Discrete
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorAccent
com.google.ar.sceneform.R$styleable: int Toolbar_navigationIcon
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA32F
com.google.ar.sceneform.R$attr: int drawableTopCompat
com.google.android.filament.Engine$Backend: com.google.android.filament.Engine$Backend OPENGL
com.google.ar.schemas.lull.LayoutFillOrder: java.lang.String[] names
com.google.ar.sceneform.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.google.ar.sceneform.ux.R$drawable: int notification_bg_low
com.google.ar.sceneform.R$attr: int listPreferredItemPaddingRight
com.google.ar.sceneform.ux.R$attr: int actionModeCopyDrawable
com.google.ar.sceneform.R$styleable: int MenuItem_android_id
com.google.ar.core.ArCoreApk$UserMessageType: int nativeCode
com.google.ar.sceneform.NodeParent: java.util.ArrayList iterableChildren
com.google.ar.sceneform.ux.R$style: int Base_V28_Theme_AppCompat
com.google.ar.sceneform.R$attr: int backgroundSplit
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_android_orientation
com.google.ar.core.ImageMetadata: int CONTROL_EFFECT_MODE
com.google.ar.sceneform.R$styleable: int[] ActionMenuItemView
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type INT
com.google.ar.sceneform.R$style: int Widget_AppCompat_RatingBar_Small
com.google.ar.sceneform.R$attr: int trackTint
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Light
com.google.ar.sceneform.R$color: int abc_tint_spinner
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
com.google.ar.sceneform.ux.R$drawable: int abc_textfield_default_mtrl_alpha
com.google.ar.sceneform.ux.R$attr: int actionBarTabStyle
com.google.ar.sceneform.ux.R$attr: int fontProviderFetchStrategy
com.google.ar.sceneform.R$integer: int config_tooltipAnimTime
com.google.ar.sceneform.R$styleable: int GradientColor_android_type
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter magFilter
com.google.ar.schemas.lull.AxisSystem: int Unspecified
com.google.ar.sceneform.R$styleable: int Toolbar_titleTextColor
com.google.ar.sceneform.ux.R$dimen: int abc_control_inset_material
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: com.google.ar.sceneform.rendering.Material material
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_icon
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.google.ar.sceneform.ux.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.google.ar.sceneform.R$styleable: int GradientColor_android_startColor
com.google.ar.sceneform.rendering.LightProbe: java.nio.ByteBuffer cubemapBuffer
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda0: android.hardware.camera2.CameraDevice f$1
com.google.ar.sceneform.ux.R$attr: int buttonIconDimen
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Dialog
com.google.ar.sceneform.R$id: int action_bar_spinner
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG16UI
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_track
com.google.ar.sceneform.ux.R$layout: int abc_search_dropdown_item_icons_2line
com.google.ar.sceneform.AnchorNode: java.lang.String TAG
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_INTERNAL
com.google.ar.sceneform.ux.R$attr: int iconTint
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_endColor
com.google.ar.sceneform.ux.R$layout: int select_dialog_item_material
com.google.ar.sceneform.R$dimen: int notification_content_margin_start
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.google.android.filament.android.UiHelper$ContextErrorPolicy: com.google.android.filament.android.UiHelper$ContextErrorPolicy DONT_CHECK
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_CompoundButton_Switch
com.google.ar.sceneform.ux.R$attr: int actionButtonStyle
com.google.ar.sceneform.math.Vector3: float y
com.google.ar.schemas.lull.AxisSystem: int ZUp_YFront_XRight
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.ar.sceneform.ux.R$styleable: int SearchView_searchIcon
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type COMPRESSED
com.google.ar.sceneform.R$id: int withText
com.google.ar.sceneform.collision.Sphere: float radius
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason INSUFFICIENT_FEATURES
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_fixed_width_minor
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.google.ar.sceneform.R$styleable: int AppCompatTextView_android_textAppearance
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.google.ar.sceneform.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.IndirectLight indirectLight
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.google.ar.sceneform.ux.R$styleable: int ActionBar_logo
com.google.ar.sceneform.rendering.R$string: int __arcore_continue
com.google.android.filament.View: com.google.android.filament.Camera mCamera
com.google.ar.sceneform.R$id: int tag_accessibility_heading
com.google.ar.sceneform.R$styleable: int MenuView_android_headerBackground
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.google.ar.sceneform.rendering.Light: float spotlightConeOuter
com.google.ar.sceneform.ux.R$styleable: int MenuView_android_itemBackground
com.google.ar.sceneform.ux.R$color: int material_grey_300
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.Renderer renderer
com.google.flatbuffers.FlatBufferBuilder: int[] vtable
com.google.ar.sceneform.R$attr: int contentInsetEndWithActions
com.google.ar.sceneform.R$drawable: int notification_bg_low
com.google.ar.sceneform.ux.R$styleable: int ActionBar_elevation
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_CLOUD_ID_NOT_FOUND
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.collision.CollisionShape collisionShape
com.google.ar.sceneform.ux.HandMotionView: long ANIMATION_SPEED_MS
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_textAllCaps
com.google.ar.sceneform.R$id: int time
com.google.ar.sceneform.R$styleable: int AppCompatTextHelper_android_drawableStart
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Large
com.google.ar.schemas.sceneform.SamplerUsageType: short Normal
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_spinBars
com.google.ar.sceneform.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.google.ar.sceneform.R$styleable: int GradientColor_android_startX
com.google.ar.sceneform.Scene: java.lang.String DEFAULT_LIGHTPROBE_ASSET_NAME
com.google.ar.sceneform.ux.R$id: int buttonPanel
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionButtonStyle
com.google.ar.sceneform.rendering.SkeletonRig: com.google.ar.sceneform.rendering.SkeletonRig$Factory factory
com.google.ar.sceneform.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOLVING_SDK_VERSION_TOO_NEW
com.google.ar.sceneform.ux.R$dimen: int disabled_alpha_material_dark
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Title
com.google.ar.schemas.sceneform.LightingCubeFaceType: int ny
com.google.ar.sceneform.ux.R$styleable: int MenuGroup_android_orderInCategory
com.google.ar.sceneform.ux.R$id: int __arcore_continueButton
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.google.ar.sceneform.R$styleable: int FontFamilyFont_fontStyle
com.google.ar.sceneform.ux.R$attr: int activityChooserViewStyle
com.google.ar.sceneform.ux.R$attr: int paddingBottomNoButtons
com.google.ar.sceneform.ux.R$color: int primary_material_light
com.google.ar.sceneform.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float DEFAULT_AMBIENT_SH_SCALE_FOR_FILAMENT
com.google.ar.sceneform.ux.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.math.Vector3 bonePosition
com.google.android.filament.MaterialInstance$BooleanElement: com.google.android.filament.MaterialInstance$BooleanElement BOOL2
com.google.ar.schemas.lull.TextureWrap: short MirroredRepeat
com.google.ar.sceneform.ux.R$attr: int windowFixedHeightMinor
com.google.ar.sceneform.R$style: int Base_V21_Theme_AppCompat
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_list_padding_top_no_title
com.google.ar.sceneform.R$id: int submenuarrow
com.google.ar.sceneform.R$id: int accessibility_custom_action_7
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.View view
com.google.ar.sceneform.ux.R$dimen: int hint_pressed_alpha_material_light
com.google.ar.sceneform.collision.Ray: com.google.ar.sceneform.math.Vector3 origin
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: java.util.List triangleIndices
com.google.ar.sceneform.R$styleable: int StateListDrawable_android_dither
com.google.ar.sceneform.rendering.Renderer: float DEFAULT_CAMERA_ISO
com.google.ar.sceneform.R$id: int search_edit_frame
com.google.ar.core.ImageMetadata: int SECTION_REQUEST
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.google.ar.sceneform.R$layout: int abc_list_menu_item_layout
com.google.ar.sceneform.R$dimen: int highlight_alpha_material_colored
com.google.ar.sceneform.ux.R$style: int Platform_V21_AppCompat_Light
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
com.google.ar.sceneform.ux.R$attr: int measureWithLargestChild
com.google.ar.sceneform.ux.R$drawable: int abc_seekbar_track_material
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
com.google.ar.sceneform.ux.R$id: int edit_query
com.google.ar.sceneform.rendering.LightProbe: java.lang.String TAG
com.google.ar.schemas.lull.VertexAttributeUsage: int Invalid
com.google.ar.sceneform.ux.R$attr: int windowActionBarOverlay
com.google.android.filament.Texture$PrefilterOptions: boolean mirror
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.android.filament.Skybox$Builder: long mNativeBuilder
com.google.ar.sceneform.ux.R$color: int abc_secondary_text_material_light
com.google.ar.sceneform.R$styleable: int SwitchCompat_android_thumb
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Large_Inverse
com.google.ar.core.ImageMetadata: int SECTION_JPEG
com.google.ar.sceneform.R$id: int CTRL
com.google.ar.sceneform.R$attr: int subtitleTextAppearance
com.google.ar.sceneform.ux.R$color: int primary_text_disabled_material_light
com.google.ar.sceneform.R$styleable: int[] ActionBarLayout
com.google.ar.sceneform.ux.R$string: int search_menu_title
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_XBack_YLeft
com.google.ar.sceneform.R$dimen: int abc_config_prefDialogWidth
com.google.android.filament.Texture$Usage: int COLOR_ATTACHMENT
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type UINT3
com.google.ar.core.Config$DepthMode: int nativeCode
com.google.flatbuffers.Constants: int SIZE_PREFIX_LENGTH
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_alertDialogStyle
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.google.android.filament.Colors$1: int[] $SwitchMap$com$google$android$filament$Colors$Conversion
com.google.ar.sceneform.ux.R$attr: int alpha
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type FLOAT
com.google.ar.sceneform.ux.R$style: int Base_DialogWindowTitle_AppCompat
com.google.ar.sceneform.R$dimen: int notification_subtext_size
com.google.ar.sceneform.ux.R$id: int src_atop
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Body1
com.google.ar.sceneform.R$drawable: int abc_btn_borderless_material
com.google.ar.sceneform.ux.R$styleable: int AppCompatImageView_tint
com.google.ar.sceneform.rendering.Renderable$Builder: boolean isGltf
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA8_SNORM
com.google.ar.sceneform.R$color: int primary_material_light
com.google.android.filament.View$QualityLevel: com.google.android.filament.View$QualityLevel LOW
com.google.ar.sceneform.NodeParent: boolean isIterableChildrenDirty
com.google.ar.sceneform.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_ZBack_YRight
com.google.ar.sceneform.ux.R$id: int SHIFT
com.google.ar.schemas.sceneform.RenderFlags: byte DoNotReceiveShadows
com.google.ar.sceneform.ux.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.google.ar.sceneform.ux.R$attr: int actionBarItemBackground
com.google.ar.sceneform.R$dimen: int abc_list_item_height_material
com.google.ar.sceneform.utilities.ChangeId: int EMPTY_ID
com.google.ar.sceneform.R$layout: int abc_expanded_menu_layout
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_shadowRadius
com.google.ar.sceneform.ux.R$drawable: int btn_radio_off_to_on_mtrl_animation
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Dialog_MinWidth
com.google.ar.sceneform.rendering.R$raw: int sceneform_opaque_textured_material
com.google.ar.sceneform.ux.R$id: int spacer
com.google.ar.core.ImageMetadata: int SENSOR_GREEN_SPLIT
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
com.google.ar.schemas.lull.MaterialTextureUsage: int Metallic
com.google.ar.core.ImageMetadata: int CONTROL_AE_TARGET_FPS_RANGE
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format RGBA
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Menu
com.google.ar.schemas.lull.TextureFiltering: java.lang.String[] names
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_endY
com.google.ar.sceneform.ux.R$attr: int collapseContentDescription
com.google.ar.sceneform.R$layout: int support_simple_spinner_dropdown_item
com.google.ar.sceneform.ux.R$drawable: int notification_action_background
com.google.ar.sceneform.ux.R$layout: int select_dialog_multichoice_material
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.PinchGestureRecognizer pinchGestureRecognizer
com.google.ar.sceneform.ux.R$attr: int buttonBarStyle
com.google.ar.sceneform.ux.R$color: int material_grey_850
com.google.ar.sceneform.ux.R$attr: int textAppearanceListItemSmall
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability UNSUPPORTED_DEVICE_NOT_CAPABLE
com.google.ar.sceneform.ux.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.google.ar.sceneform.R$drawable: int abc_list_selector_holo_dark
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_10
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState ERROR_INTERNAL
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.google.ar.sceneform.R$styleable: int AppCompatTheme_buttonStyle
com.google.ar.sceneform.R$styleable: int AlertDialog_showTitle
com.google.android.filament.Material$Parameter$Precision: com.google.android.filament.Material$Parameter$Precision MEDIUM
com.google.ar.sceneform.ux.R$raw: int sceneform_opaque_textured_material
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_XFront_ZLeft
com.google.ar.sceneform.ux.R$color: int material_grey_600
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.google.android.filament.Fence: long mNativeObject
com.google.ar.sceneform.Camera: int FALLBACK_VIEW_HEIGHT
com.google.flatbuffers.Constants: int SIZEOF_FLOAT
com.google.ar.sceneform.R$attr: int textAppearanceSmallPopupMenu
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.ResourceManager instance
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_menu_material
com.google.ar.core.CameraConfigFilter: long nativeSymbolTableHandle
com.google.ar.sceneform.ux.R$styleable: int[] ButtonBarLayout
com.google.ar.sceneform.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.google.ar.sceneform.ux.R$styleable: int[] AnimatedStateListDrawableCompat
com.google.ar.sceneform.Node: java.util.ArrayList lifecycleListeners
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.google.ar.sceneform.R$color: int primary_material_dark
com.google.ar.sceneform.ux.R$attr: int track
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability UNKNOWN_TIMED_OUT
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.google.ar.sceneform.R$styleable: int[] AnimatedStateListDrawableCompat
com.google.ar.sceneform.ux.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOURCE_EXHAUSTED
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.google.ar.sceneform.ux.R$attr: int backgroundStacked
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.google.ar.sceneform.ux.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.google.ar.sceneform.rendering.ThreadPools: java.util.concurrent.Executor mainExecutor
com.google.ar.sceneform.R$attr: int actionModeCopyDrawable
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.google.ar.sceneform.R$dimen: int abc_text_size_caption_material
com.google.ar.schemas.sceneform.SamplerMinFilter: short Nearest
com.google.ar.core.GeospatialPose: com.google.ar.core.Session session
com.google.ar.sceneform.ux.R$attr: int colorError
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.rendering.IRenderableInternalData renderableData
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod[] $VALUES
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.BaseTransformableNode selectedNode
com.google.ar.sceneform.R$dimen: int abc_action_bar_content_inset_with_nav
com.google.ar.schemas.lull.VariantDef: byte DataBytes
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionBar
com.google.ar.sceneform.rendering.LightProbe: float LIGHT_ESTIMATE_OFFSET
com.google.ar.sceneform.ux.R$dimen: int notification_main_column_padding_top
com.google.ar.sceneform.ux.R$attr: int contentInsetEndWithActions
com.google.ar.sceneform.R$id: int showTitle
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 localPosition
com.google.android.filament.android.UiHelper$TextureViewHandler: android.view.Surface mSurface
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType APPLICATION
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionMode
com.google.android.filament.IndexBuffer$Builder$IndexType: com.google.android.filament.IndexBuffer$Builder$IndexType UINT
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_checkable
com.google.ar.sceneform.R$styleable: int Spinner_android_dropDownWidth
com.google.ar.sceneform.ux.R$id: int notification_main_column
com.google.ar.sceneform.ux.R$color: int primary_text_disabled_material_dark
com.google.ar.sceneform.ux.R$attr: int thumbTintMode
com.google.ar.sceneform.R$attr: int thickness
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.google.ar.sceneform.R$attr: int actionBarDivider
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_visible
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DXT1_RGBA
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type DIRECTIONAL
com.google.ar.sceneform.ux.R$drawable: int abc_scrubber_track_mtrl_alpha
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: java.lang.reflect.Constructor engineInit
com.google.ar.sceneform.R$id: int list_item
com.google.ar.sceneform.ux.R$id: int tag_accessibility_actions
com.google.ar.sceneform.ux.R$drawable: int abc_ic_star_half_black_48dp
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_centerColor
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode HORIZONTAL_AND_VERTICAL
com.google.ar.sceneform.R$attr: int progressBarStyle
com.google.ar.sceneform.R$color: int abc_btn_colored_borderless_text_material
com.google.ar.sceneform.ux.R$color: int bright_foreground_inverse_material_dark
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.google.ar.sceneform.R$attr: int borderlessButtonStyle
com.google.ar.sceneform.lullmodel.VariantDef: byte NONE
com.google.ar.sceneform.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.google.android.filament.View$AmbientOcclusionOptions: float power
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionDropDownStyle
com.google.android.filament.RenderableManager: java.lang.String LOG_TAG
com.google.ar.sceneform.ux.R$style: int Base_V7_Widget_AppCompat_EditText
com.google.ar.sceneform.collision.Plane: com.google.ar.sceneform.math.Vector3 normal
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Vec3f
com.google.ar.sceneform.R$layout: int select_dialog_multichoice_material
com.google.ar.sceneform.rendering.ViewRenderable: boolean isInitialized
com.google.ar.sceneform.R$styleable: int[] LinearLayoutCompat
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Display3
com.google.ar.sceneform.R$styleable: int ActionMode_backgroundSplit
com.google.ar.sceneform.R$styleable: int AlertDialog_buttonPanelSideLayout
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.window.core.Bounds: int left
com.google.ar.sceneform.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.google.ar.sceneform.SceneView: boolean isInitialized
com.google.ar.sceneform.rendering.PlaneRenderer: float DEFAULT_TEXTURE_WIDTH
com.google.ar.sceneform.R$color: int background_material_light
com.google.ar.sceneform.ux.R$attr: int iconifiedByDefault
com.google.ar.sceneform.rendering.LightProbe: com.google.android.filament.Texture reflectCubemap
com.google.ar.sceneform.ux.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat EAC_RG11
com.google.ar.sceneform.ux.TranslationController: float ROTATION_DOT_THRESHOLD
com.google.ar.sceneform.R$id: int search_src_text
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_RatingBar
com.google.ar.sceneform.ux.R$styleable: int MenuView_android_itemTextAppearance
com.google.ar.sceneform.R$attr: int textAppearanceLargePopupMenu
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Toolbar
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.google.ar.sceneform.R$styleable: int AppCompatSeekBar_android_thumb
androidx.fragment.app.Fragment: int mTargetRequestCode
com.google.ar.core.ImageMetadata: int SECTION_BLACK_LEVEL
com.google.ar.sceneform.ux.R$attr: int dropDownListViewStyle
com.google.ar.sceneform.ux.R$attr: int drawableSize
com.google.ar.sceneform.R$styleable: int GradientColor_android_centerX
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_seekBarStyle
com.google.ar.sceneform.ux.R$attr: int controlBackground
com.google.ar.sceneform.ux.R$attr: int dialogPreferredPadding
com.google.ar.sceneform.R$attr: int itemPadding
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Metallic
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.ar.sceneform.R$id: int always
com.google.ar.sceneform.R$id: int notification_background
com.google.ar.sceneform.ux.R$attr: int listChoiceBackgroundIndicator
com.google.ar.sceneform.ux.R$drawable: int abc_list_pressed_holo_dark
com.google.ar.sceneform.R$styleable: int ButtonBarLayout_allowStacking
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.google.ar.sceneform.ux.R$string: int abc_action_bar_up_description
com.google.ar.sceneform.ux.R$drawable: int abc_ratingbar_small_material
com.google.android.filament.View$QualityLevel: com.google.android.filament.View$QualityLevel MEDIUM
com.google.ar.schemas.sceneform.ParameterInitDefType: byte NullInit
com.google.ar.sceneform.ux.TransformableNode: com.google.ar.sceneform.ux.TranslationController translationController
com.google.ar.sceneform.ux.R$styleable: int ActionBarLayout_android_layout_gravity
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Vec4f
com.google.ar.sceneform.assets.RenderableSource: com.google.ar.sceneform.assets.RenderableSource$SourceType sourceType
com.google.ar.sceneform.ux.R$attr: int listPreferredItemHeightSmall
androidx.fragment.app.Fragment: boolean mUserVisibleHint
com.google.ar.sceneform.R$styleable: int MenuItem_actionLayout
com.google.ar.sceneform.utilities.ChangeId: int id
com.google.ar.sceneform.ux.R$drawable: int notification_tile_bg
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.ar.sceneform.ux.R$drawable: int abc_ratingbar_material
com.google.ar.sceneform.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.google.ar.sceneform.R$color: int button_material_light
com.google.ar.sceneform.ux.ScaleController: float LERP_SPEED
com.google.ar.sceneform.R$attr: int theme
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type UINT2
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.rendering.Renderer renderer
com.google.ar.sceneform.ux.DragGesture: com.google.ar.sceneform.math.Vector3 position
com.google.ar.sceneform.ux.R$attr: int voiceIcon
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowActionBar
com.google.ar.sceneform.R$drawable: int abc_ic_star_black_48dp
com.google.ar.sceneform.R$styleable: int SearchView_queryBackground
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Vec2f
com.google.ar.sceneform.ux.R$attr: int buttonBarNegativeButtonStyle
com.google.ar.sceneform.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState ENABLED
com.google.ar.sceneform.ux.R$attr: int alertDialogTheme
com.google.ar.core.PlaybackStatus: int nativeCode
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.google.ar.sceneform.R$style: int Platform_V25_AppCompat_Light
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda2: android.hardware.camera2.CameraDevice f$1
com.google.ar.sceneform.ux.R$layout: int abc_popup_menu_header_item_layout
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.ar.sceneform.ux.R$styleable: int SearchView_closeIcon
com.google.ar.sceneform.ux.R$styleable: int ColorStateListItem_android_alpha
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorPrimaryDark
com.google.ar.schemas.sceneform.SamplerMinFilter: short Linear
com.google.ar.sceneform.rendering.Renderer: java.util.List mirrors
com.google.ar.sceneform.R$id: int tag_unhandled_key_listeners
com.google.ar.sceneform.ux.R$styleable: int MenuView_android_verticalDivider
com.google.ar.sceneform.R$attr: int editTextStyle
com.google.android.filament.View$DepthPrepass: com.google.android.filament.View$DepthPrepass DISABLED
com.google.ar.sceneform.ux.R$attr: int autoSizePresetSizes
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
com.google.ar.sceneform.R$color: int accent_material_light
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry materialCleanupRegistry
com.google.ar.sceneform.Node: com.google.ar.sceneform.NodeParent parent
com.google.ar.sceneform.R$styleable: int Toolbar_android_gravity
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableBottomCompat
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.google.ar.sceneform.R$styleable: int[] AlertDialog
com.google.ar.sceneform.ux.R$id: int screen
com.google.ar.schemas.sceneform.SamplerCompareMode: java.lang.String[] names
com.google.ar.sceneform.ux.R$id: int text2
com.google.ar.schemas.lull.MaterialTextureUsage: int Height
com.google.ar.core.ImageMetadata: int LENS_RADIAL_DISTORTION
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.google.ar.sceneform.R$attr: int background
com.google.ar.sceneform.R$drawable: int notification_bg_low_normal
com.google.ar.sceneform.R$attr: int switchMinWidth
com.google.ar.sceneform.ux.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.google.ar.sceneform.ux.R$attr: int popupWindowStyle
com.google.ar.core.CameraConfig$DepthSensorUsage: com.google.ar.core.CameraConfig$DepthSensorUsage[] $VALUES
com.google.ar.core.ImageMetadata: int SENSOR_DYNAMIC_BLACK_LEVEL
com.google.ar.sceneform.collision.Box: java.lang.String TAG
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.google.ar.sceneform.ux.R$attr: int progressBarStyle
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
com.google.ar.sceneform.collision.Sphere: java.lang.String TAG
com.google.ar.sceneform.R$id: int title
com.google.ar.sceneform.ux.R$attr: int ratingBarStyleSmall
com.google.ar.sceneform.ux.R$id: int info
com.google.android.filament.TextureSampler$WrapMode: com.google.android.filament.TextureSampler$WrapMode MIRRORED_REPEAT
com.google.ar.schemas.lull.TextureFiltering: short Linear
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
com.google.ar.sceneform.ux.R$id: int icon
com.google.ar.schemas.lull.VariantDef: byte DataQuat
com.google.flatbuffers.Struct: java.nio.ByteBuffer bb
com.google.ar.sceneform.ux.R$attr: int actionBarTabBarStyle
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.google.ar.sceneform.R$styleable: int PopupWindow_android_popupAnimationStyle
com.google.ar.sceneform.R$id: int line3
com.google.ar.sceneform.ux.R$string: int abc_menu_shift_shortcut_label
com.google.ar.sceneform.ux.R$dimen: int abc_progress_bar_height_material
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Caption
com.google.ar.sceneform.rendering.Renderable$Builder: java.util.function.Function uriResolver
com.google.ar.sceneform.R$dimen: int notification_top_pad
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Light_DarkActionBar
com.google.ar.sceneform.R$styleable: int[] FontFamily
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_ActionBar
com.google.ar.sceneform.rendering.R$id: int __arcore_cancelButton
com.google.ar.sceneform.utilities.ArCoreVersion: int VERSION_CODE_1_3
com.google.ar.sceneform.ux.R$attr: int fontProviderPackage
com.google.ar.sceneform.ArSceneView: java.lang.String REPORTED_ENGINE_VERSION
com.google.ar.schemas.lull.AxisSystem: int ZUp_XFront_YLeft
com.google.ar.sceneform.R$attr: int tickMarkTint
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
com.google.ar.sceneform.ux.R$id: int action_menu_presenter
com.google.ar.sceneform.R$attr: int textAppearancePopupMenuHeader
com.google.ar.sceneform.ux.R$dimen: int abc_panel_menu_list_width
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.google.ar.sceneform.R$id: int default_activity_button
com.google.ar.sceneform.ux.R$bool: int abc_action_bar_embed_tabs
com.google.ar.sceneform.ux.R$id: int listMode
com.google.ar.sceneform.math.Quaternion: float z
com.google.ar.sceneform.rendering.Renderable: java.util.ArrayList materialNames
com.google.android.filament.View$DynamicResolutionOptions: float targetFrameTimeMilli
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction ALWAYS
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_elevation_material
com.google.ar.core.Session: java.lang.String TAG
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker frameTotalTracker
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarStyle
com.google.ar.sceneform.rendering.ResourceManager: java.util.ArrayList resourceHolders
com.google.ar.sceneform.ux.R$anim: int abc_popup_enter
com.google.ar.sceneform.Node: com.google.ar.sceneform.Node$OnTouchListener onTouchListener
com.google.ar.sceneform.rendering.Renderer: com.google.ar.sceneform.rendering.CameraProvider cameraProvider
com.google.ar.schemas.sceneform.ParameterInitDefType: byte ScalarInit
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.google.ar.sceneform.ux.R$styleable: int RecycleListView_paddingTopNoTitle
com.google.ar.schemas.lull.VariantDef: byte DataBool
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.google.ar.sceneform.rendering.ExternalTexture: com.google.android.filament.Stream filamentStream
com.google.ar.sceneform.R$styleable: int TextAppearance_textLocale
com.google.ar.sceneform.R$attr: int buttonBarButtonStyle
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Body1
com.google.ar.sceneform.R$id: int buttonPanel
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.RenderableDefinition definition
com.google.ar.core.ImageMetadata: int SECTION_SENSOR
com.google.ar.sceneform.R$color: int tooltip_background_dark
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.google.ar.sceneform.ux.R$color: int background_material_light
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.google.ar.sceneform.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.google.ar.sceneform.ux.R$styleable: int ViewBackgroundHelper_backgroundTint
com.google.ar.sceneform.rendering.Light: java.util.ArrayList changedListeners
com.google.ar.core.LightEstimate: long nativeHandle
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.ar.sceneform.R$id: int notification_main_column_container
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.google.ar.core.ImageMetadata: int CONTROL_SCENE_MODE
com.google.ar.sceneform.R$layout: int abc_list_menu_item_icon
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Vec4ub
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableTint
com.google.ar.sceneform.ux.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.google.ar.sceneform.R$styleable: int MenuItem_showAsAction
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type UINT
com.google.ar.sceneform.ux.R$styleable: int StateListDrawableItem_android_drawable
com.google.ar.sceneform.ux.R$id: int action_mode_close_button
com.google.ar.sceneform.ux.R$dimen: int abc_control_corner_material
com.google.ar.sceneform.R$style: int Widget_AppCompat_SearchView
com.google.ar.sceneform.ux.R$attr: int actionBarSize
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: java.lang.String TAG
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.math.Vector3 direction
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionBar_Solid
com.google.ar.sceneform.R$integer: int abc_config_activityDefaultDur
com.google.ar.sceneform.ux.R$styleable: int Toolbar_android_gravity
com.google.ar.sceneform.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.google.ar.sceneform.ux.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.google.ar.sceneform.R$drawable: int abc_ic_star_black_16dp
com.google.ar.sceneform.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.google.ar.sceneform.R$drawable: int abc_text_select_handle_left_mtrl_dark
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionMode
com.google.ar.core.Quaternion: float z
com.google.ar.sceneform.R$styleable: int SwitchCompat_thumbTint
com.google.ar.core.ImageMetadata: int LENS_OPTICAL_STABILIZATION_MODE
com.google.ar.sceneform.ux.R$attr: int listLayout
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.google.ar.sceneform.R$dimen: int abc_action_bar_overflow_padding_start_material
com.google.ar.sceneform.R$drawable: int abc_seekbar_thumb_material
com.google.ar.sceneform.R$color: int material_grey_100
com.google.ar.sceneform.ux.R$attr: int windowFixedWidthMajor
com.google.ar.sceneform.ux.R$attr: int actionModeFindDrawable
com.google.ar.sceneform.resources.SharedReference: int referenceCount
com.google.ar.core.ImageMetadata: int TONEMAP_PRESET_CURVE
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.google.ar.sceneform.ux.R$drawable: int abc_text_select_handle_left_mtrl_light
com.google.ar.sceneform.R$style: int Base_Animation_AppCompat_Dialog
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.google.ar.sceneform.R$attr: int actionBarPopupTheme
com.google.android.filament.Box: float[] mCenter
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float colorG
com.google.ar.sceneform.R$layout: int notification_template_icon_group
com.google.ar.core.CameraConfigFilter: java.lang.String TAG
com.google.ar.sceneform.ux.R$style: int Base_V7_Theme_AppCompat_Light
com.google.android.filament.LightManager$ShadowOptions: float shadowFarHint
com.google.ar.sceneform.lullmodel.DeviceType: int Controller
com.google.ar.sceneform.R$layout: int notification_action
com.google.ar.sceneform.ux.R$style: int Base_V26_Theme_AppCompat_Light
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry textureRegistry
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.google.ar.sceneform.Sun: float LIGHT_ESTIMATE_SCALE
com.google.ar.core.ImageMetadata: int JPEG_THUMBNAIL_SIZE
androidx.window.R$attr: int activityName
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.google.ar.sceneform.R$id: int search_voice_btn
com.google.ar.sceneform.R$styleable: int FontFamily_fontProviderQuery
com.google.ar.core.ImageMetadata: int HOT_PIXEL_START
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment verticalAlignment
com.google.ar.schemas.lull.VariantDef: byte DataVec3
com.google.ar.sceneform.rendering.Renderable$Builder: android.net.Uri sourceUri
com.google.ar.sceneform.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.google.ar.sceneform.ArSceneView: float[] lastValidEnvironmentalHdrMainLightIntensity
com.google.ar.sceneform.ux.R$id: int action_context_bar
com.google.ar.sceneform.R$styleable: int AppCompatTextView_lineHeight
com.google.android.filament.TransformManager: long mNativeObject
com.google.ar.sceneform.R$raw: int keep_arcore
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Display3
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.google.ar.sceneform.ux.R$styleable: int Toolbar_android_minHeight
com.google.ar.sceneform.R$color: int primary_dark_material_dark
com.google.ar.sceneform.ux.R$id: int CTRL
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter LINEAR_MIPMAP_NEAREST
com.google.ar.sceneform.rendering.RenderableDefinition: java.util.List submeshes
com.google.ar.sceneform.R$styleable: int MenuItem_alphabeticModifiers
com.google.android.filament.SwapChain: java.lang.Object mSurface
com.google.ar.core.ImageMetadata: int SECTION_DEPTH
com.google.ar.sceneform.ux.R$layout: int support_simple_spinner_dropdown_item
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda2: android.hardware.camera2.CameraDevice$StateCallback f$0
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_spinnerStyle
com.google.ar.sceneform.ux.R$attr: int maxButtonHeight
com.google.ar.sceneform.ux.R$drawable: int abc_spinner_mtrl_am_alpha
com.google.ar.sceneform.R$styleable: int RecycleListView_paddingBottomNoButtons
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.ar.core.ImageMetadata: int NOISE_REDUCTION_MODE
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter LINEAR_MIPMAP_LINEAR
com.google.ar.sceneform.rendering.R$raw: int sceneform_transparent_colored_material
com.google.ar.sceneform.rendering.PlaneRenderer: boolean isEnabled
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_Switch
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.google.ar.sceneform.ux.R$dimen: int abc_select_dialog_padding_start_material
com.google.ar.sceneform.R$styleable: int Toolbar_subtitle
com.google.ar.sceneform.ux.R$styleable: int SearchView_voiceIcon
com.google.ar.schemas.lull.AxisSystem: int ZUp_YBack_XLeft
com.google.ar.sceneform.R$styleable: int GradientColorItem_android_offset
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.google.ar.sceneform.R$styleable: int[] MenuItem
com.google.ar.sceneform.ux.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.google.ar.sceneform.rendering.RenderableInstance: int renderableId
com.google.android.filament.IndirectLight: long mNativeObject
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Small_Inverse
com.google.ar.sceneform.R$dimen: int notification_right_side_padding_top
com.google.ar.sceneform.R$id: int search_button
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ListView_Menu
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode OPAQUE
com.google.ar.schemas.lull.LayoutFillOrder: int LeftUp
com.google.android.filament.Material$CullingMode: com.google.android.filament.Material$CullingMode[] $VALUES
com.google.ar.sceneform.R$styleable: int[] GradientColorItem
com.google.ar.sceneform.R$color: int material_grey_300
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R8_SNORM
com.google.ar.sceneform.ux.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.google.ar.sceneform.rendering.CameraStream: java.lang.String MATERIAL_CAMERA_TEXTURE
com.google.ar.sceneform.ux.R$styleable: int ActionBar_contentInsetLeft
com.google.android.filament.Material$Parameter$Precision: com.google.android.filament.Material$Parameter$Precision DEFAULT
com.google.ar.sceneform.R$layout: int abc_action_menu_item_layout
com.google.ar.sceneform.ux.R$id: int ALT
com.google.ar.core.ImageMetadata: int COLOR_CORRECTION_GAINS
com.google.android.filament.View$ToneMapping: com.google.android.filament.View$ToneMapping[] $VALUES
com.google.ar.schemas.sceneform.SamplerCompareMode: short CompareToTexture
com.google.android.filament.RenderableManager$PrimitiveType: com.google.android.filament.RenderableManager$PrimitiveType LINES
com.google.ar.sceneform.R$id: int add
com.google.ar.sceneform.R$color: int primary_text_default_material_dark
com.google.ar.sceneform.R$styleable: int TextAppearance_android_textColorHint
com.google.ar.core.CameraConfig: long nativeSymbolTableHandle
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter[] $VALUES
com.google.ar.sceneform.ux.R$id: int action_divider
com.google.ar.sceneform.R$string: int abc_prepend_shortcut_label
com.google.flatbuffers.FlatBufferBuilder: boolean $assertionsDisabled
com.google.ar.sceneform.ux.R$layout: int abc_search_view
com.google.ar.sceneform.rendering.Renderable: boolean isShadowCaster
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat SRGB8
com.google.ar.core.ImageMetadata: com.google.ar.core.n sketchEntry
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType BYTE
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.google.ar.sceneform.R$color: int abc_hint_foreground_material_light
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.google.ar.sceneform.R$attr: int colorBackgroundFloating
com.google.android.filament.Material$Parameter$Precision: com.google.android.filament.Material$Parameter$Precision LOW
com.google.ar.sceneform.R$id: int src_atop
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment horizontalAlignment
com.google.ar.schemas.sceneform.SamplerMagFilter: short Linear
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_thickness
com.google.ar.schemas.lull.LayoutFillOrder: int UpRight
com.google.ar.sceneform.ux.R$styleable: int ActionBar_displayOptions
com.google.ar.sceneform.ux.R$styleable: int MenuItem_showAsAction
com.google.ar.sceneform.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.google.ar.sceneform.rendering.ViewRenderable$Builder: int DEFAULT_DP_TO_METERS
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage[] cubeMap
com.google.ar.sceneform.R$attr: int actionModeFindDrawable
com.google.android.filament.Texture$1: int[] $SwitchMap$com$google$android$filament$Texture$Format
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_CompactMenu
com.google.ar.sceneform.ux.R$id: int message
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorButtonNormal
com.google.ar.sceneform.ux.R$dimen: int abc_list_item_height_small_material
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Title
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionBar_Solid
com.google.ar.sceneform.ux.R$styleable: int PopupWindow_overlapAnchor
androidx.fragment.app.Fragment: int INITIALIZING
com.google.ar.schemas.lull.VertexAttributeType: int Vec4f
com.google.ar.sceneform.R$color: int switch_thumb_material_dark
com.google.ar.sceneform.Node: com.google.ar.sceneform.Scene scene
com.google.ar.sceneform.R$styleable: int MenuItem_android_titleCondensed
com.google.ar.sceneform.R$color: int secondary_text_disabled_material_dark
com.google.android.filament.Engine$Backend: com.google.android.filament.Engine$Backend[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorPrimary
com.google.flatbuffers.Table: java.nio.ByteBuffer bb
com.google.ar.schemas.lull.VertexAttributeType: int Vec3f
com.google.ar.core.ImageMetadata: int COLOR_CORRECTION_MODE
com.google.android.filament.SwapChain: long CONFIG_DEFAULT
com.google.ar.schemas.lull.AxisSystem: int XUp_YBack_ZRight
com.google.ar.sceneform.R$style: int Base_V26_Theme_AppCompat_Light
com.google.ar.sceneform.lullmodel.VariantDef: byte DataHashValue
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int splitMinSmallestWidth
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
com.google.ar.sceneform.lullmodel.VariantDef: byte VariantArrayDef
com.google.ar.sceneform.ux.R$color: int abc_tint_default
com.google.ar.sceneform.ux.R$dimen: int notification_right_side_padding_top
com.google.ar.sceneform.ux.R$id: int async
com.google.ar.sceneform.R$style: int TextAppearance_Compat_Notification_Time
com.google.ar.sceneform.R$color: int abc_search_url_text_selected
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_fixed_height_minor
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_fontWeight
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.google.ar.sceneform.R$style: int Widget_AppCompat_SeekBar_Discrete
com.google.ar.sceneform.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_SearchView
com.google.ar.sceneform.ux.R$attr: int textAppearanceSearchResultSubtitle
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.android.UiHelper filamentHelper
com.google.ar.sceneform.rendering.CameraStream: com.google.ar.sceneform.rendering.ExternalTexture cameraTexture
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionMenuTextColor
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R16F
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.google.android.filament.View: com.google.android.filament.View$DynamicResolutionOptions mDynamicResolution
com.google.ar.sceneform.ux.R$style: int AlertDialog_AppCompat
com.google.ar.sceneform.ux.R$id: int ifRoom
com.google.ar.sceneform.ux.R$style: int AlertDialog_AppCompat_Light
com.google.ar.sceneform.ux.PinchGesture: int pointerId2
com.google.ar.sceneform.ux.R$attr: int icon
com.google.android.filament.Material$Interpolation: com.google.android.filament.Material$Interpolation FLAT
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode wrapModeR
com.google.ar.core.Plane$Type: int nativeCode
com.google.ar.sceneform.ux.R$color: int bright_foreground_material_dark
com.google.ar.sceneform.rendering.Material$Builder: java.nio.ByteBuffer sourceBuffer
com.google.ar.sceneform.R$color: int switch_thumb_material_light
com.google.ar.core.AugmentedImageDatabase: long nativeHandle
com.google.ar.sceneform.ux.R$attr: int thumbTint
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_PopupWindow
com.google.flatbuffers.FlatBufferBuilder: int vector_num_elems
com.google.ar.sceneform.ux.R$styleable: int ActionBar_progressBarStyle
com.google.ar.sceneform.R$dimen: int abc_text_size_menu_material
com.google.ar.sceneform.R$id: int checked
com.google.ar.sceneform.ux.R$color: int abc_search_url_text_normal
com.google.ar.sceneform.ux.R$attr: int logoDescription
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.ar.sceneform.ux.R$id: int shortcut
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_drawableSize
com.google.ar.sceneform.ux.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.google.ar.sceneform.R$drawable: int abc_seekbar_tick_mark_material
com.google.ar.sceneform.R$attr: int track
com.google.ar.sceneform.ux.R$drawable: int notification_bg_low_pressed
com.google.ar.core.Config$GeospatialMode: int nativeCode
com.google.ar.sceneform.ux.BaseArFragment: boolean sessionInitializationFailed
com.google.ar.sceneform.R$string: int abc_searchview_description_voice
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorError
com.google.ar.sceneform.lullmodel.OptionalBool: int Unset
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode wrapModeS
com.google.ar.sceneform.rendering.CameraStream: int UV_BUFFER_INDEX
com.google.ar.sceneform.R$string: int lib_name
com.google.ar.sceneform.R$dimen: int abc_text_size_display_2_material
com.google.ar.sceneform.ux.R$interpolator: int fast_out_slow_in
com.google.ar.sceneform.ux.R$dimen: int tooltip_y_offset_non_touch
com.google.ar.sceneform.R$attr: int arrowShaftLength
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement MAT3
com.google.ar.sceneform.rendering.LightProbe$Builder: float intensity
com.google.ar.sceneform.ux.R$string: int abc_toolbar_collapse_description
com.google.ar.core.Config$FocusMode: com.google.ar.core.Config$FocusMode[] $VALUES
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_PopupMenu
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.google.ar.sceneform.R$style: int Widget_AppCompat_ListMenuView
com.google.ar.sceneform.ux.R$string: int abc_action_bar_home_description
com.google.ar.sceneform.ux.R$attr: int theme
com.google.ar.schemas.lull.LayoutHorizontalAlignment: int Left
com.google.ar.sceneform.ux.R$layout: int abc_list_menu_item_icon
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_button_material
com.google.ar.sceneform.ux.R$attr: int searchViewStyle
com.google.ar.sceneform.R$id: int accessibility_custom_action_11
com.google.ar.sceneform.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.google.ar.sceneform.ux.R$attr: int listPopupWindowStyle
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.google.ar.sceneform.ux.R$dimen: int abc_button_inset_vertical_material
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace[] $VALUES
com.google.ar.sceneform.R$id: int action_bar_title
com.google.ar.sceneform.ux.R$drawable: int abc_control_background_material
com.google.ar.sceneform.ux.R$styleable: int Toolbar_contentInsetEnd
com.google.ar.sceneform.ux.R$style: int Platform_V25_AppCompat
com.google.ar.sceneform.R$attr: int buttonBarStyle
androidx.window.embedding.ActivityStack: boolean isEmpty
com.google.ar.sceneform.ux.R$styleable: int Toolbar_maxButtonHeight
com.google.ar.sceneform.ux.R$layout: int sceneform_ux_fragment_layout
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_YFront_XLeft
com.google.android.filament.Colors$Conversion: com.google.android.filament.Colors$Conversion ACCURATE
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
com.google.ar.sceneform.ux.R$style: int Platform_AppCompat_Light
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.google.android.filament.LightManager$ShadowOptions: int mapSize
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Small_Inverse
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.ar.schemas.lull.VertexAttributeUsage: int BoneWeights
com.google.ar.sceneform.ux.R$id: int tag_accessibility_heading
com.google.ar.sceneform.R$styleable: int Toolbar_titleTextAppearance
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.ar.sceneform.ux.R$styleable: int MenuGroup_android_visible
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Body1
com.google.ar.sceneform.R$layout: int abc_action_menu_layout
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_android_orientation
com.google.android.filament.Colors$RgbType: com.google.android.filament.Colors$RgbType[] $VALUES
com.google.android.filament.View$DynamicResolutionOptions: boolean homogeneousScaling
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda1: android.hardware.camera2.CameraCaptureSession f$1
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.google.ar.sceneform.ux.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.ar.core.Frame: com.google.ar.core.Session session
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.utilities.ChangeId changeId
com.google.ar.sceneform.ux.BaseGestureRecognizer: java.util.ArrayList gestureStartedListeners
androidx.fragment.app.Fragment: java.lang.String mWho
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_11
com.google.ar.sceneform.lullmodel.DeviceType: int Controller2
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_enabled
androidx.window.R$attr: int activityAction
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.google.ar.sceneform.rendering.PlaneRenderer: com.google.ar.sceneform.rendering.Renderer renderer
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_trackTintMode
com.google.ar.sceneform.R$id: int src_in
com.google.ar.sceneform.R$styleable: int SearchView_android_maxWidth
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType UBYTE3
com.google.ar.schemas.lull.VertexAttributeUsage: int Position
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_title_material
com.google.android.filament.Material$VertexDomain: com.google.android.filament.Material$VertexDomain WORLD
com.google.ar.schemas.lull.MaterialTextureUsage: int Roughness
com.google.ar.sceneform.R$layout: int abc_alert_dialog_material
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextHelper_android_drawableRight
com.google.ar.sceneform.ux.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.google.ar.sceneform.R$color: int tooltip_background_light
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_menu_header_material
com.google.ar.sceneform.R$attr: int textAppearanceListItemSmall
com.google.ar.sceneform.R$styleable: int ViewStubCompat_android_id
com.google.ar.sceneform.R$id: int textSpacerNoTitle
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorButtonNormal
com.google.ar.sceneform.R$color: int background_material_dark
com.google.ar.sceneform.rendering.LightInstance: com.google.ar.sceneform.math.Vector3 localPosition
com.google.ar.sceneform.R$color: int abc_background_cache_hint_selector_material_dark
com.google.ar.sceneform.lullmodel.OptionalBool: int True
com.google.ar.schemas.lull.MaterialTextureUsage: int Normal
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.google.android.filament.Material$Parameter$Precision: com.google.android.filament.Material$Parameter$Precision HIGH
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode wrapModeT
com.google.ar.sceneform.ux.TwistGesture: float SLOP_ROTATION_DEGREES
com.google.ar.sceneform.ux.R$id: int action_mode_bar_stub
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
com.google.ar.sceneform.ux.R$attr: int dialogTheme
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableTint
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Vector3 center
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorControlHighlight
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableStartCompat
com.google.flatbuffers.Table: int vtable_start
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.ar.core.ImageMetadata: int CONTROL_POST_RAW_SENSITIVITY_BOOST
com.google.ar.sceneform.R$id: int __arcore_cancelButton
com.google.ar.schemas.lull.AxisSystem: int XUp_ZBack_YLeft
com.google.ar.sceneform.rendering.Texture$Usage: com.google.ar.sceneform.rendering.Texture$Usage NORMAL
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.google.ar.core.AugmentedFace$RegionType: com.google.ar.core.AugmentedFace$RegionType FOREHEAD_LEFT
com.google.ar.sceneform.ux.R$id: int progress_horizontal
com.google.ar.schemas.lull.LayoutHorizontalAlignment: int Right
com.google.ar.sceneform.ux.R$attr: int dialogCornerRadius
com.google.ar.core.Point$OrientationMode: com.google.ar.core.Point$OrientationMode ESTIMATED_SURFACE_NORMAL
com.google.ar.core.ImageMetadata: int SCALER_START
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.google.ar.schemas.lull.AxisSystem: int XUp_ZBack_YRight
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type BYTE
com.google.ar.sceneform.R$styleable: int AppCompatTheme_checkboxStyle
com.google.ar.core.Camera: long nativeSymbolTableHandle
com.google.ar.sceneform.rendering.LightProbe: int BYTES_PER_FLOAT16
com.google.ar.sceneform.rendering.LightProbe: com.google.ar.sceneform.math.Quaternion rotation
com.google.ar.sceneform.R$attr: int fontWeight
com.google.ar.sceneform.R$attr: int goIcon
com.google.ar.sceneform.ux.R$layout: int abc_activity_chooser_view_list_item
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode[] $VALUES
com.google.ar.sceneform.R$attr: int actionBarSize
com.google.ar.sceneform.ux.HandMotionAnimation: android.view.View handImageView
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.ar.sceneform.lullmodel.TextureFiltering: short LinearMipmapLinear
com.google.ar.sceneform.rendering.LightProbe: int SH_VECTORS_FOR_THIRD_ORDER
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.ar.sceneform.R$dimen: int abc_dialog_corner_radius_material
com.google.ar.sceneform.ux.R$layout: int notification_action_tombstone
com.google.ar.sceneform.R$attr: int checkboxStyle
com.google.ar.sceneform.ux.R$styleable: int ActionBar_height
com.google.ar.core.Config$UpdateMode: int nativeCode
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableLeftCompat
com.google.ar.sceneform.ux.HandMotionAnimation: float TWO_PI
com.google.ar.sceneform.R$styleable: int AppCompatTheme_spinnerStyle
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.ar.core.ImageMetadata: int REQUEST_PIPELINE_DEPTH
com.google.ar.sceneform.ux.R$styleable: int SearchView_commitIcon
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter LINEAR_MIPMAP_NEAREST
com.google.ar.sceneform.ux.R$styleable: int[] MenuItem
com.google.android.filament.LightManager$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.sceneform.FrameTime: float NANOSECONDS_TO_SECONDS
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int Toolbar_contentInsetEndWithActions
com.google.android.filament.NativeSurface: long mNativeObject
com.google.ar.sceneform.rendering.R$id: int __arcore_continueButton
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode[] $VALUES
com.google.ar.sceneform.ux.R$style: int TextAppearance_Compat_Notification_Line2
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus IO_ERROR
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_editTextColor
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
com.google.ar.sceneform.ux.R$style: int Base_ThemeOverlay_AppCompat
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode HORIZONTAL
com.google.ar.sceneform.R$attr: int subtitle
com.google.ar.sceneform.R$id: int never
com.google.ar.sceneform.rendering.Renderable$Builder: android.content.Context context
com.google.ar.core.ImageMetadata: int LENS_FOCAL_LENGTH
com.google.ar.sceneform.rendering.R$layout: int __arcore_education
com.google.ar.schemas.sceneform.LightingCubeFaceType: java.lang.String[] names
com.google.ar.sceneform.rendering.ShapeFactory: int COORDS_PER_TRIANGLE
com.google.ar.sceneform.R$attr: int alertDialogTheme
com.google.ar.sceneform.ux.R$id: int line1
com.google.ar.sceneform.R$styleable: int[] ViewStubCompat
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.google.ar.sceneform.lullmodel.DeviceType: java.lang.String[] names
com.google.ar.sceneform.R$attr: int listChoiceIndicatorSingleAnimated
com.google.ar.sceneform.R$attr: int titleMarginEnd
com.google.ar.sceneform.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Display1
com.google.ar.schemas.sceneform.SamplerUsageType: short Color
com.google.ar.sceneform.ux.R$id: int multiply
com.google.ar.sceneform.R$styleable: int AppCompatTheme_seekBarStyle
com.google.ar.sceneform.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_display_2_material
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type BOOL
com.google.android.filament.View$AmbientOcclusionOptions: float bias
com.google.ar.sceneform.ux.R$drawable: int notification_template_icon_bg
com.google.ar.sceneform.ux.R$styleable: int ActionBar_indeterminateProgressStyle
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textColorSearchUrl
com.google.ar.sceneform.AnchorNode: float SMOOTH_FACTOR
com.google.ar.sceneform.R$styleable: int AppCompatTheme_editTextColor
com.google.ar.sceneform.rendering.Renderer: float cameraIso
com.google.ar.sceneform.R$style: int Theme_AppCompat_Light_NoActionBar
com.google.ar.sceneform.ux.R$id: int group_divider
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeStyle
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_android_fontStyle
com.google.ar.sceneform.R$attr: int titleMarginTop
com.google.ar.sceneform.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.google.ar.sceneform.rendering.LightProbe: float LIGHT_ESTIMATE_SCALE
com.google.ar.sceneform.TouchEventSystem: com.google.ar.sceneform.TouchEventSystem$TouchTarget firstHandlingTouchTarget
com.google.ar.core.CameraIntrinsics: long nativeSymbolTableHandle
com.google.ar.sceneform.utilities.SceneformBufferUtils: java.lang.String TAG
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: long nativeHandle
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_Dark
com.google.ar.sceneform.R$styleable: int[] ListPopupWindow
com.google.ar.sceneform.R$id: int blocking
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.google.ar.sceneform.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.google.ar.sceneform.rendering.MaterialFactory: java.lang.String MATERIAL_COLOR
com.google.ar.sceneform.rendering.DpToMetersViewSizer: int dpPerMeters
com.google.ar.core.AugmentedFace: java.nio.ShortBuffer triangleIndicesBuffer
com.google.ar.sceneform.ux.R$attr: int spinnerDropDownItemStyle
com.google.ar.sceneform.rendering.Light$Type: com.google.ar.sceneform.rendering.Light$Type POINT
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry textureCleanupRegistry
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda0: android.hardware.camera2.CameraCaptureSession$StateCallback f$0
com.google.ar.sceneform.R$styleable: int ActionMode_titleTextStyle
com.google.ar.sceneform.rendering.LightProbe: float[] irradianceData
com.google.ar.sceneform.ux.R$layout: int abc_cascading_menu_item_layout
com.google.ar.core.ImageMetadata: int CONTROL_AWB_REGIONS
com.google.ar.sceneform.R$styleable: int MenuItem_tooltipText
com.google.ar.sceneform.ux.R$drawable: int abc_list_selector_disabled_holo_dark
com.google.ar.sceneform.ux.R$styleable: int MenuView_android_headerBackground
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_ZBack_XRight
com.google.ar.sceneform.ux.R$id: int icon_group
com.google.ar.core.ArCoreApk$Availability: int nativeCode
com.google.ar.sceneform.ux.R$attr: int colorControlActivated
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_textColorLink
com.google.ar.sceneform.ux.R$styleable: int MenuItem_alphabeticModifiers
com.google.ar.sceneform.ux.R$id: int action_bar
com.google.android.filament.Material$Interpolation: com.google.android.filament.Material$Interpolation[] $VALUES
com.google.ar.sceneform.R$id: int customPanel
com.google.ar.sceneform.rendering.MaterialInternalDataGltfImpl: com.google.android.filament.Material filamentMaterial
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.google.ar.sceneform.R$styleable: int MenuItem_numericModifiers
com.google.ar.sceneform.ux.R$id: int center_vertical
com.google.android.filament.Camera: long mNativeObject
com.google.ar.schemas.sceneform.SamplerMinFilter: short NearestMipmapLinear
com.google.ar.sceneform.R$style: int Platform_V21_AppCompat
com.google.android.filament.android.UiHelper$ContextErrorPolicy: com.google.android.filament.android.UiHelper$ContextErrorPolicy CHECK
com.google.ar.sceneform.R$styleable: int SwitchCompat_track
com.google.ar.core.LightEstimate$State: com.google.ar.core.LightEstimate$State VALID
com.google.ar.sceneform.ux.R$styleable: int AppCompatSeekBar_tickMarkTint
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.Scene scene
com.google.ar.sceneform.ux.R$attr: int actionLayout
com.google.android.filament.View: com.google.android.filament.RenderTarget mRenderTarget
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.google.ar.core.Config$PlaneFindingMode: int nativeCode
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType UBYTE
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d TEXTURE_NORMALIZED
com.google.ar.core.ImageMetadata: int REQUEST_START
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.google.ar.sceneform.ux.R$dimen: int abc_alert_dialog_button_dimen
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat EAC_RG11_SIGNED
com.google.ar.sceneform.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.google.ar.sceneform.R$dimen: int abc_action_bar_stacked_max_height
com.google.ar.sceneform.R$color: int background_floating_material_light
com.google.ar.sceneform.R$styleable: int AppCompatTheme_dividerHorizontal
com.google.ar.sceneform.ux.R$attr: int ratingBarStyleIndicator
androidx.fragment.app.Fragment: boolean mRestored
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float ambientShScaleForFilament
com.google.ar.core.Config$FocusMode: com.google.ar.core.Config$FocusMode FIXED
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.google.ar.sceneform.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.ar.sceneform.ux.R$string: int __arcore_cancel
com.google.ar.sceneform.ux.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_SearchView
com.google.ar.sceneform.Camera: com.google.ar.sceneform.math.Matrix projectionMatrix
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Unused
com.google.ar.sceneform.R$styleable: int SearchView_suggestionRowLayout
com.google.ar.core.ImageMetadata: int CONTROL_AF_TRIGGER
com.google.ar.sceneform.R$styleable: int AppCompatTheme_buttonStyleSmall
com.google.ar.sceneform.ArSceneView: com.google.ar.sceneform.rendering.CameraStream cameraStream
com.google.ar.sceneform.R$attr: int homeAsUpIndicator
com.google.ar.sceneform.R$layout: int abc_action_mode_close_item_material
com.google.ar.sceneform.collision.Collider: int shapeId
com.google.ar.sceneform.math.Matrix: float[] IDENTITY_DATA
com.google.ar.sceneform.R$drawable: int abc_btn_check_to_on_mtrl_000
com.google.ar.sceneform.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R32UI
com.google.ar.core.Frame: com.google.ar.core.LightEstimate lightEstimate
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextHelper_android_textAppearance
com.google.ar.schemas.sceneform.ParameterInitDefType: byte Vec4Init
com.google.ar.sceneform.R$attr: int windowFixedHeightMinor
com.google.ar.sceneform.ux.TransformableNode: com.google.ar.sceneform.ux.ScaleController scaleController
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_9
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType USHORT
com.google.android.filament.android.TextureHelper: int BITMAP_CONFIG_RGB_565
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.google.ar.sceneform.R$attr: int gapBetweenBars
com.google.ar.sceneform.ux.R$attr: int trackTintMode
com.google.ar.sceneform.R$style: int Widget_AppCompat_RatingBar_Indicator
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState ERROR_NOT_AUTHORIZED
com.google.ar.sceneform.ux.R$attr: int colorControlHighlight
com.google.ar.sceneform.Camera: float DEFAULT_FAR_PLANE
com.google.flatbuffers.Constants: int SIZEOF_BYTE
com.google.ar.sceneform.R$attr: int multiChoiceItemLayout
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.google.android.filament.IndexBuffer$Builder$IndexType: com.google.android.filament.IndexBuffer$Builder$IndexType[] $VALUES
com.google.android.filament.View$AmbientOcclusion: com.google.android.filament.View$AmbientOcclusion[] $VALUES
com.google.ar.sceneform.ux.R$attr: int drawableTintMode
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA16I
com.google.ar.core.CameraConfigFilter: long nativeHandle
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.Renderer renderer
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Body2
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DEPTH32F
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Subhead
com.google.ar.sceneform.ux.R$id: int action_menu_divider
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.google.ar.sceneform.R$attr: int searchViewStyle
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.FrameTime frameTime
com.google.ar.sceneform.lullmodel.LayoutFillOrder: java.lang.String[] names
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute COLOR
com.google.android.filament.Material$Builder: java.nio.Buffer mBuffer
com.google.ar.sceneform.R$raw: int sceneform_opaque_colored_material
com.google.ar.sceneform.ux.TwistGesture: boolean TWIST_GESTURE_DEBUG
com.google.ar.sceneform.ux.R$styleable: int[] ViewStubCompat
com.google.ar.sceneform.ux.R$attr: int titleMarginStart
com.google.ar.sceneform.ux.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.google.android.filament.Engine$Backend: com.google.android.filament.Engine$Backend NOOP
com.google.ar.schemas.lull.VertexAttributeType: int Scalar1f
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource$SourceType sourceType
com.google.ar.sceneform.ux.R$layout: int abc_list_menu_item_checkbox
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.google.ar.sceneform.R$styleable: int ActionBar_logo
com.google.ar.sceneform.R$dimen: int abc_text_size_medium_material
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R8UI
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int BrdfLookupTable
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_NoActionBar
com.google.ar.sceneform.ux.R$attr: int dividerHorizontal
com.google.ar.sceneform.ux.R$attr: int lastBaselineToBottomHeight
com.google.ar.sceneform.ux.R$id: int up
com.google.ar.schemas.lull.VertexAttributeType: java.lang.String[] names
com.google.ar.sceneform.ux.R$raw: int sceneform_view_renderable
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_centerX
com.google.android.filament.TextureSampler$CompareMode: com.google.android.filament.TextureSampler$CompareMode[] $VALUES
com.google.ar.sceneform.ux.R$style: int TextAppearance_Compat_Notification_Info
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.math.Quaternion rotation
com.google.ar.sceneform.ux.R$styleable: int Spinner_android_dropDownWidth
com.google.ar.sceneform.R$attr: int buttonBarPositiveButtonStyle
com.google.ar.core.ImageMetadata: int CONTROL_VIDEO_STABILIZATION_MODE
com.google.ar.sceneform.R$attr: int autoSizeTextType
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.google.ar.core.ImageMetadata: int TYPE_LONG
com.google.ar.sceneform.R$style: int Platform_V21_AppCompat_Light
com.google.ar.sceneform.ux.R$bool: int abc_allow_stacked_button_bar
com.google.ar.sceneform.ux.R$attr: int actionModeCutDrawable
com.google.ar.sceneform.ux.R$styleable: int[] View
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.google.ar.sceneform.ux.R$id: int home
com.google.ar.sceneform.Node: boolean allowDispatchTransformChangedListeners
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d IMAGE_NORMALIZED
com.google.ar.sceneform.R$styleable: int ViewStubCompat_android_inflatedId
com.google.ar.core.ImageMetadata: int HOT_PIXEL_MODE
com.google.ar.core.ArCoreApk$InstallStatus: com.google.ar.core.ArCoreApk$InstallStatus[] $VALUES
com.google.ar.sceneform.R$styleable: int ActionBar_customNavigationLayout
com.google.ar.sceneform.R$styleable: int AlertDialog_buttonIconDimen
com.google.ar.sceneform.lullmodel.VariantDef: java.lang.String[] names
com.google.android.filament.Material$Parameter$Precision: com.google.android.filament.Material$Parameter$Precision[] $VALUES
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_XBack_ZLeft
com.google.ar.sceneform.R$raw: int sceneform_opaque_textured_material
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DXT1_RGB
com.google.ar.core.TrackableBase: long nativeSymbolTableHandle
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionButton
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Quaternion localRotation
com.google.ar.sceneform.ux.R$attr: int popupMenuStyle
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format[] $VALUES
com.google.ar.core.ImageMetadata: int SECTION_STATISTICS_INFO
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Dialog_Alert
com.google.ar.sceneform.R$styleable: int AppCompatImageView_srcCompat
com.google.ar.sceneform.rendering.Material: com.google.ar.sceneform.rendering.MaterialInternalData materialData
com.google.android.filament.NativeSurface: int mHeight
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_spinBars
com.google.ar.sceneform.ux.BaseGesture: com.google.ar.sceneform.Node targetNode
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_ratingBarStyle
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter NEAREST
com.google.ar.sceneform.R$styleable: int SearchView_defaultQueryHint
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.google.android.filament.View: com.google.android.filament.View$AmbientOcclusionOptions mAmbientOcclusionOptions
com.google.ar.sceneform.R$attr: int textColorAlertDialogListItem
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder$BuilderFinalizer mFinalizer
com.google.ar.sceneform.ux.R$dimen: int hint_alpha_material_dark
com.google.ar.sceneform.ux.R$attr: int actionModeShareDrawable
com.google.ar.sceneform.Node: com.google.ar.sceneform.rendering.LightInstance lightInstance
com.google.ar.sceneform.Node: int WORLD_DIRTY_FLAGS
com.google.ar.sceneform.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int RightDown
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.google.ar.sceneform.ux.R$color: int bright_foreground_disabled_material_dark
com.google.ar.sceneform.R$layout: int abc_alert_dialog_title_material
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.math.Vector3 normal
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_CompactMenu
com.google.ar.core.ImageFormat: int YUV_420_888
com.google.android.filament.View$AmbientOcclusion: com.google.android.filament.View$AmbientOcclusion SSAO
com.google.ar.core.ImageMetadata: int SENSOR_EXPOSURE_TIME
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_6
com.google.ar.sceneform.R$attr: int titleMarginStart
com.google.ar.sceneform.R$dimen: int abc_action_bar_content_inset_material
com.google.ar.sceneform.ux.R$id: int useLogo
com.google.ar.sceneform.ux.R$id: int expand_activities_button
com.google.ar.sceneform.R$drawable: int abc_tab_indicator_mtrl_alpha
com.google.ar.sceneform.R$styleable: int ActionBar_contentInsetRight
com.google.ar.sceneform.R$attr: int actionBarSplitStyle
com.google.ar.sceneform.rendering.FixedHeightViewSizer: float DEFAULT_SIZE_Z
com.google.ar.sceneform.ux.R$attr: int subMenuArrow
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_ZBack_XLeft
com.google.ar.core.ImageMetadata: int CONTROL_MODE
com.google.ar.sceneform.R$string: int abc_shareactionprovider_share_with
com.google.ar.schemas.sceneform.ParameterInitDefType: byte BoolInit
com.google.ar.sceneform.ux.R$color: int abc_background_cache_hint_selector_material_dark
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB16UI
com.google.ar.sceneform.ux.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Body2
com.google.ar.sceneform.ux.R$attr: int windowMinWidthMinor
com.google.ar.sceneform.ux.R$styleable: int ActionMode_subtitleTextStyle
com.google.ar.sceneform.rendering.Material: com.google.ar.sceneform.rendering.Material$IMaterialInstance internalMaterialInstance
com.google.ar.sceneform.R$color: int notification_action_color_filter
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Inverse
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_title_divider_material
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction EQUAL
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableRightCompat
com.google.ar.sceneform.R$attr: int listPreferredItemPaddingEnd
com.google.ar.sceneform.ux.R$color: int dim_foreground_material_light
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_SearchView_ActionBar
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.google.ar.sceneform.rendering.Renderer: java.util.ArrayList lightInstances
com.google.ar.schemas.sceneform.RenderFlags: byte DoNotCastShadows
com.google.android.filament.Texture: int BASE_LEVEL
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Display2
com.google.ar.sceneform.ux.R$styleable: int[] Spinner
com.google.ar.schemas.lull.AxisSystem: int XUp_ZFront_YLeft
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.google.ar.core.dependencies.c: android.os.IBinder a
com.google.flatbuffers.Table: int vtable_size
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat ETC2_SRGB8
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.rendering.Color color
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_android_layout
com.google.ar.sceneform.R$color: int bright_foreground_disabled_material_dark
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_headline_material
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.google.ar.sceneform.Node: com.google.ar.sceneform.Node parentAsNode
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeBackground
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format RGB
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus OK
com.google.ar.sceneform.rendering.LightProbe: com.google.ar.sceneform.utilities.ChangeId changeId
com.google.android.filament.IndexBuffer$Builder$IndexType: com.google.android.filament.IndexBuffer$Builder$IndexType USHORT
com.google.ar.sceneform.rendering.LightInstance: com.google.ar.sceneform.rendering.LightInstance$LightInstanceChangeListener changeListener
com.google.ar.sceneform.rendering.LullModel: com.google.android.filament.TextureSampler$WrapMode[] fromLullWrapMode
com.google.ar.sceneform.R$attr: int titleMarginBottom
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.google.ar.sceneform.R$color: int switch_thumb_disabled_material_light
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda3: android.hardware.camera2.CameraDevice$StateCallback f$0
com.google.ar.core.AugmentedFace$RegionType: com.google.ar.core.AugmentedFace$RegionType FOREHEAD_RIGHT
com.google.ar.sceneform.ux.R$drawable: int abc_list_focused_holo
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState ERROR_APK_VERSION_TOO_OLD
com.google.ar.sceneform.R$styleable: int AppCompatTheme_dialogCornerRadius
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.google.ar.core.InstallActivity: android.view.ContextThemeWrapper themeWrapper
com.google.flatbuffers.FlatBufferBuilder: int object_start
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.google.ar.sceneform.ux.R$dimen: int highlight_alpha_material_dark
com.google.ar.core.ImageMetadata: int LENS_APERTURE
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_HOSTING_SERVICE_UNAVAILABLE
com.google.ar.sceneform.ArSceneView: com.google.ar.sceneform.rendering.PlaneRenderer planeRenderer
com.google.ar.sceneform.ux.FootprintSelectionVisualizer: com.google.ar.sceneform.Node footprintNode
com.google.flatbuffers.FlatBufferBuilder: com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory bb_factory
com.google.ar.sceneform.rendering.EngineInstance: com.google.ar.sceneform.rendering.IEngine engine
com.google.ar.core.ArCoreApk$InstallStatus: int nativeCode
com.google.ar.schemas.sceneform.CollisionShapeType: int Sphere
com.google.ar.sceneform.ux.R$styleable: int ActionBar_divider
com.google.ar.sceneform.lullmodel.DeviceType: int Keyboard
com.google.ar.sceneform.R$attr: int homeLayout
com.google.ar.sceneform.ux.R$drawable: int abc_list_longpressed_holo
com.google.ar.sceneform.R$style: int Base_AlertDialog_AppCompat_Light
com.google.ar.sceneform.ux.PinchGesture: java.lang.String TAG
com.google.ar.sceneform.ux.R$dimen: int abc_button_padding_horizontal_material
com.google.ar.schemas.lull.TextureWrap: short ClampToBorder
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.google.ar.sceneform.R$styleable: int ActionBar_navigationMode
com.google.ar.sceneform.rendering.LightProbe: com.google.ar.sceneform.rendering.Color ambientColor
com.google.ar.sceneform.ux.R$dimen: int abc_control_padding_material
com.google.ar.sceneform.ux.R$integer: int config_tooltipAnimTime
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB32F
com.google.ar.sceneform.ux.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.ar.core.ImageMetadata: int CONTROL_START
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction NOT_EQUAL
com.google.ar.core.CameraConfig: long nativeHandle
com.google.ar.sceneform.ux.R$styleable: int Toolbar_contentInsetLeft
com.google.ar.sceneform.ux.R$style: int Base_V23_Theme_AppCompat
com.google.ar.sceneform.rendering.CameraStream: java.nio.FloatBuffer transformedCameraUvCoords
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.google.ar.sceneform.rendering.LullModel: java.lang.String TAG
com.google.android.filament.SwapChain: long mNativeObject
com.google.android.filament.Fence$Mode: com.google.android.filament.Fence$Mode[] $VALUES
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.Material overrideFaceMeshMaterial
com.google.ar.sceneform.R$id: int checkbox
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.Scene scene
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_PopupMenu
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode FADE
com.google.ar.core.ArCoreApk$InstallStatus: com.google.ar.core.ArCoreApk$InstallStatus INSTALLED
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.google.ar.schemas.sceneform.ParameterInitDefType: byte Vec3Init
com.google.ar.sceneform.R$style: int Animation_AppCompat_Tooltip
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode RAW_DEPTH_ONLY
com.google.ar.core.ImageMetadata: int SECTION_SYNC
com.google.ar.sceneform.R$styleable: int TextAppearance_android_textColor
com.google.ar.sceneform.ux.R$drawable: int notification_bg_normal_pressed
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat EAC_R11_SIGNED
com.google.ar.sceneform.ux.R$styleable: int CompoundButton_android_button
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.google.ar.sceneform.R$bool: int abc_action_bar_embed_tabs
com.google.ar.sceneform.R$styleable: int FontFamilyFont_fontWeight
com.google.ar.sceneform.math.Matrix: float[] data
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Small
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.google.ar.schemas.sceneform.ParameterInitDefType: byte IntVec2Init
com.google.ar.schemas.sceneform.ParameterInitDefType: byte BoolVec2Init
com.google.ar.core.RecordingConfig: long nativeHandle
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type INT3
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_endX
com.google.ar.sceneform.R$drawable: int btn_radio_off_mtrl
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType FLOAT3
com.google.ar.sceneform.ux.R$styleable: int RecycleListView_paddingBottomNoButtons
com.google.ar.sceneform.R$attr: int contentInsetStartWithNavigation
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.google.android.filament.MaterialInstance$IntElement: com.google.android.filament.MaterialInstance$IntElement INT2
com.google.ar.sceneform.ux.R$string: int abc_action_mode_done
com.google.ar.schemas.lull.MaterialTextureUsage: int Occlusion
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.google.ar.sceneform.R$styleable: int SwitchCompat_android_textOff
com.google.ar.sceneform.R$id: int chronometer
com.google.ar.sceneform.ux.R$color: int abc_search_url_text_selected
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat EAC_R11
com.google.ar.schemas.lull.LayoutFillOrder: int UpLeft
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Inverse
com.google.ar.sceneform.ux.AugmentedFaceNode: java.util.ArrayList triangleIndices
com.google.ar.sceneform.R$styleable: int GradientColor_android_tileMode
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Color color
com.google.ar.sceneform.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading CLOTH
com.google.ar.sceneform.ux.R$style: int Animation_AppCompat_Tooltip
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA4
com.google.ar.sceneform.R$layout: int abc_list_menu_item_radio
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType SHORT
com.google.ar.sceneform.rendering.R$raw: int sceneform_default_light_probe
com.google.ar.sceneform.rendering.R$raw: int sceneform_plane_shadow_material
com.google.ar.sceneform.R$anim: int abc_popup_exit
com.google.ar.sceneform.ux.R$attr: int viewInflaterClass
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.google.ar.sceneform.R$dimen: int abc_action_button_min_width_material
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.google.ar.sceneform.R$id: int decor_content_parent
com.google.ar.sceneform.ux.R$attr: int background
com.google.android.filament.Material$VertexDomain: com.google.android.filament.Material$VertexDomain VIEW
com.google.ar.sceneform.R$drawable: int abc_ic_clear_material
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.ar.sceneform.rendering.LightProbe: float lightEstimate
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.google.ar.sceneform.ux.R$style: int TextAppearance_Compat_Notification_Time
com.google.ar.schemas.lull.VertexAttributeUsage: int TexCoord
com.google.ar.sceneform.R$color: int bright_foreground_inverse_material_dark
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG32UI
com.google.ar.sceneform.collision.Sphere: com.google.ar.sceneform.math.Vector3 center
com.google.ar.sceneform.R$styleable: int AppCompatSeekBar_tickMark
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_PopupWindow
com.google.ar.sceneform.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.google.ar.sceneform.ux.AugmentedFaceNode: java.util.ArrayList submeshes
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod NOT_TRACKING
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.google.ar.sceneform.ArSceneView: float lastValidPixelIntensity
com.google.ar.sceneform.R$layout: int abc_action_bar_title_item
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
com.google.ar.sceneform.ux.TwistGesture: int pointerId1
com.google.ar.sceneform.rendering.LightInstance: com.google.ar.sceneform.rendering.Renderer renderer
com.google.ar.sceneform.R$attr: int ratingBarStyleIndicator
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.google.ar.sceneform.ux.R$attr: int actionBarTabTextStyle
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.google.android.filament.LightManager: float EFFICIENCY_FLUORESCENT
com.google.ar.sceneform.R$styleable: int StateListDrawable_android_enterFadeDuration
com.google.ar.sceneform.ux.R$dimen: int abc_dropdownitem_text_padding_left
com.google.ar.sceneform.R$style: int Base_V28_Theme_AppCompat
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_splitTrack
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_font
com.google.ar.sceneform.rendering.R$string: int __arcore_installing
com.google.ar.sceneform.ux.R$color: int ripple_material_dark
com.google.ar.sceneform.ux.R$drawable: int abc_btn_radio_material_anim
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG16F
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_SeekBar
com.google.ar.sceneform.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.google.ar.sceneform.R$anim: int abc_fade_in
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type HORIZONTAL_UPWARD_FACING
com.google.ar.sceneform.ux.R$color: int material_deep_teal_200
com.google.ar.sceneform.R$drawable: int notification_bg_normal_pressed
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_dividerPadding
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Empty
com.google.ar.sceneform.R$dimen: int abc_seekbar_track_progress_height_material
com.google.ar.sceneform.R$attr: int closeItemLayout
com.google.ar.sceneform.R$color: int bright_foreground_disabled_material_light
com.google.ar.sceneform.R$styleable: int SwitchCompat_switchPadding
com.google.ar.sceneform.Scene: com.google.ar.sceneform.TouchEventSystem touchEventSystem
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: java.lang.reflect.Method getNativeEngineMethod
com.google.ar.schemas.lull.MaterialTextureUsage: int DiffuseEnvironment
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.google.ar.sceneform.R$styleable: int AppCompatImageView_android_src
com.google.ar.sceneform.ux.R$id: int time
com.google.ar.sceneform.R$color: int abc_btn_colored_text_material
com.google.ar.sceneform.R$attr: int paddingStart
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState STOPPED
com.google.ar.sceneform.ux.R$styleable: int[] LinearLayoutCompat_Layout
com.google.ar.core.HitResult: long nativeSymbolTableHandle
com.google.ar.sceneform.R$attr: int listMenuViewStyle
com.google.ar.sceneform.Node: int DEFAULT_TOUCH_SLOP
com.google.ar.sceneform.R$dimen: int abc_dialog_min_width_minor
com.google.ar.sceneform.R$id: int ALT
com.google.ar.sceneform.ux.R$styleable: int[] RecycleListView
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.google.ar.sceneform.R$attr: int actionModePopupWindowStyle
com.google.ar.sceneform.R$attr: int alphabeticModifiers
com.google.ar.sceneform.ux.R$id: int SYM
com.google.ar.sceneform.R$dimen: int abc_action_button_min_width_overflow_material
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.google.ar.sceneform.Scene: com.google.ar.sceneform.SceneView view
com.google.ar.sceneform.ux.DragGesture: com.google.ar.sceneform.math.Vector3 delta
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_textSize
com.google.ar.sceneform.ux.R$attr: int indeterminateProgressStyle
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.google.ar.sceneform.rendering.RenderableInstance: int entity
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: float directIntensityForFilament
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat[] $VALUES
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.google.ar.sceneform.rendering.ExternalTexture: android.view.Surface surface
com.google.android.filament.Material$CullingMode: com.google.android.filament.Material$CullingMode FRONT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.google.ar.sceneform.R$string: int __arcore_install_app
com.google.ar.sceneform.R$anim: int abc_slide_out_top
com.google.ar.sceneform.ux.R$id: int chronometer
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.ar.core.ImageMetadata: int SENSOR_NEUTRAL_COLOR_POINT
com.google.ar.sceneform.ux.R$color: int abc_primary_text_material_dark
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Small
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int BoneIndices
com.google.ar.schemas.sceneform.SamplerWrapMode: short ClampToEdge
com.google.ar.sceneform.R$attr: int thumbTintMode
com.google.ar.sceneform.R$styleable: int FontFamily_fontProviderCerts
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType HALF4
com.google.ar.core.AugmentedFace: java.lang.String TAG
com.google.ar.core.Pose: float[] translation
com.google.ar.sceneform.lullmodel.TextureWrap: short MirrorClampToEdge
com.google.ar.sceneform.ux.R$id: int search_button
com.google.ar.core.ImageMetadata: int FLASH_INFO_START
com.google.ar.sceneform.ux.R$styleable: int SearchView_queryHint
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: double weight
com.google.android.filament.Scene: com.google.android.filament.IndirectLight mIndirectLight
com.google.ar.sceneform.Camera: com.google.ar.sceneform.math.Matrix viewMatrix
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.google.ar.sceneform.R$string: int abc_searchview_description_query
com.google.ar.sceneform.R$attr: int numericModifiers
com.google.ar.sceneform.ux.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.google.ar.sceneform.R$anim: int abc_tooltip_exit
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_android_textOff
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode wrapModeS
com.google.ar.sceneform.R$style: int Platform_V25_AppCompat
com.google.ar.sceneform.ux.R$attr: int suggestionRowLayout
com.google.ar.sceneform.R$drawable: int abc_switch_track_mtrl_alpha
com.google.ar.sceneform.ux.R$id: int __arcore_messageText
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_21
com.google.ar.sceneform.ux.R$styleable: int[] AlertDialog
com.google.ar.schemas.lull.VariantDef: byte DataInt
com.google.ar.core.Session$FeatureMapQuality: int nativeCode
com.google.ar.sceneform.AnchorNode: boolean isSmoothed
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type UINT
com.google.ar.sceneform.R$attr: int buttonStyle
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.google.ar.sceneform.R$attr: int measureWithLargestChild
com.google.ar.sceneform.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
com.google.ar.sceneform.rendering.PlaneRenderer: float SPOTLIGHT_RADIUS
com.google.ar.schemas.lull.LayoutVerticalAlignment: int Top
com.google.ar.sceneform.collision.Collider: com.google.ar.sceneform.collision.CollisionSystem attachedCollisionSystem
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda4: android.hardware.camera2.CameraCaptureSession f$1
com.google.ar.sceneform.R$anim: int abc_popup_enter
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace NEGATIVE_Z
com.google.ar.sceneform.rendering.PlaneRenderer: float BASE_UV_SCALE
com.google.ar.sceneform.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: java.lang.String name
com.google.android.filament.EntityManager: long mNativeObject
com.google.ar.sceneform.rendering.LightProbe: int RGBM_BYTES_PER_PIXEL
com.google.ar.sceneform.R$attr: int seekBarStyle
com.google.ar.sceneform.ux.R$styleable: int[] AppCompatTextHelper
com.google.ar.sceneform.ux.R$attr: int contentDescription
com.google.ar.sceneform.ux.R$anim: int abc_shrink_fade_out_from_bottom
com.google.ar.sceneform.ux.R$color: int abc_primary_text_material_light
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.google.ar.sceneform.ArSceneView: com.google.ar.sceneform.rendering.Color DEFAULT_COLOR_CORRECTION
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.google.ar.sceneform.ArSceneView: com.google.ar.core.Frame currentFrame
com.google.ar.sceneform.R$attr: int spinnerDropDownItemStyle
com.google.ar.sceneform.ux.R$styleable: int StateListDrawable_android_enterFadeDuration
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Small
com.google.ar.schemas.sceneform.LightingCubeFaceType: int nx
com.google.ar.sceneform.ux.R$color: int button_material_dark
com.google.ar.sceneform.Camera: int FALLBACK_VIEW_WIDTH
com.google.ar.sceneform.ux.R$attr: int titleMarginBottom
com.google.ar.core.ImageMetadata: int SENSOR_ROLLING_SHUTTER_SKEW
com.google.ar.sceneform.ux.R$styleable: int MenuView_preserveIconSpacing
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_dialogCornerRadius
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_ActionBar
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Bump
com.google.ar.schemas.sceneform.LightingCubeFaceType: int nz
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability UNKNOWN_CHECKING
com.google.ar.sceneform.R$style: int Base_V26_Widget_AppCompat_Toolbar
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.google.ar.sceneform.R$dimen: int abc_action_bar_stacked_tab_max_width
com.google.ar.sceneform.rendering.PlaneRenderer: java.lang.String MATERIAL_SPOTLIGHT_FOCUS_POINT
com.google.ar.sceneform.rendering.PlaneRenderer: java.lang.String MATERIAL_COLOR
com.google.ar.sceneform.R$styleable: int TextAppearance_android_shadowRadius
com.google.ar.sceneform.ux.R$attr: int textAppearanceSmallPopupMenu
com.google.ar.sceneform.R$style: int Widget_AppCompat_EditText
com.google.ar.sceneform.ux.R$attr: int divider
com.google.ar.sceneform.ux.R$styleable: int ActionBar_contentInsetEndWithActions
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int Normal
com.google.ar.sceneform.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.google.ar.core.GeospatialPose: long nativeHandle
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Spinner
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.ar.sceneform.R$styleable: int SearchView_searchHintIcon
com.google.ar.sceneform.R$attr: int listItemLayout
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionButton
com.google.ar.sceneform.ux.R$drawable: int abc_list_selector_disabled_holo_light
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.google.ar.sceneform.R$id: int action_bar_container
com.google.ar.schemas.lull.AxisSystem: int XUp_YFront_ZRight
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_RatingBar_Indicator
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading[] $VALUES
com.google.ar.sceneform.R$attr: int displayOptions
com.google.ar.sceneform.ux.R$styleable: int Toolbar_navigationIcon
com.google.ar.sceneform.R$anim: int abc_grow_fade_in_from_bottom
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.google.ar.sceneform.ux.R$attr: int listItemLayout
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.ar.sceneform.ux.R$dimen: int abc_dropdownitem_icon_width
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode wrapModeT
com.google.ar.sceneform.R$styleable: int ActionBar_contentInsetStart
com.google.ar.sceneform.R$layout: int notification_action_tombstone
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: java.util.List submeshes
com.google.ar.sceneform.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.google.ar.sceneform.ux.R$layout: int abc_alert_dialog_title_material
com.google.ar.sceneform.ux.R$style: int Base_Animation_AppCompat_DropDownUp
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.ar.sceneform.rendering.R$id: int __arcore_messageText
com.google.ar.sceneform.ux.R$attr: int expandActivityOverflowButtonDrawable
com.google.ar.sceneform.R$style: int Widget_AppCompat_ListView_DropDown
com.google.ar.sceneform.R$color: int material_grey_900
com.google.ar.sceneform.Node: java.util.ArrayList transformChangedListeners
com.google.ar.sceneform.R$style: int Base_DialogWindowTitleBackground_AppCompat
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.google.android.filament.Renderer: int MIRROR_FRAME_FLAG_CLEAR
com.google.ar.core.ImageMetadata: int STATISTICS_SCENE_FLICKER
com.google.ar.core.Config$GeospatialMode: com.google.ar.core.Config$GeospatialMode ENABLED
com.google.ar.sceneform.math.Vector3: float z
com.google.ar.sceneform.ux.R$attr: int drawableStartCompat
com.google.ar.sceneform.R$color: int abc_secondary_text_material_light
com.google.android.filament.Material$VertexDomain: com.google.android.filament.Material$VertexDomain DEVICE
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.google.ar.sceneform.ux.TranslationController: com.google.ar.sceneform.math.Vector3 desiredLocalPosition
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.google.ar.core.ImageFormat: int Y8
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability SUPPORTED_NOT_INSTALLED
com.google.ar.sceneform.ux.R$style: int Base_V23_Theme_AppCompat_Light
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.google.ar.sceneform.ux.R$styleable: int[] StateListDrawableItem
com.google.ar.sceneform.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_4
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Caption
com.google.ar.sceneform.R$dimen: int abc_floating_window_z
com.google.ar.sceneform.ux.R$attr: int overlapAnchor
com.google.android.filament.VertexBuffer$QuatTangentContext: int quatCount
com.google.ar.sceneform.ux.R$drawable: int abc_list_pressed_holo_light
com.google.ar.sceneform.R$id: int home
com.google.ar.schemas.lull.LayoutHorizontalAlignment: java.lang.String[] names
com.google.ar.sceneform.R$drawable: int abc_cab_background_top_material
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda2: android.hardware.camera2.CameraCaptureSession f$1
com.google.ar.sceneform.R$attr: int elevation
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_ZBack_YLeft
com.google.ar.sceneform.R$styleable: int RecycleListView_paddingTopNoTitle
com.google.ar.sceneform.ux.R$attr: int autoSizeTextType
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_SearchView
com.google.ar.sceneform.Camera: boolean isArCamera
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_26
com.google.ar.sceneform.ux.R$dimen: int tooltip_precise_anchor_threshold
com.google.ar.sceneform.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.google.android.filament.VertexBuffer$QuatTangentContext: int outStride
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType SHORT2
com.google.android.filament.TextureSampler$MagFilter: com.google.android.filament.TextureSampler$MagFilter LINEAR
com.google.ar.sceneform.R$drawable: int tooltip_frame_light
com.google.ar.sceneform.R$id: int up
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Inverse
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.SkeletonNode$SkeletonSkinningModifier skinningModifier
com.google.ar.core.Coordinates2d: int nativeCode
com.google.ar.sceneform.R$id: int screen
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Light_Dialog
com.google.ar.sceneform.R$id: int accessibility_custom_action_12
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.google.android.filament.android.UiHelper$TextureViewHandler: android.view.TextureView mTextureView
com.google.ar.sceneform.ArSceneView: com.google.ar.core.Anchor lastValidEnvironmentalHdrAnchor
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod NOT_TRACKING
com.google.ar.sceneform.ux.R$drawable: int abc_text_select_handle_middle_mtrl_light
com.google.ar.schemas.lull.AxisSystem: int ZUp_YFront_XLeft
com.google.android.filament.Skybox: long mNativeObject
com.google.android.filament.Material$Interpolation: com.google.android.filament.Material$Interpolation SMOOTH
com.google.android.filament.android.TextureHelper: java.lang.reflect.Method sTextureGetNativeObject
com.google.ar.core.ImageMetadata: int SENSOR_TEST_PATTERN_DATA
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableBottomCompat
com.google.ar.sceneform.lullmodel.TextureFiltering: short Linear
com.google.ar.sceneform.ux.R$color: int highlighted_text_material_light
com.google.ar.sceneform.rendering.R$raw: int sceneform_camera_material
com.google.android.filament.View$ToneMapping: com.google.android.filament.View$ToneMapping ACES
com.google.ar.sceneform.ux.R$attr: int actionMenuTextColor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.ar.sceneform.R$attr: int activityChooserViewStyle
com.google.ar.sceneform.ux.PinchGesture: com.google.ar.sceneform.math.Vector3 previousPosition2
com.google.ar.schemas.lull.TextureFiltering: short NearestMipmapLinear
androidx.window.embedding.SplitInfo: float splitRatio
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.google.ar.core.InstallActivity: int BOX_SIZE_DP
com.google.ar.schemas.lull.VertexAttributeUsage: java.lang.String[] names
com.google.ar.sceneform.ux.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.google.android.filament.MaterialInstance$IntElement: com.google.android.filament.MaterialInstance$IntElement INT4
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.google.ar.sceneform.ux.R$attr: int defaultQueryHint
com.google.ar.sceneform.R$attr: int arrowHeadLength
com.google.ar.sceneform.R$drawable: int notify_panel_notification_icon_bg
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.google.ar.sceneform.R$id: int icon_group
com.google.ar.sceneform.rendering.ExternalTexture: com.google.android.filament.Texture filamentTexture
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_RatingBar
com.google.ar.sceneform.ux.TransformableNode: com.google.ar.sceneform.ux.RotationController rotationController
com.google.ar.sceneform.lullmodel.DeviceType: int Mouse
com.google.ar.sceneform.R$style: int Widget_AppCompat_Button_Colored
com.google.flatbuffers.Table: int bb_pos
com.google.ar.sceneform.ux.R$styleable: int ActionBar_backgroundSplit
com.google.ar.sceneform.Camera: float farPlane
com.google.ar.sceneform.R$attr: int actionModeCloseDrawable
com.google.ar.sceneform.ux.R$style: int Platform_Widget_AppCompat_Spinner
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Menu
com.google.ar.sceneform.R$dimen: int notification_action_text_size
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Occlusion
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Title
com.google.ar.sceneform.R$styleable: int SearchView_android_inputType
com.google.ar.sceneform.ux.R$attr: int buttonStyle
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_stacked_tab_max_width
com.google.ar.sceneform.ux.R$anim: int abc_tooltip_exit
com.google.ar.sceneform.ux.R$id: int action_image
com.google.ar.sceneform.ux.R$id: int dialog_button
com.google.ar.sceneform.R$dimen: int abc_alert_dialog_button_dimen
com.google.ar.sceneform.R$attr: int actionBarTabBarStyle
com.google.ar.sceneform.ux.R$attr: int colorButtonNormal
com.google.ar.sceneform.ux.R$style: int Platform_ThemeOverlay_AppCompat
com.google.ar.sceneform.R$styleable: int MenuItem_android_checkable
com.google.ar.sceneform.ux.R$layout: int abc_dialog_title_material
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Body1
com.google.ar.sceneform.R$styleable: int GradientColor_android_startY
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_TextView
com.google.ar.sceneform.R$id: int action_bar_subtitle
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float[] sphericalHarmonics
com.google.ar.sceneform.R$id: int uniform
com.google.ar.sceneform.ux.R$style: int Platform_V21_AppCompat
com.google.android.filament.Renderer: com.google.android.filament.Engine mEngine
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.SkeletonNode faceRegionsSkeletonNode
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.google.ar.sceneform.ux.R$styleable: int ActionBar_title
com.google.ar.sceneform.Scene: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_buttonBarStyle
com.google.ar.schemas.lull.DeviceType: int Controller2
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction[] $VALUES
com.google.ar.sceneform.rendering.Light$Builder: float spotlightConeInner
com.google.ar.sceneform.ux.R$id: int collapseActionView
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Headline
com.google.ar.sceneform.ux.R$id: int expanded_menu
com.google.ar.core.AugmentedFace: java.nio.FloatBuffer verticesBuffer
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA8
com.google.ar.sceneform.R$layout: int abc_screen_simple_overlay_action_mode
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_alertDialogTheme
com.google.ar.sceneform.R$dimen: int abc_action_bar_default_padding_end_material
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.google.ar.sceneform.ux.R$id: int decor_content_parent
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_Button
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_XFront_YRight
com.google.ar.sceneform.ux.R$attr: int backgroundSplit
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_switchStyle
com.google.ar.sceneform.ux.R$styleable: int ButtonBarLayout_allowStacking
com.google.android.filament.Skybox$Builder: com.google.android.filament.Skybox$Builder$BuilderFinalizer mFinalizer
com.google.flatbuffers.FlatBufferBuilder: boolean nested
com.google.ar.sceneform.rendering.TextureInternalData: com.google.ar.sceneform.rendering.Texture$Sampler sampler
com.google.ar.sceneform.rendering.LightInstance: java.lang.String TAG
com.google.ar.sceneform.ux.R$drawable: int abc_btn_check_material
com.google.ar.sceneform.R$dimen: int abc_search_view_preferred_height
com.google.ar.sceneform.ux.R$id: int __arcore_cancelButton
com.google.ar.sceneform.ux.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
com.google.ar.sceneform.R$color: int material_grey_850
androidx.fragment.app.Fragment: boolean mHasMenu
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability SUPPORTED_INSTALLED
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_25
com.google.ar.sceneform.R$attr: int contentInsetEnd
com.google.ar.sceneform.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.ar.sceneform.ux.R$dimen: int hint_alpha_material_light
com.google.ar.sceneform.utilities.LoadHelper: java.lang.String RAW_RESOURCE_TYPE
com.google.flatbuffers.FlatBufferBuilder: int minalign
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format RG_INTEGER
com.google.ar.sceneform.rendering.CameraStream: int VERTEX_COUNT
com.google.android.filament.View$AmbientOcclusion: com.google.android.filament.View$AmbientOcclusion NONE
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat DXT3_RGBA
com.google.ar.sceneform.R$layout: int notification_template_part_time
com.google.ar.sceneform.ux.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
com.google.ar.core.ImageMetadata: int COLOR_CORRECTION_ABERRATION_MODE
com.google.ar.sceneform.ux.TranslationController: com.google.ar.sceneform.math.Vector3 initialForwardInLocal
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textColorSearchUrl
com.google.ar.sceneform.R$styleable: int ViewStubCompat_android_layout
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat ETC2_EAC_SRGBA8
com.google.ar.schemas.sceneform.LightingCubeFaceType: int px
com.google.ar.core.ImageMetadata: int SHADING_START
com.google.ar.sceneform.ux.R$attr: int alertDialogButtonGroupStyle
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat
com.google.ar.sceneform.R$layout: int abc_action_bar_up_container
com.google.ar.sceneform.R$styleable: int[] ActionBar
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: java.lang.String[] names
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_title_material_toolbar
com.google.ar.sceneform.ux.BaseTransformationController: boolean enabled
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.android.filament.RenderableManager$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.sceneform.R$drawable: int abc_list_pressed_holo_light
androidx.fragment.app.Fragment: boolean mCalled
com.google.ar.schemas.lull.AxisSystem: int YUp_ZFront_XRight
com.google.ar.sceneform.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.google.ar.sceneform.R$color: int switch_thumb_normal_material_dark
com.google.ar.sceneform.R$id: int right_side
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.Material faceMeshOccluderMaterial
com.google.ar.sceneform.R$color: int error_color_material_dark
com.google.ar.sceneform.R$attr: int autoCompleteTextViewStyle
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_small_material
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.google.ar.sceneform.ux.R$attr: int tickMarkTint
com.google.ar.core.ArCoreApk$InstallBehavior: int nativeCode
com.google.android.filament.View$AmbientOcclusionOptions: float resolution
com.google.ar.sceneform.R$attr: int dropDownListViewStyle
com.google.ar.sceneform.lullmodel.VariantDef: byte VariantMapDef
com.google.ar.sceneform.rendering.PlaneRenderer: boolean isVisible
com.google.ar.sceneform.ux.R$drawable: int abc_ic_star_black_16dp
com.google.ar.sceneform.R$id: int accessibility_custom_action_21
com.google.ar.sceneform.R$id: int alertTitle
com.google.ar.sceneform.R$style: int Base_V21_Theme_AppCompat_Dialog
com.google.ar.sceneform.ux.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.google.ar.sceneform.Node: boolean enabled
com.google.ar.sceneform.rendering.Texture$Usage: com.google.ar.sceneform.rendering.Texture$Usage COLOR
com.google.ar.sceneform.R$styleable: int[] CompoundButton
com.google.ar.core.CameraConfig$FacingDirection: com.google.ar.core.CameraConfig$FacingDirection BACK
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat EAC_R11_SIGNED
com.google.ar.sceneform.R$id: int tag_unhandled_key_event_manager
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.math.Matrix cachedRelativeTransform
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB5_A1
com.google.ar.sceneform.rendering.Light: boolean enableShadows
com.google.ar.sceneform.ux.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.google.ar.sceneform.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorAccent
com.google.ar.sceneform.R$string: int abc_activity_chooser_view_see_all
com.google.ar.sceneform.R$styleable: int FontFamily_fontProviderAuthority
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.google.ar.sceneform.R$attr: int contentInsetStart
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Ambient
com.google.ar.sceneform.rendering.R$raw: int sceneform_plane_material
com.google.android.filament.Fence$FenceStatus: com.google.android.filament.Fence$FenceStatus TIMEOUT_EXPIRED
com.google.ar.schemas.sceneform.SamplerUsageType: java.lang.String[] names
com.google.ar.schemas.lull.OptionalBool: java.lang.String[] names
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_trackTint
com.google.ar.sceneform.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.google.ar.sceneform.ux.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.google.ar.sceneform.ux.R$attr: int fontProviderQuery
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int LeftDown
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Display1
com.google.ar.sceneform.R$color: int abc_primary_text_material_light
com.google.ar.sceneform.R$styleable: int SearchView_queryHint
com.google.ar.sceneform.R$bool: int abc_config_actionMenuItemAllCaps
com.google.ar.sceneform.R$attr: int spinnerStyle
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.google.ar.sceneform.R$id: int accessibility_custom_action_9
com.google.ar.sceneform.R$style: int Theme_AppCompat_Dialog_Alert
com.google.ar.core.ImageMetadata: int LENS_START
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_textStyle
com.google.android.filament.Texture$PixelBufferDescriptor: java.nio.Buffer storage
com.google.ar.sceneform.R$integer: int cancel_button_image_alpha
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability SUPPORTED_APK_TOO_OLD
com.google.android.filament.Fence$Type: com.google.android.filament.Fence$Type SOFT
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType USHORT4
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_SERVICE_UNAVAILABLE
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.rendering.Vertex$UvCoordinate uvCoordinate
com.google.ar.sceneform.ux.R$drawable: int abc_list_selector_background_transition_holo_dark
com.google.ar.sceneform.R$id: int textSpacerNoButtons
com.google.ar.sceneform.ux.R$styleable: int ActionBar_background
com.google.ar.sceneform.ux.BaseGesture: boolean hasFinished
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.google.ar.sceneform.Camera: float verticalFov
com.google.ar.sceneform.R$dimen: int compat_button_inset_vertical_material
com.google.ar.sceneform.collision.Collider: com.google.ar.sceneform.collision.CollisionShape localShape
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleTextColor
com.google.ar.sceneform.ux.TwistGesture: com.google.ar.sceneform.math.Vector3 startPosition1
com.google.ar.sceneform.lullmodel.TextureWrap: java.lang.String[] names
com.google.ar.sceneform.ux.PinchGesture: float gap
com.google.ar.sceneform.R$drawable: int abc_cab_background_internal_bg
com.google.ar.sceneform.ux.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.google.ar.sceneform.ux.R$string: int abc_activitychooserview_choose_application
com.google.ar.core.CameraConfig$StereoCameraUsage: com.google.ar.core.CameraConfig$StereoCameraUsage REQUIRE_AND_USE
com.google.ar.sceneform.ux.R$attr: int listMenuViewStyle
com.google.ar.sceneform.ux.R$id: int titleDividerNoCustom
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.google.ar.sceneform.ux.R$attr: int drawerArrowStyle
com.google.ar.sceneform.collision.Collider: boolean isWorldShapeDirty
com.google.ar.sceneform.R$styleable: int[] MenuView
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.google.android.filament.Engine: com.google.android.filament.LightManager mLightManager
com.google.ar.sceneform.ux.ScaleController: float elasticity
com.google.ar.sceneform.ux.R$styleable: int AppCompatImageView_srcCompat
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.google.ar.sceneform.ux.R$attr: int windowMinWidthMajor
com.google.ar.sceneform.ux.R$dimen: int compat_button_padding_horizontal_material
com.google.ar.core.ImageMetadata: int SECTION_SCALER
com.google.ar.sceneform.R$string: int __arcore_continue
com.google.ar.sceneform.R$dimen: int abc_button_padding_horizontal_material
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ButtonBar
com.google.ar.sceneform.R$id: int off
com.google.ar.sceneform.ux.R$color: int abc_search_url_text_pressed
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.ar.sceneform.ux.R$attr: int windowFixedWidthMinor
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Large
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement FLOAT3
androidx.fragment.app.Fragment: boolean mRemoving
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_panelMenuListTheme
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat UNUSED
com.google.ar.schemas.lull.VariantDef: byte DataHashValue
com.google.flatbuffers.FlatBufferBuilder: com.google.flatbuffers.Utf8 utf8
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement FLOAT
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_typeface
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.ar.sceneform.rendering.SkeletonRig: int FLOATS_PER_BONE
com.google.ar.sceneform.ux.R$attr: int toolbarStyle
com.google.ar.sceneform.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.google.ar.sceneform.R$styleable: int[] AnimatedStateListDrawableTransition
com.google.ar.sceneform.R$styleable: int Toolbar_logoDescription
com.google.ar.schemas.lull.LayoutVerticalAlignment: int Center
com.google.ar.sceneform.rendering.CameraStream: float[] CAMERA_UVS
androidx.window.embedding.SplitRule: float splitRatio
com.google.ar.sceneform.ux.R$raw: int keep_arcore
com.google.android.filament.Material$Parameter: java.lang.String name
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeBackground
com.google.ar.sceneform.R$style: int Widget_AppCompat_Button
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker frameRenderTracker
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.rendering.Renderable renderable
kotlinx.coroutines.channels.ArrayChannel: int size
com.google.ar.sceneform.AnchorNode: com.google.ar.core.Anchor anchor
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_lineHeight
com.google.ar.core.Session: long nativeSymbolTableHandle
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.ar.sceneform.ux.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Height
com.google.ar.sceneform.rendering.MaterialFactory: java.lang.String MATERIAL_TEXTURE
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_textAllCaps
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_android_windowIsFloating
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_YFront_ZLeft
com.google.ar.sceneform.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.google.ar.sceneform.ux.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_dividerHorizontal
com.google.ar.sceneform.R$styleable: int[] AnimatedStateListDrawableItem
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.google.ar.sceneform.R$style: int Base_V23_Theme_AppCompat
com.google.ar.sceneform.R$attr: int ratingBarStyle
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.ar.sceneform.ux.R$drawable: int abc_cab_background_top_mtrl_alpha
com.google.ar.sceneform.rendering.RenderableDefinition: int COLOR_SIZE
com.google.ar.sceneform.ux.R$styleable: int[] GradientColor
com.google.ar.sceneform.R$styleable: int Toolbar_collapseContentDescription
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus NONE
com.google.ar.sceneform.R$attr: int customNavigationLayout
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.window.embedding.SplitRule: int minSmallestWidth
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB32I
com.google.ar.sceneform.ux.R$attr: int collapseIcon
com.google.ar.sceneform.R$dimen: int abc_list_item_padding_horizontal_material
com.google.ar.sceneform.R$attr: int collapseIcon
com.google.android.filament.RenderTarget$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.sceneform.ux.R$dimen: int notification_top_pad
com.google.ar.sceneform.Scene: boolean lightProbeSet
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.google.ar.sceneform.R$drawable: int abc_ic_search_api_material
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.google.ar.sceneform.ux.R$color: int material_grey_50
com.google.ar.sceneform.ux.R$styleable: int MenuItem_contentDescription
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Button_Small
com.google.ar.sceneform.rendering.Renderer: float cameraAperature
com.google.ar.sceneform.rendering.R$string: int __arcore_cancel
com.google.ar.sceneform.ux.R$attr: int closeIcon
com.google.ar.schemas.lull.VertexAttributeUsage: int Normal
com.google.ar.sceneform.R$drawable: int notification_template_icon_low_bg
com.google.ar.sceneform.ux.R$drawable: int notification_template_icon_low_bg
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.google.ar.sceneform.ux.R$styleable: int GradientColorItem_android_color
com.google.ar.sceneform.R$style: int Base_ThemeOverlay_AppCompat
com.google.ar.sceneform.ux.R$styleable: int[] AppCompatSeekBar
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType UBYTE4
com.google.ar.sceneform.ux.R$drawable: int tooltip_frame_light
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG8
com.google.ar.sceneform.assets.RenderableSource$SourceType: com.google.ar.sceneform.assets.RenderableSource$SourceType GLB
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.math.Matrix viewScaleMatrix
com.google.ar.sceneform.R$anim: int abc_fade_out
com.google.ar.sceneform.ux.R$styleable: int StateListDrawable_android_exitFadeDuration
com.google.ar.sceneform.R$style: int Widget_AppCompat_RatingBar
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d VIEW
com.google.ar.sceneform.R$attr: int alertDialogStyle
com.google.ar.sceneform.rendering.MaterialFactory: java.lang.String MATERIAL_METALLIC
com.google.ar.sceneform.R$drawable: int abc_btn_colored_material
com.google.ar.sceneform.ux.R$color: int abc_primary_text_disable_only_material_light
com.google.ar.core.ImageMetadata: int SECTION_SHADING
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.math.Vector3 normal
com.google.ar.core.CameraConfig$StereoCameraUsage: int nativeCode
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB16I
com.google.ar.sceneform.lullmodel.TextureFiltering: short LinearMipmapNearest
com.google.ar.sceneform.R$styleable: int AppCompatTheme_controlBackground
com.google.ar.sceneform.rendering.Renderer: android.view.Surface surface
com.google.ar.sceneform.R$style: int TextAppearance_Compat_Notification
com.google.ar.sceneform.ux.R$attr: int textLocale
com.google.ar.sceneform.ux.R$drawable: int abc_btn_colored_material
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.ar.core.Pose: com.google.ar.core.Quaternion quaternion
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorControlActivated
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_showDividers
com.google.ar.sceneform.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.google.ar.core.AugmentedFace: java.nio.FloatBuffer normalsBuffer
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.ar.sceneform.R$styleable: int FontFamily_fontProviderPackage
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG32F
com.google.ar.sceneform.ux.R$id: int title_template
com.google.ar.sceneform.R$attr: int alertDialogButtonGroupStyle
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Dialog
com.google.android.filament.MaterialInstance: long mNativeObject
com.google.ar.sceneform.R$dimen: int notification_right_icon_size
com.google.android.filament.Fence$FenceStatus: com.google.android.filament.Fence$FenceStatus ERROR
com.google.ar.schemas.lull.AxisSystem: int YUp_XBack_ZLeft
com.google.ar.sceneform.rendering.GLHelper: int EGL_OPENGL_ES3_BIT
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_autoSizeTextType
com.google.ar.sceneform.R$dimen: int notification_small_icon_size_as_large
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment RIGHT
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Matrix cachedWorldModelMatrix
com.google.ar.sceneform.ux.R$layout: int sceneform_plane_discovery_layout
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type SAMPLER_EXTERNAL
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason CAMERA_UNAVAILABLE
com.google.ar.schemas.sceneform.SamplerUsageType: short Lookup
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType UBYTE2
com.google.ar.sceneform.R$styleable: int AppCompatTextView_textLocale
com.google.ar.sceneform.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.google.ar.sceneform.R$attr: int buttonStyleSmall
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ImageButton
com.google.ar.core.AugmentedImageDatabase: com.google.ar.core.Session session
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_android_gravity
com.google.ar.schemas.lull.DeviceType: int Hand
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 localScale
com.google.ar.schemas.sceneform.RenderFlags: byte DisableFrustumCulling
com.google.ar.sceneform.R$id: int showHome
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.google.ar.schemas.sceneform.ParameterInitDefType: java.lang.String[] names
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType[] $VALUES
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionButton_Overflow
com.google.ar.sceneform.ux.R$string: int __arcore_installing
com.google.ar.sceneform.ux.R$color: int error_color_material_light
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ListView
com.google.ar.sceneform.R$id: int FUNCTION
com.google.ar.sceneform.rendering.Renderer: java.lang.Runnable onFrameRenderDebugCallback
com.google.ar.sceneform.ux.R$attr: int actionModeBackground
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.google.ar.sceneform.assets.RenderableSource$RecenterMode: com.google.ar.sceneform.assets.RenderableSource$RecenterMode NONE
com.google.ar.sceneform.ux.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.google.ar.sceneform.ux.BaseArFragment: boolean installRequested
com.google.ar.sceneform.R$attr: int selectableItemBackground
com.google.ar.sceneform.ArSceneView: java.lang.String TAG
com.google.ar.sceneform.rendering.Vertex$UvCoordinate: float y
com.google.ar.sceneform.R$string: int abc_activitychooserview_choose_application
com.google.ar.sceneform.ux.R$drawable: int abc_textfield_activated_mtrl_alpha
com.google.ar.sceneform.R$color: int ripple_material_dark
com.google.ar.sceneform.ux.TwistGesture: com.google.ar.sceneform.math.Vector3 previousPosition2
com.google.ar.sceneform.rendering.SceneformBundle: int RCB_MINOR_VERSION
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_type
com.google.ar.core.SharedCamera: boolean cameraSharedWithAr
com.google.ar.sceneform.R$styleable: int GradientColor_android_gradientRadius
com.google.ar.sceneform.R$attr: int searchIcon
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format RGB_INTEGER
com.google.ar.sceneform.ux.R$layout: int custom_dialog
com.google.ar.schemas.sceneform.SamplerCompareFunc: java.lang.String[] names
com.google.ar.sceneform.ArSceneView: boolean lightEstimationEnabled
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_padding_top_material
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.google.ar.schemas.sceneform.SamplerWrapMode: java.lang.String[] names
com.google.ar.sceneform.R$styleable: int SwitchCompat_switchTextAppearance
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.google.ar.sceneform.R$layout: int abc_select_dialog_material
com.google.ar.sceneform.ux.R$color: int abc_search_url_text
com.google.ar.schemas.lull.DeviceType: int Hmd
com.google.ar.sceneform.R$id: int search_bar
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionBar_TabBar
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Button_Colored
com.google.ar.sceneform.R$attr: int lineHeight
com.google.ar.sceneform.R$attr: int switchStyle
androidx.window.R$styleable: int SplitPairRule_clearTop
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleMarginBottom
com.google.android.filament.View$DepthPrepass: com.google.android.filament.View$DepthPrepass DEFAULT
com.google.ar.sceneform.ux.R$styleable: int[] ViewBackgroundHelper
com.google.ar.sceneform.ux.R$id: int src_in
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState NONE
com.google.ar.sceneform.rendering.Light$Type: com.google.ar.sceneform.rendering.Light$Type SPOTLIGHT
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int Orientation
com.google.ar.sceneform.R$dimen: int compat_notification_large_icon_max_height
com.google.ar.sceneform.ux.R$attr: int actionOverflowButtonStyle
com.google.ar.sceneform.rendering.ThreadPools: java.util.concurrent.Executor threadPoolExecutor
com.google.ar.sceneform.R$styleable: int ActionBar_contentInsetLeft
com.google.ar.sceneform.R$styleable: int[] ButtonBarLayout
com.google.ar.sceneform.ux.R$style: int Base_V26_Theme_AppCompat
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat ETC2_RGB8
com.google.ar.sceneform.ux.R$attr: int colorPrimary
com.google.ar.sceneform.lullmodel.TextureFiltering: short NearestMipmapNearest
com.google.ar.sceneform.R$dimen: int abc_progress_bar_height_material
com.google.ar.sceneform.R$attr: int contentInsetLeft
com.google.ar.sceneform.ux.R$attr: int buttonStyleSmall
com.google.ar.core.Config$LightEstimationMode: int nativeCode
androidx.window.core.Bounds: int bottom
com.google.ar.core.HitResult: long nativeHandle
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Shininess
com.google.ar.sceneform.lullmodel.VariantDef: byte DataString
com.google.ar.sceneform.ux.R$dimen: int compat_notification_large_icon_max_width
com.google.ar.sceneform.rendering.RenderableDefinition: java.util.List vertices
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Title_Inverse
com.google.ar.sceneform.ux.ScaleController: float sensitivity
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 cachedWorldPosition
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_startX
com.google.ar.sceneform.R$style: int Platform_Widget_AppCompat_Spinner
com.google.ar.sceneform.ux.R$drawable: int abc_vector_test
com.google.ar.sceneform.ux.BaseArFragment: boolean isStarted
com.google.ar.sceneform.ux.R$color: int bright_foreground_material_light
com.google.ar.sceneform.R$styleable: int SwitchCompat_splitTrack
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int UpLeft
androidx.window.R$styleable: int[] SplitPairFilter
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableItem_android_id
com.google.ar.sceneform.ux.R$color: int primary_text_default_material_light
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.ar.sceneform.R$id: int accessibility_custom_action_28
com.google.ar.sceneform.ux.R$id: int tabMode
com.google.ar.sceneform.R$raw: int sceneform_transparent_textured_material
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_Switch
com.google.ar.sceneform.ux.R$id: int progress_circular
com.google.flatbuffers.Constants: int SIZEOF_INT
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.google.ar.sceneform.ux.R$attr: int buttonTintMode
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder$BuilderFinalizer mFinalizer
com.google.ar.sceneform.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.google.ar.sceneform.R$id: int action_image
com.google.android.filament.View$DynamicResolutionOptions: boolean enabled
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter magFilter
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R32F
com.google.ar.sceneform.ux.TwistGesture: com.google.ar.sceneform.math.Vector3 startPosition2
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage$CubeMapPlane: int pixelStride
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean IS_MIN_ANDROID_API_LEVEL
com.google.ar.sceneform.ux.R$raw: int sceneform_plane_shadow_material
com.google.ar.sceneform.ux.R$attr: int actionBarDivider
com.google.ar.sceneform.rendering.Light: float MIN_LIGHT_INTENSITY
com.google.ar.sceneform.R$styleable: int AppCompatTheme_panelMenuListTheme
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowActionModeOverlay
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.android.filament.LightManager$ShadowOptions: float shadowFar
androidx.window.embedding.ActivityRule: java.util.Set filters
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.google.ar.sceneform.R$drawable: int abc_item_background_holo_dark
com.google.android.filament.LightManager$ShadowOptions: boolean stable
com.google.ar.sceneform.R$id: int end
com.google.ar.sceneform.ux.R$styleable: int PopupWindow_android_popupAnimationStyle
com.google.ar.sceneform.R$attr: int color
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.google.ar.sceneform.R$attr: int imageButtonStyle
kotlin.jvm.internal.FunctionReference: int arity
com.google.ar.core.SharedCamera: java.lang.String TAG
androidx.fragment.app.Fragment: boolean mRetainInstance
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.google.ar.sceneform.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.google.ar.sceneform.R$styleable: int MenuItem_android_menuCategory
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R8
com.google.ar.sceneform.ux.R$attr: int contentInsetLeft
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R16I
com.google.ar.core.ImageMetadata: int LENS_POSE_ROTATION
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Medium
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.google.ar.sceneform.ux.R$drawable: int abc_popup_background_mtrl_mult
com.google.ar.sceneform.R$color: int dim_foreground_material_dark
com.google.ar.sceneform.R$attr: int selectableItemBackgroundBorderless
com.google.ar.sceneform.utilities.MovingAverage: double DEFAULT_WEIGHT
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality SUFFICIENT
com.google.ar.sceneform.R$drawable: int btn_radio_on_mtrl
com.google.ar.core.ImageMetadata: int SENSOR_TEST_PATTERN_MODE
com.google.ar.sceneform.ux.BaseTransformableNode: com.google.ar.sceneform.ux.TransformationSystem transformationSystem
com.google.ar.sceneform.ux.ScaleController: float DEFAULT_MAX_SCALE
com.google.ar.sceneform.ux.R$styleable: int[] AnimatedStateListDrawableTransition
com.google.ar.sceneform.R$attr: int maxButtonHeight
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.View emptyView
com.google.ar.sceneform.ux.R$id: int default_activity_button
com.google.ar.sceneform.R$attr: int actionLayout
com.google.ar.sceneform.R$attr: int hideOnContentScroll
com.google.ar.sceneform.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType CHAR
com.google.ar.sceneform.R$layout: int abc_alert_dialog_button_bar_material
com.google.ar.sceneform.R$id: int notification_main_column
com.google.ar.sceneform.rendering.PlaneRenderer: java.lang.String MATERIAL_UV_SCALE
com.google.ar.sceneform.ux.R$attr: int actionProviderClass
com.google.ar.sceneform.rendering.CameraStream: com.google.android.filament.IndexBuffer cameraIndexBuffer
com.google.ar.sceneform.ux.R$dimen: int abc_search_view_preferred_width
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState[] $VALUES
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_YFront_XRight
com.google.ar.sceneform.ux.R$attr: int tickMark
com.google.ar.sceneform.ux.R$id: int uniform
com.google.ar.sceneform.R$dimen: int abc_list_item_height_large_material
com.google.ar.sceneform.rendering.Renderable: java.util.ArrayList materialBindings
com.google.ar.sceneform.ux.R$id: int alertTitle
com.google.ar.sceneform.ux.R$id: int select_dialog_listview
com.google.ar.sceneform.ux.R$id: int tag_unhandled_key_event_manager
com.google.ar.sceneform.Node: com.google.ar.sceneform.Node$OnTapListener onTapListener
androidx.fragment.app.Fragment: android.view.View mView
com.google.ar.core.InstallActivity: java.lang.String TAG
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.google.ar.core.ImageMetadata: int SENSOR_DYNAMIC_WHITE_LEVEL
com.google.ar.core.ImageMetadata: int LENS_FOCUS_RANGE
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.google.ar.sceneform.ux.R$string: int abc_shareactionprovider_share_with_application
com.google.ar.schemas.lull.TextureTargetType: short Standard2d
com.google.android.filament.TextureSampler$MagFilter: com.google.android.filament.TextureSampler$MagFilter NEAREST
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.google.ar.sceneform.R$styleable: int[] GradientColor
com.google.ar.schemas.lull.TextureWrap: short MirrorClampToEdge
com.google.ar.sceneform.ux.R$styleable: int MenuItem_iconTintMode
com.google.ar.sceneform.ux.R$styleable: int MenuItem_numericModifiers
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.google.ar.sceneform.R$attr: int colorButtonNormal
com.google.ar.sceneform.ux.R$styleable: int ActionMode_closeItemLayout
com.google.ar.sceneform.ux.R$attr: int font
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type BOOL2
com.google.ar.sceneform.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 cachedWorldScale
com.google.ar.core.Session$Feature: com.google.ar.core.Session$Feature[] $VALUES
com.google.vr.dynamite.client.ObjectWrapper: java.lang.Object wrappedObject
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Display2
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.google.ar.sceneform.ux.R$attr: int initialActivityCount
com.google.ar.sceneform.ux.R$attr: int showAsAction
com.google.android.filament.MaterialInstance: long mNativeMaterial
com.google.ar.sceneform.R$styleable: int ActionBar_popupTheme
com.google.android.filament.Texture$PixelBufferDescriptor: int alignment
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.google.android.filament.Material$Parameter: com.google.android.filament.Material$Parameter$Precision precision
com.google.ar.sceneform.ux.R$attr: int actionOverflowMenuStyle
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float colorB
com.google.ar.sceneform.ux.R$styleable: int SearchView_searchHintIcon
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.google.ar.sceneform.ux.R$id: int FUNCTION
com.google.ar.sceneform.ux.AugmentedFaceNode: java.lang.String FACE_MESH_TEXTURE_MATERIAL_PARAMETER
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.google.ar.sceneform.rendering.Renderer: com.google.ar.sceneform.rendering.Color DEFAULT_CLEAR_COLOR
com.google.ar.sceneform.ux.R$styleable: int View_android_focusable
com.google.ar.sceneform.rendering.ViewRenderable: java.lang.String TAG
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type FLOAT
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
com.google.ar.sceneform.ux.R$dimen: int abc_alert_dialog_button_bar_height
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ProgressBar
com.google.ar.sceneform.ux.R$styleable: int AppCompatImageView_tintMode
com.google.ar.sceneform.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleTextAppearance
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Display1
com.google.ar.sceneform.ux.R$dimen: int abc_edit_text_inset_horizontal_material
com.google.ar.sceneform.ux.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.google.ar.sceneform.R$drawable: int notification_action_background
com.google.ar.core.ImageMetadata: int JPEG_GPS_PROCESSING_METHOD
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode REPEAT
com.google.ar.sceneform.ux.R$dimen: int notification_action_text_size
com.google.ar.sceneform.rendering.R$raw: int keep_arcore
com.google.ar.sceneform.ux.R$attr: int spinBars
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry modelRenderableRegistry
com.google.ar.core.AugmentedFace: java.nio.FloatBuffer textureCoordinatesBuffer
com.google.ar.sceneform.R$id: int accessibility_custom_action_31
com.google.ar.sceneform.ux.R$attr: int fontFamily
com.google.ar.core.TrackData: long nativeSymbolTableHandle
androidx.window.R$styleable: int ActivityFilter_activityAction
com.google.ar.sceneform.R$styleable: int AppCompatTheme_selectableItemBackground
com.google.ar.sceneform.R$styleable: int[] Spinner
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ProgressBar
com.google.ar.sceneform.ux.R$id: int parentPanel
com.google.android.filament.Texture$Usage: int DEFAULT
com.google.ar.sceneform.ux.DragGesture: float SLOP_INCHES
com.google.ar.sceneform.lullmodel.TextureWrap: short MirroredRepeat
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode[] $VALUES
com.google.ar.sceneform.lullmodel.TextureWrap: short ClampToEdge
com.google.android.filament.RenderTarget: long mNativeObject
com.google.ar.sceneform.R$styleable: int SearchView_iconifiedByDefault
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod SCREENSPACE_WITH_APPROXIMATE_DISTANCE
com.google.ar.sceneform.R$attr: int tickMark
com.google.ar.sceneform.R$style: int Theme_AppCompat_Dialog_MinWidth
com.google.ar.sceneform.ArSceneView: float RECREATE_LIGHTING_ANCHOR_DISTANCE
com.google.ar.sceneform.ux.R$string: int abc_prepend_shortcut_label
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_showText
com.google.ar.sceneform.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.google.ar.sceneform.ux.R$attr: int preserveIconSpacing
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionButton
com.google.android.filament.Fence$Mode: com.google.android.filament.Fence$Mode FLUSH
com.google.ar.sceneform.R$anim: int abc_slide_in_top
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda3: android.hardware.camera2.CameraDevice f$1
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionBar
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.google.ar.core.ArCoreApk$InstallBehavior: com.google.ar.core.ArCoreApk$InstallBehavior OPTIONAL
com.google.ar.core.Config$InstantPlacementMode: int nativeCode
com.google.android.filament.View$DynamicResolutionOptions: float headRoomRatio
com.google.ar.sceneform.ux.R$attr: int actionModeSplitBackground
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_checkboxStyle
com.google.ar.sceneform.R$attr: int fontStyle
com.google.ar.sceneform.collision.RayHit: com.google.ar.sceneform.math.Vector3 point
com.google.ar.sceneform.ux.R$drawable: int abc_ic_menu_overflow_material
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_SearchView
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG8UI
com.google.ar.sceneform.ux.R$color: int error_color_material_dark
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_android_font
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.ar.sceneform.ux.R$color: int notification_action_color_filter
com.google.ar.sceneform.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.google.ar.sceneform.ux.R$styleable: int View_paddingStart
com.google.android.filament.android.UiHelper$1: com.google.android.filament.android.UiHelper this$0
com.google.ar.sceneform.ux.DragGesture: boolean DRAG_GESTURE_DEBUG
com.google.ar.sceneform.R$styleable: int StateListDrawable_android_constantSize
com.google.ar.sceneform.ux.R$color: int material_blue_grey_800
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.google.ar.core.Config$UpdateMode: com.google.ar.core.Config$UpdateMode[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarDivider
com.google.ar.schemas.sceneform.SamplerCompareFunc: short Always
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_YBack_XRight
androidx.fragment.app.Fragment: int mBackStackNesting
com.google.ar.sceneform.R$styleable: int ActionMode_height
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.google.ar.sceneform.ux.R$color: int switch_thumb_material_light
com.google.ar.sceneform.R$styleable: int AppCompatTheme_dividerVertical
com.google.android.filament.Platform: com.google.android.filament.Platform mCurrentPlatform
com.google.ar.sceneform.R$dimen: int abc_edit_text_inset_bottom_material
com.google.ar.sceneform.R$styleable: int MenuItem_android_checked
com.google.ar.sceneform.ux.R$attr: int showDividers
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorPrimaryDark
com.google.android.filament.IndirectLight$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.sceneform.R$attr: int divider
com.google.ar.sceneform.R$string: int status_bar_notification_info_overflow
com.google.ar.sceneform.ux.R$layout: int abc_list_menu_item_layout
com.google.ar.sceneform.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.ar.sceneform.R$styleable: int MenuItem_actionViewClass
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_editTextBackground
com.google.ar.schemas.sceneform.SamplerUsageType: short Data
com.google.ar.sceneform.resources.ResourceRegistry: java.util.Map registry
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type[] $VALUES
com.google.ar.sceneform.R$attr: int colorPrimary
com.google.ar.core.Session: com.google.ar.core.SharedCamera sharedCamera
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.google.ar.sceneform.lullmodel.VariantDef: byte DataBytes
com.google.ar.sceneform.ux.R$styleable: int[] AnimatedStateListDrawableItem
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_buttonStyle
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction LESS
com.google.ar.sceneform.ux.R$dimen: int abc_action_button_min_width_material
com.google.ar.sceneform.ux.R$layout: int notification_template_icon_group
com.google.android.filament.Material$VertexDomain: com.google.android.filament.Material$VertexDomain[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_textLocale
com.google.ar.sceneform.ux.R$styleable: int SearchView_android_imeOptions
com.google.ar.sceneform.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.google.ar.sceneform.rendering.Renderable: int RENDER_PRIORITY_FIRST
com.google.ar.sceneform.ux.BaseArFragment: android.widget.FrameLayout frameLayout
com.google.ar.core.SharedCamera: android.os.Handler sharedCameraHandler
com.google.ar.sceneform.TouchEventSystem: com.google.ar.sceneform.Scene$OnTouchListener onTouchListener
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType USHORT2
com.google.ar.sceneform.R$id: int right_icon
com.google.android.filament.Camera$Projection: com.google.android.filament.Camera$Projection[] $VALUES
com.google.android.filament.Viewport: int height
com.google.ar.core.ImageMetadata: int STATISTICS_INFO_START
com.google.ar.core.Config$CloudAnchorMode: com.google.ar.core.Config$CloudAnchorMode[] $VALUES
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason[] $VALUES
com.google.ar.sceneform.R$attr: int barLength
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int UpRight
com.google.ar.sceneform.ux.R$attr: int color
com.google.android.filament.Camera$Fov: com.google.android.filament.Camera$Fov VERTICAL
com.google.ar.sceneform.R$style: int Base_Animation_AppCompat_DropDownUp
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type SAMPLER_2D
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Display3
com.google.ar.schemas.lull.VariantDef: byte DataString
com.google.ar.sceneform.ux.R$styleable: int[] ListPopupWindow
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.android.filament.Material$CullingMode: com.google.android.filament.Material$CullingMode BACK
com.google.ar.sceneform.R$dimen: int compat_button_inset_horizontal_material
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ux.TransformationSystem transformationSystem
com.google.ar.sceneform.ux.R$drawable: int abc_cab_background_internal_bg
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.google.ar.sceneform.R$styleable: int ActionBar_contentInsetEndWithActions
com.google.android.filament.Fence$Mode: com.google.android.filament.Fence$Mode DONT_FLUSH
com.google.ar.sceneform.ux.TwistGesture: float deltaRotationDegrees
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_android_gravity
com.google.ar.core.ImageMetadata: int TYPE_FLOAT
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType[] $VALUES
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ListMenuView
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat ETC2_EAC_RGBA8
com.google.ar.sceneform.R$attr: int preserveIconSpacing
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: java.lang.String name
com.google.ar.sceneform.lullmodel.VertexAttributeType: int Vec4us
com.google.android.filament.Renderer: int MIRROR_FRAME_FLAG_SET_PRESENTATION_TIME
com.google.ar.sceneform.ux.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.ar.sceneform.R$style: int Widget_AppCompat_PopupWindow
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_medium_material
com.google.ar.sceneform.R$style: int Widget_AppCompat_Button_Small
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_controlBackground
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_android_thumb
com.google.ar.sceneform.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.google.ar.sceneform.rendering.Texture$Builder: boolean inPremultiplied
com.google.ar.sceneform.lullmodel.VariantDef: byte DataQuat
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarItemBackground
com.google.ar.sceneform.R$dimen: int abc_edit_text_inset_horizontal_material
com.google.ar.sceneform.R$styleable: int MenuView_android_itemTextAppearance
com.google.ar.schemas.lull.VertexAttributeUsage: int Orientation
com.google.ar.sceneform.ux.R$styleable: int MenuGroup_android_enabled
com.google.ar.sceneform.R$styleable: int FontFamilyFont_android_fontWeight
com.google.ar.sceneform.ux.R$color: int abc_input_method_navigation_guard
com.google.ar.sceneform.rendering.Renderer: float cameraShutterSpeed
com.google.ar.sceneform.R$attr: int listPreferredItemPaddingLeft
com.google.ar.core.TrackingState: int nativeCode
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ux.PlaneDiscoveryController planeDiscoveryController
com.google.ar.sceneform.ux.R$color: int abc_tint_edittext
com.google.ar.sceneform.Camera: float DEFAULT_NEAR_PLANE
com.google.ar.sceneform.R$color: int primary_dark_material_light
com.google.ar.sceneform.R$styleable: int StateListDrawable_android_visible
com.google.ar.sceneform.ux.R$attr: int autoSizeMinTextSize
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType FLOAT
com.google.ar.sceneform.R$dimen: int abc_button_inset_horizontal_material
com.google.ar.sceneform.R$dimen: int abc_text_size_body_1_material
com.google.ar.sceneform.R$attr: int iconTint
com.google.ar.sceneform.math.Quaternion: float SLERP_THRESHOLD
com.google.android.filament.View$AmbientOcclusionOptions: float radius
com.google.ar.sceneform.ux.R$raw: int sceneform_transparent_textured_material
com.google.android.filament.LightManager$ShadowOptions: float constantBias
com.google.ar.sceneform.ux.R$drawable: int abc_ic_ab_back_material
com.google.ar.sceneform.R$attr: int listChoiceBackgroundIndicator
com.google.ar.sceneform.R$id: int text2
com.google.ar.sceneform.R$id: int accessibility_custom_action_2
com.google.ar.sceneform.R$styleable: int Toolbar_titleMarginBottom
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type POINT
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int TexCoord
com.google.ar.sceneform.ux.R$string: int abc_menu_meta_shortcut_label
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_5
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.google.ar.sceneform.ux.BaseTransformableNode: java.util.ArrayList controllers
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality GOOD
com.google.ar.core.Pose: com.google.ar.core.Pose IDENTITY
com.google.ar.sceneform.R$attr: int autoSizePresetSizes
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.google.android.filament.Texture$PixelBufferDescriptor: com.google.android.filament.Texture$Format format
com.google.ar.sceneform.ux.R$anim: int abc_slide_out_top
com.google.ar.sceneform.ux.R$attr: int actionModePopupWindowStyle
com.google.ar.sceneform.R$styleable: int ActionBarLayout_android_layout_gravity
com.google.ar.sceneform.R$style: int Theme_AppCompat_CompactMenu
com.google.ar.sceneform.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
com.google.ar.sceneform.ux.R$color: int abc_tint_spinner
com.google.android.filament.AndroidPlatform: java.lang.String LOG_TAG
com.google.ar.sceneform.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB32UI
com.google.ar.schemas.lull.VertexAttributeUsage: int Color
com.google.ar.sceneform.R$attr: int actionBarWidgetTheme
com.google.android.filament.android.TextureHelper$1: int[] $SwitchMap$android$graphics$Bitmap$Config
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.google.ar.sceneform.ux.R$id: int bottom
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.ar.sceneform.R$dimen: int abc_dialog_fixed_width_major
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.google.ar.sceneform.R$attr: int buttonGravity
com.google.ar.sceneform.R$styleable: int AppCompatTheme_ratingBarStyle
com.google.ar.sceneform.ux.R$attr: int searchIcon
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType BYTE
com.google.ar.sceneform.ux.R$attr: int actionModeCloseButtonStyle
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute BONE_WEIGHTS
com.google.ar.sceneform.ux.R$styleable: int[] ActionBarLayout
com.google.ar.sceneform.R$attr: int fontProviderFetchTimeout
com.google.ar.sceneform.R$drawable: int abc_seekbar_track_material
com.google.ar.sceneform.R$styleable: int TextAppearance_android_shadowColor
com.google.ar.schemas.lull.AxisSystem: int XUp_ZFront_YRight
com.google.ar.sceneform.R$attr: int drawableTintMode
com.google.ar.sceneform.ux.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage: long timestamp
com.google.ar.sceneform.ux.R$color: int accent_material_light
com.google.ar.sceneform.Node: float DIRECTION_UP_EPSILON
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.rendering.Light$Type type
com.google.ar.sceneform.ux.PinchGesture: com.google.ar.sceneform.math.Vector3 startPosition1
com.google.ar.sceneform.R$style: int Widget_AppCompat_ListView_Menu
com.google.ar.core.Config$UpdateMode: com.google.ar.core.Config$UpdateMode BLOCKING
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter NEAREST
com.google.ar.sceneform.ux.R$attr: int elevation
com.google.ar.sceneform.ux.R$id: int wrap_content
com.google.ar.sceneform.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionBar
com.google.ar.sceneform.ux.R$styleable: int Toolbar_menu
com.google.ar.sceneform.ux.R$dimen: int compat_notification_large_icon_max_height
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.google.ar.core.ImageMetadata: int JPEG_GPS_TIMESTAMP
com.google.ar.sceneform.R$styleable: int ActionBar_subtitleTextStyle
com.google.ar.sceneform.R$styleable: int TextAppearance_android_shadowDx
com.google.ar.core.ImageMetadata: int TONEMAP_START
com.google.ar.sceneform.R$dimen: int abc_text_size_small_material
com.google.ar.sceneform.R$dimen: int abc_dropdownitem_text_padding_left
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.SceneView$AnimationTimeTransformer animationTimeTransformer
com.google.ar.sceneform.ux.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.android.filament.View$QualityLevel: com.google.android.filament.View$QualityLevel[] $VALUES
com.google.ar.sceneform.R$style: int Animation_AppCompat_Dialog
com.google.android.filament.android.UiHelper: com.google.android.filament.android.UiHelper$RenderSurface mRenderSurface
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.google.ar.sceneform.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
com.google.ar.sceneform.R$dimen: int abc_dialog_fixed_height_major
com.google.ar.sceneform.R$color: int abc_tint_btn_checkable
com.google.ar.sceneform.TouchEventSystem: com.google.ar.sceneform.Scene$OnTouchListener handlingTouchListener
com.google.ar.sceneform.math.Quaternion: float x
com.google.ar.core.RecordingConfig: com.google.ar.core.Session session
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: com.google.ar.sceneform.rendering.Material material
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat EAC_RG11
com.google.ar.sceneform.rendering.ShapeFactory: java.lang.String TAG
com.google.ar.sceneform.ux.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.google.ar.sceneform.R$attr: int actionModeWebSearchDrawable
com.google.ar.sceneform.ux.R$color: int abc_tint_btn_checkable
com.google.ar.sceneform.rendering.EngineInstance: boolean headlessEngine
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type VERTICAL
com.google.ar.sceneform.R$attr: int expandActivityOverflowButtonDrawable
com.google.ar.sceneform.ux.R$styleable: int Toolbar_subtitleTextColor
androidx.window.R$id: int ltr
com.google.ar.sceneform.R$id: int edit_query
com.google.ar.sceneform.lullmodel.TextureWrap: short ClampToBorder
com.google.ar.sceneform.ux.R$drawable: int abc_ic_clear_material
com.google.ar.sceneform.R$dimen: int abc_action_bar_default_padding_start_material
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.math.Matrix cachedRelativeTransformInverse
com.google.ar.sceneform.rendering.RenderableDefinition: int TANGENTS_SIZE
com.google.ar.sceneform.R$id: int tag_accessibility_clickable_spans
com.google.ar.sceneform.R$attr: int defaultQueryHint
com.google.ar.schemas.sceneform.ParameterInitDefType: byte IntVec4Init
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DEPTH24_STENCIL8
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.google.ar.schemas.lull.VariantDef: byte DataFloat
androidx.fragment.app.Fragment: java.lang.String mTag
com.google.ar.sceneform.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
com.google.ar.sceneform.R$attr: int initialActivityCount
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableTopCompat
com.google.ar.sceneform.rendering.PlaneRenderer: java.util.concurrent.CompletableFuture planeMaterialFuture
com.google.ar.sceneform.ArSceneView: int minArCoreVersionCode
com.google.ar.sceneform.R$id: int accessibility_custom_action_8
com.google.ar.sceneform.Node: java.lang.String DEFAULT_NAME
com.google.ar.sceneform.R$string: int abc_action_bar_up_description
com.google.ar.schemas.lull.DeviceType: int Controller
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type SPOT
com.google.ar.sceneform.rendering.CameraStream: com.google.android.filament.VertexBuffer cameraVertexBuffer
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_caption_material
com.google.ar.sceneform.R$layout: int abc_action_mode_bar
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Emissive
com.google.ar.sceneform.R$style: int Widget_AppCompat_Button_Borderless_Colored
androidx.fragment.app.Fragment: boolean mIsCreated
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ButtonBar
com.google.android.filament.View: com.google.android.filament.Scene mScene
androidx.window.R$attr: int splitMinWidth
com.google.ar.sceneform.R$attr: int windowActionBar
com.google.ar.sceneform.R$id: int accessibility_custom_action_5
com.google.ar.sceneform.rendering.Renderable: int renderPriority
com.google.ar.sceneform.R$styleable: int FontFamilyFont_android_fontStyle
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleMarginTop
com.google.ar.core.InstallActivity: java.lang.String INSTALL_BEHAVIOR_KEY
com.google.ar.sceneform.rendering.Renderer: float DEFAULT_CAMERA_APERATURE
com.google.ar.sceneform.ux.R$color: int abc_secondary_text_material_dark
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState SUCCESS
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_textColor
com.google.ar.sceneform.ux.R$id: int radio
com.google.android.filament.View$DepthPrepass: com.google.android.filament.View$DepthPrepass[] $VALUES
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewSizer viewSizer
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Specular
com.google.ar.sceneform.R$dimen: int hint_pressed_alpha_material_dark
com.google.ar.sceneform.R$attr: int editTextColor
com.google.android.filament.android.UiHelper$SurfaceViewHandler: android.view.SurfaceView mSurfaceView
com.google.ar.sceneform.rendering.Renderable: int RENDER_PRIORITY_DEFAULT
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus NONE
com.google.ar.core.Camera: long nativeHandle
com.google.ar.schemas.lull.TextureFiltering: short Nearest
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.google.ar.sceneform.R$styleable: int AppCompatTheme_panelBackground
com.google.ar.sceneform.ux.R$dimen: int abc_list_item_height_large_material
com.google.ar.sceneform.ux.R$color: int dim_foreground_disabled_material_light
com.google.ar.sceneform.R$attr: int actionModeShareDrawable
com.google.ar.sceneform.rendering.MaterialFactory: java.lang.String MATERIAL_ROUGHNESS
com.google.ar.sceneform.rendering.Renderer: float ARCORE_HDR_LIGHTING_CAMERA_SHUTTER_SPEED
com.google.ar.schemas.sceneform.ParameterInitDefType: byte IntVec3Init
com.google.ar.sceneform.R$color: int abc_search_url_text_normal
com.google.ar.sceneform.R$dimen: int abc_text_size_title_material_toolbar
com.google.ar.sceneform.ux.R$styleable: int ActionBar_hideOnContentScroll
com.google.ar.sceneform.R$color: int background_floating_material_dark
androidx.window.R$id: int rtl
com.google.ar.sceneform.ux.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.google.ar.sceneform.ux.R$drawable: int abc_list_selector_holo_light
com.google.ar.core.ImageMetadata: int SECTION_SENSOR_INFO
com.google.ar.sceneform.ux.BaseTransformationController: com.google.ar.sceneform.ux.BaseTransformableNode transformableNode
com.google.ar.core.PointCloud: long nativeHandle
com.google.ar.sceneform.R$styleable: int GradientColor_android_endColor
com.google.ar.sceneform.rendering.Renderer: int MAXIMUM_RESOLUTION
com.google.ar.sceneform.NodeParent: java.util.ArrayList children
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
com.google.android.filament.Texture$Usage: int UPLOADABLE
com.google.android.filament.Material$VertexDomain: com.google.android.filament.Material$VertexDomain OBJECT
com.google.ar.sceneform.ux.R$styleable: int MenuView_android_windowAnimationStyle
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Matrix rotationMatrix
com.google.android.filament.Colors$1: int[] $SwitchMap$com$google$android$filament$Colors$RgbaType
com.google.ar.sceneform.assets.RenderableSource$RecenterMode: com.google.ar.sceneform.assets.RenderableSource$RecenterMode ROOT
com.google.ar.core.Config: com.google.ar.core.Session session
com.google.ar.sceneform.R$attr: int windowMinWidthMajor
com.google.ar.sceneform.rendering.Renderable$Builder: byte[] materialsBytes
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType INT
com.google.ar.sceneform.ux.R$dimen: int compat_control_corner_material
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionBar_TabText
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.google.ar.sceneform.ux.R$attr: int barLength
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.google.ar.sceneform.ux.R$color: int abc_primary_text_disable_only_material_dark
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_14
com.google.ar.core.TrackableBase: long nativeHandle
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int Tangent
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.google.ar.sceneform.R$id: int parentPanel
com.google.ar.sceneform.ux.R$dimen: int abc_disabled_alpha_material_light
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_fontVariationSettings
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod FULL_TRACKING
com.google.android.filament.Colors$RgbaType: com.google.android.filament.Colors$RgbaType LINEAR
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.google.android.filament.VertexBuffer$QuatTangentContext: int tangentsStride
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableTintMode
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.ar.sceneform.R$styleable: int Toolbar_subtitleTextColor
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.google.ar.sceneform.ux.PinchGesture: float SLOP_INCHES
com.google.ar.sceneform.ux.R$color: int foreground_material_light
com.google.ar.sceneform.rendering.LightProbe: int[] FACE_TO_FILAMENT_MAPPING
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.google.android.filament.Material: java.util.Set mRequiredAttributes
com.google.ar.schemas.lull.MaterialTextureUsage: int Reflection
com.google.ar.sceneform.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.google.android.filament.Texture$Usage: int SAMPLEABLE
com.google.ar.sceneform.R$styleable: int SwitchCompat_switchMinWidth
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda1: android.hardware.camera2.CameraDevice$StateCallback f$0
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
com.google.ar.sceneform.rendering.R$string: int lib_name
com.google.ar.core.ImageMetadata: int CONTROL_AE_MODE
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.ar.sceneform.R$layout: int select_dialog_item_material
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_shadowColor
com.google.ar.sceneform.rendering.MaterialFactory: float DEFAULT_ROUGHNESS_PROPERTY
com.google.ar.sceneform.ux.R$styleable: int ActionMode_backgroundSplit
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry materialRegistry
com.google.ar.sceneform.R$id: int unchecked
com.google.ar.sceneform.R$color: int switch_thumb_normal_material_light
com.google.ar.sceneform.R$drawable: int abc_item_background_holo_light
com.google.ar.sceneform.ArSceneView: float[] lastValidEnvironmentalHdrMainLightDirection
com.google.ar.sceneform.ux.R$dimen: int tooltip_horizontal_padding
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ListView_Menu
com.google.ar.sceneform.R$attr: int navigationIcon
com.google.ar.sceneform.ux.BaseGesture: boolean hasStarted
com.google.ar.sceneform.ux.R$attr: int queryHint
com.google.ar.sceneform.R$styleable: int[] AppCompatTheme
com.google.ar.sceneform.ux.R$attr: int alphabeticModifiers
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DEPTH24
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType UINT
com.google.ar.sceneform.ux.R$color: int notification_icon_bg_color
com.google.ar.sceneform.ux.R$dimen: int abc_floating_window_z
com.google.ar.sceneform.ux.R$id: int contentPanel
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActivityChooserView
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_RatingBar
com.google.ar.core.ImageMetadata: int TYPE_BYTE
com.google.ar.sceneform.lullmodel.VariantDef: byte DataBool
com.google.ar.sceneform.rendering.LightProbe: int CUBEMAP_MIN_WIDTH
com.google.ar.sceneform.ux.PinchGesture: int pointerId1
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.Node faceMeshNode
com.google.ar.sceneform.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.ar.core.ImageMetadata: int SHADING_MODE
com.google.ar.sceneform.R$style: int Widget_AppCompat_ListPopupWindow
com.google.ar.sceneform.ux.R$dimen: int notification_large_icon_height
com.google.ar.sceneform.R$styleable: int StateListDrawable_android_exitFadeDuration
com.google.ar.sceneform.ux.R$layout: int abc_list_menu_item_radio
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.google.ar.sceneform.ux.R$id: int activity_chooser_view_content
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type USHORT
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.google.ar.sceneform.ux.R$style: int TextAppearance_Compat_Notification_Title
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type UINT4
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality INSUFFICIENT
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.google.ar.sceneform.R$styleable: int ActionBar_hideOnContentScroll
com.google.ar.sceneform.R$id: int accessibility_custom_action_4
com.google.ar.sceneform.ux.R$styleable: int Toolbar_logoDescription
com.google.ar.schemas.sceneform.ParameterInitDefType: byte BoolVec3Init
com.google.android.filament.Texture$PixelBufferDescriptor: int top
com.google.ar.sceneform.ux.R$id: int split_action_bar
com.google.ar.sceneform.ux.R$attr: int tooltipText
com.google.ar.sceneform.ux.R$anim: int abc_tooltip_enter
com.google.ar.sceneform.ux.R$attr: int tooltipForegroundColor
com.google.ar.sceneform.R$attr: int isLightTheme
com.google.ar.sceneform.R$attr: int tintMode
com.google.ar.sceneform.ux.R$attr: int displayOptions
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format ALPHA
com.google.ar.core.Anchor: com.google.ar.core.Session session
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_30
com.google.ar.sceneform.R$id: int line1
com.google.ar.sceneform.ux.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_fontFamily
com.google.ar.sceneform.ux.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_large_material
com.google.android.filament.android.UiHelper$2: com.google.android.filament.android.UiHelper this$0
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.google.ar.schemas.sceneform.RenderFlags: java.lang.String[] names
com.google.ar.sceneform.R$drawable: int abc_btn_check_material
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_YBack_XLeft
com.google.android.filament.Fence$Type: com.google.android.filament.Fence$Type HARD
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType FLOAT
com.google.ar.sceneform.R$drawable: int abc_scrubber_track_mtrl_alpha
com.google.ar.sceneform.R$styleable: int AlertDialog_singleChoiceItemLayout
com.google.ar.sceneform.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.google.android.filament.R$string: int lib_name
com.google.ar.sceneform.R$color: int bright_foreground_material_dark
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter LINEAR
com.google.ar.schemas.lull.MaterialTextureUsage: int Specular
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_EditText
com.google.ar.sceneform.ux.R$id: int textSpacerNoTitle
com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment: int Bottom
com.google.android.filament.Material$CullingMode: com.google.android.filament.Material$CullingMode NONE
com.google.ar.sceneform.resources.ResourceRegistry: java.lang.String TAG
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.google.ar.sceneform.R$id: int META
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_ZFront_XRight
com.google.ar.core.Config$FocusMode: com.google.ar.core.Config$FocusMode AUTO
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Toolbar
com.google.ar.sceneform.R$string: int abc_toolbar_collapse_description
com.google.ar.sceneform.R$styleable: int StateListDrawableItem_android_drawable
com.google.ar.sceneform.utilities.LoadHelper: int INVALID_RESOURCE_IDENTIFIER
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionDropDownStyle
com.google.ar.sceneform.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.google.ar.sceneform.ux.R$attr: int listPreferredItemPaddingLeft
com.google.ar.core.InstantPlacementPoint$TrackingMethod: int nativeCode
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda3: android.hardware.camera2.CameraCaptureSession$StateCallback f$0
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.google.ar.sceneform.R$attr: int dropdownListPreferredItemHeight
com.google.ar.sceneform.R$integer: int abc_config_activityShortDur
com.google.ar.sceneform.R$color: int abc_tint_seek_thumb
com.google.ar.sceneform.ux.R$styleable: int[] MenuGroup
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode ENVIRONMENTAL_HDR
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.google.ar.sceneform.R$attr: int commitIcon
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_EditText
com.google.ar.sceneform.R$attr: int height
com.google.ar.sceneform.R$style: int Base_V22_Theme_AppCompat_Light
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.google.ar.sceneform.R$id: int scrollView
com.google.ar.sceneform.rendering.TextureInternalData: com.google.android.filament.Texture filamentTexture
com.google.ar.sceneform.rendering.Renderable: int RENDER_PRIORITY_LAST
com.google.ar.schemas.sceneform.SamplerCompareFunc: short LessThan
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowNoTitle
com.google.ar.sceneform.ux.R$color: int abc_color_highlight_material
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter NEAREST_MIPMAP_LINEAR
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.ar.sceneform.ux.R$layout: int abc_expanded_menu_layout
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.google.ar.sceneform.ux.R$attr: int buttonPanelSideLayout
com.google.ar.sceneform.ux.R$attr: int buttonBarNeutralButtonStyle
com.google.ar.core.Frame: java.util.ArrayList ANCHORS_EMPTY_LIST
com.google.ar.sceneform.R$layout: int abc_tooltip
com.google.ar.sceneform.R$attr: int paddingTopNoTitle
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.google.ar.sceneform.R$dimen: int abc_panel_menu_list_width
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction GREATER_EQUAL
com.google.ar.sceneform.ux.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: long beginSampleTimestampNano
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode CLAMP_TO_EDGE
com.google.ar.core.InstallActivity: java.lang.String MESSAGE_TYPE_KEY
com.google.ar.sceneform.ux.R$attr: int selectableItemBackgroundBorderless
com.google.ar.core.InstallActivity: boolean installStarted
com.google.ar.sceneform.R$attr: int tickMarkTintMode
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction GREATER
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.google.ar.sceneform.R$color: int abc_primary_text_material_dark
com.google.ar.sceneform.R$attr: int contentInsetRight
com.google.ar.sceneform.ux.R$id: int notification_background
com.google.ar.sceneform.R$id: int accessibility_custom_action_14
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_SeekBar
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.google.ar.sceneform.R$attr: int drawableSize
com.google.ar.sceneform.ux.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA8I
com.google.ar.core.ImageMetadata: int CONTROL_AF_REGIONS
com.google.ar.sceneform.ux.R$styleable: int SearchView_android_focusable
com.google.ar.sceneform.R$styleable: int Spinner_popupTheme
com.google.ar.sceneform.ux.R$dimen: int abc_action_button_min_width_overflow_material
com.google.ar.sceneform.ux.RotationController: float rotationRateDegrees
com.google.ar.sceneform.R$styleable: int AppCompatTheme_toolbarStyle
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_17
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.google.ar.sceneform.ux.R$attr: int srcCompat
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type BOOL4
com.google.ar.sceneform.R$styleable: int GradientColor_android_centerY
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorControlHighlight
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.ar.sceneform.rendering.Texture: java.lang.String TAG
com.google.android.filament.MaterialInstance$BooleanElement: com.google.android.filament.MaterialInstance$BooleanElement BOOL4
com.google.ar.sceneform.rendering.Renderable: long DEFAULT_MAX_STALE_CACHE
com.google.ar.sceneform.ArSceneView: com.google.ar.core.Config cachedConfig
com.google.ar.sceneform.R$attr: int singleChoiceItemLayout
com.google.ar.sceneform.ux.R$id: int scrollIndicatorDown
com.google.ar.sceneform.ux.R$style: int Animation_AppCompat_DropDownUp
androidx.fragment.app.Fragment: int RESUMED
com.google.ar.sceneform.ux.R$id: int line3
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.google.ar.core.ImageMetadata: int CONTROL_AWB_LOCK
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.google.ar.core.ImageMetadata: int STATISTICS_FACE_RECTANGLES
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_buttonIconDimen
com.google.ar.sceneform.ux.R$styleable: int[] GradientColorItem
com.google.ar.core.ImageMetadata: int SENSOR_NOISE_PROFILE
com.google.ar.schemas.lull.OptionalBool: int Unset
com.google.ar.sceneform.R$id: int actions
com.google.ar.sceneform.ux.R$attr: int contentInsetEnd
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.ar.core.ImageMetadata: int SENSOR_SENSITIVITY
com.google.ar.sceneform.lullmodel.DeviceType: int Hand
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.google.ar.sceneform.R$dimen: int highlight_alpha_material_light
com.google.ar.sceneform.ux.R$style: int Platform_AppCompat
com.google.ar.core.CameraConfig: com.google.ar.core.Session session
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
com.google.ar.sceneform.Node: int WORLD_SCALE_DIRTY
com.google.ar.sceneform.ux.R$color: int primary_dark_material_dark
com.google.ar.sceneform.R$styleable: int ActionBar_titleTextStyle
com.google.ar.sceneform.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.google.ar.sceneform.R$attr: int thumbTextPadding
com.google.ar.sceneform.R$layout: int abc_screen_content_include
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.google.ar.sceneform.rendering.SceneformBundle: char[] RCB_SIGNATURE
com.google.ar.sceneform.math.Quaternion: float y
com.google.ar.sceneform.ux.ScaleController: float currentScaleRatio
com.google.ar.sceneform.ux.R$attr: int buttonTint
com.google.ar.schemas.sceneform.SamplerCompareFunc: short GreaterThan
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_fixed_width_major
com.google.ar.sceneform.R$styleable: int AppCompatTextHelper_android_textAppearance
com.google.ar.sceneform.rendering.R$raw: int sceneform_opaque_colored_material
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_PopupMenu
com.google.ar.sceneform.ux.R$drawable: int notification_bg_low_normal
com.google.ar.sceneform.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.google.ar.sceneform.R$drawable: int abc_ic_star_half_black_36dp
com.google.ar.sceneform.ux.R$attr: int subtitle
com.google.ar.sceneform.R$attr: int actionOverflowMenuStyle
com.google.ar.sceneform.rendering.CameraStream: int renderablePriority
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_ttcIndex
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_buttonPanelSideLayout
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder$BuilderFinalizer mFinalizer
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_viewInflaterClass
com.google.ar.sceneform.R$styleable: int[] MenuGroup
com.google.android.filament.Stream$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.core.ImageMetadata: int CONTROL_CAPTURE_INTENT
com.google.ar.sceneform.rendering.Light$Type: com.google.ar.sceneform.rendering.Light$Type[] $VALUES
com.google.ar.sceneform.R$styleable: int SearchView_android_imeOptions
com.google.ar.sceneform.ux.R$attr: int fontProviderAuthority
androidx.window.R$attr: int placeholderActivityName
com.google.ar.sceneform.ux.R$attr: int windowActionModeOverlay
com.google.ar.sceneform.R$attr: int popupTheme
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_startY
com.google.ar.core.Frame: java.util.ArrayList PLANES_EMPTY_LIST
com.google.ar.sceneform.R$styleable: int Toolbar_android_minHeight
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode[] $VALUES
com.google.ar.sceneform.ux.R$id: int search_close_btn
com.google.ar.core.RecordingConfig: long nativeSymbolTableHandle
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_29
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.ar.sceneform.R$attr: int actionMenuTextColor
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.google.ar.sceneform.ux.BaseArFragment: int RC_PERMISSIONS
com.google.ar.core.Frame: long nativeSymbolTableHandle
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type SUN
com.google.ar.core.ImageMetadata: int JPEG_THUMBNAIL_QUALITY
com.google.ar.core.AugmentedFace$RegionType: com.google.ar.core.AugmentedFace$RegionType NOSE_TIP
com.google.android.filament.View$Dithering: com.google.android.filament.View$Dithering NONE
com.google.ar.sceneform.R$id: int search_mag_icon
com.google.ar.sceneform.Camera: float DEFAULT_VERTICAL_FOV_DEGREES
androidx.window.R$id: int androidx_window_activity_scope
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.google.ar.sceneform.ux.R$id: int sceneform_hand_image
com.google.ar.sceneform.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.google.ar.schemas.lull.AxisSystem: int YUp_XFront_ZLeft
com.google.ar.core.ImageMetadata: int TONEMAP_CURVE_RED
com.google.ar.sceneform.SkeletonNode: java.util.HashMap boneNamesToNodes
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.google.ar.sceneform.R$style: int Base_V23_Theme_AppCompat_Light
com.google.ar.sceneform.utilities.MovingAverage: double average
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.google.ar.sceneform.R$styleable: int ActionMode_subtitleTextStyle
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat ETC2_SRGB8
com.google.ar.sceneform.ux.R$styleable: int Toolbar_collapseContentDescription
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
com.google.ar.sceneform.ux.R$style: int Base_Animation_AppCompat_Tooltip
com.google.ar.sceneform.ux.R$string: int abc_menu_delete_shortcut_label
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.google.ar.sceneform.ArSceneView: java.lang.String REPORTED_ENGINE_TYPE
com.google.android.filament.View$QualityLevel: com.google.android.filament.View$QualityLevel HIGH
com.google.ar.sceneform.R$drawable: int abc_text_cursor_material
com.google.ar.sceneform.rendering.PlaneRenderer: java.util.Map visualizerMap
com.google.ar.sceneform.R$styleable: int FontFamilyFont_fontVariationSettings
com.google.ar.sceneform.ux.R$color: int secondary_text_disabled_material_light
com.google.ar.sceneform.rendering.SkeletonRig: int BYTES_PER_FLOAT
com.google.ar.schemas.lull.MaterialTextureUsage: int Emissive
com.google.android.filament.View$AntiAliasing: com.google.android.filament.View$AntiAliasing[] $VALUES
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction LESS_EQUAL
com.google.ar.sceneform.ux.R$styleable: int Toolbar_contentInsetStart
com.google.android.filament.RenderTarget$AttachmentPoint: com.google.android.filament.RenderTarget$AttachmentPoint COLOR
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.google.ar.core.Config: long nativeHandle
com.google.ar.sceneform.ux.R$color: int material_grey_100
com.google.ar.schemas.lull.LayoutVerticalAlignment: java.lang.String[] names
com.google.ar.sceneform.R$style: int AlertDialog_AppCompat
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Roughness
com.google.ar.sceneform.R$attr: int contentDescription
com.google.ar.sceneform.ux.R$raw: int sceneform_face_mesh_occluder
com.google.ar.sceneform.R$string: int abc_menu_function_shortcut_label
com.google.ar.sceneform.ux.R$attr: int titleMarginEnd
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
com.google.ar.sceneform.ux.R$attr: int fontStyle
com.google.ar.sceneform.R$styleable: int ActionMode_background
com.google.ar.sceneform.R$styleable: int ActionBar_homeAsUpIndicator
com.google.ar.sceneform.R$layout: int custom_dialog
com.google.ar.schemas.lull.OptionalBool: int False
com.google.ar.sceneform.ux.PinchGesture: float SLOP_MOTION_DIRECTION_DEGREES
com.google.ar.sceneform.ux.R$string: int status_bar_notification_info_overflow
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.google.ar.sceneform.ux.R$id: int sceneform_ar_scene_view
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_showTitle
androidx.window.R$attr: int alwaysExpand
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableItem_android_id
com.google.ar.sceneform.R$style: int Widget_AppCompat_Spinner
com.google.ar.schemas.lull.DeviceType: java.lang.String[] names
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat ETC2_SRGB8_A1
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState SUCCESS
com.google.ar.sceneform.R$id: int showCustom
com.google.ar.sceneform.rendering.Renderer: android.view.SurfaceView surfaceView
com.google.ar.core.ImageMetadata: int TONEMAP_CURVE_GREEN
com.google.ar.sceneform.ux.TranslationController: float POSITION_LENGTH_THRESHOLD
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearanceListItem
com.google.ar.sceneform.ux.R$attr: int fontProviderCerts
com.google.android.filament.TextureSampler$1: int[] $SwitchMap$com$google$android$filament$TextureSampler$MagFilter
com.google.ar.sceneform.R$styleable: int[] ActivityChooserView
com.google.ar.core.ImageMetadata: int SECTION_TONEMAP
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_min_width_minor
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.google.ar.sceneform.rendering.LightProbe: int RGB_CHANNEL_COUNT
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.google.ar.sceneform.R$styleable: int SearchView_goIcon
com.google.ar.sceneform.R$anim: int abc_shrink_fade_out_from_bottom
com.google.ar.sceneform.ux.R$styleable: int ActionMode_height
com.google.ar.sceneform.R$string: int abc_capital_on
com.google.ar.sceneform.ux.FootprintSelectionVisualizer: com.google.ar.sceneform.rendering.ModelRenderable footprintRenderable
com.google.ar.sceneform.R$id: int none
com.google.ar.sceneform.R$id: int progress_horizontal
com.google.ar.core.Quaternion: float y
com.google.ar.sceneform.lullmodel.TextureTargetType: java.lang.String[] names
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading LIT
com.google.ar.sceneform.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.google.ar.sceneform.Scene: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters DEFAULT_HDR_PARAMETERS
com.google.ar.sceneform.ux.R$attr: int logo
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: java.lang.reflect.Method getNativeSwapChainMethod
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.ar.sceneform.ux.AugmentedFaceNode: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorControlNormal
com.google.ar.sceneform.ux.R$attr: int switchTextAppearance
com.google.ar.sceneform.ux.R$id: int topPanel
com.google.ar.sceneform.ux.R$drawable: int abc_tab_indicator_material
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_gradientRadius
com.google.ar.sceneform.ux.R$attr: int radioButtonStyle
com.google.ar.sceneform.rendering.SkeletonRig: java.nio.FloatBuffer materialBoneTransformsBuffer
com.google.ar.sceneform.R$styleable: int[] AppCompatSeekBar
com.google.ar.core.ImageMetadata: int LENS_FOCUS_DISTANCE
com.google.android.filament.Scene: long mNativeObject
com.google.ar.core.ImageMetadata: int SENSOR_FRAME_DURATION
com.google.ar.sceneform.R$styleable: int AppCompatSeekBar_tickMarkTint
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat DXT1_RGB
com.google.ar.sceneform.R$layout: int select_dialog_singlechoice_material
com.google.ar.sceneform.rendering.ModelRenderable: java.util.ArrayList animationData
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState ERROR_NOT_AUTHORIZED
com.google.ar.sceneform.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_thickness
com.google.ar.schemas.lull.VertexAttributeType: int Empty
com.google.android.filament.VertexBuffer$QuatType: com.google.android.filament.VertexBuffer$QuatType SHORT4
com.google.ar.core.InstallActivity: boolean waitingForCompletion
com.google.ar.sceneform.rendering.AnimatorImpl: com.google.ar.sceneform.rendering.AnimatorImpl$Factory factory
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.google.flatbuffers.FlatBufferBuilder: int[] vtables
com.google.ar.sceneform.ux.R$dimen: int notification_small_icon_background_padding
com.google.ar.sceneform.R$color: int primary_text_disabled_material_dark
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type FLOAT3
com.google.ar.sceneform.ux.R$dimen: int abc_cascading_menus_min_smallest_width
com.google.ar.sceneform.R$attr: int actionBarStyle
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: java.lang.reflect.Constructor swapChainInit
com.google.ar.sceneform.R$dimen: int abc_search_view_preferred_width
com.google.ar.core.ImageMetadata: int SYNC_START
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_padding_material
com.google.ar.sceneform.R$id: int useLogo
com.google.ar.sceneform.R$dimen: int abc_action_button_min_height_material
com.google.ar.sceneform.R$attr: int searchHintIcon
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.google.ar.sceneform.R$dimen: int abc_text_size_large_material
com.google.ar.sceneform.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.google.ar.sceneform.R$id: int beginning
com.google.ar.sceneform.R$styleable: int MenuItem_android_icon
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int BaseColor
com.google.ar.sceneform.R$styleable: int Toolbar_titleMargin
com.google.ar.sceneform.R$string: int abc_menu_meta_shortcut_label
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.google.ar.schemas.lull.AxisSystem: int YUp_ZBack_XRight
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry viewRenderableRegistry
com.google.ar.sceneform.ux.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.google.android.filament.Texture$PrefilterOptions: int sampleCount
com.google.ar.sceneform.ux.R$styleable: int SearchView_queryBackground
com.google.ar.sceneform.ux.R$drawable: int notification_icon_background
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability[] $VALUES
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_20
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.google.ar.sceneform.Camera: boolean areMatricesInitialized
com.google.ar.sceneform.R$styleable: int AppCompatTheme_dialogTheme
com.google.ar.sceneform.rendering.LightInstance: com.google.ar.sceneform.rendering.Light light
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_EditText
com.google.ar.schemas.lull.AxisSystem: int ZUp_YBack_XRight
com.google.ar.sceneform.R$id: int accessibility_custom_action_15
com.google.ar.sceneform.ux.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.google.ar.sceneform.ux.R$id: int image
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Medium
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DXT3_RGBA
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: com.google.ar.sceneform.utilities.MovingAverage movingAverage
com.google.ar.sceneform.R$drawable: int notification_bg_normal
com.google.android.filament.RenderTarget$AttachmentPoint: com.google.android.filament.RenderTarget$AttachmentPoint[] $VALUES
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_1
com.google.android.filament.Texture$PixelBufferDescriptor: com.google.android.filament.Texture$Type type
com.google.ar.sceneform.rendering.Renderer: java.util.ArrayList renderableInstances
com.google.ar.sceneform.ux.R$styleable: int[] AppCompatTextView
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_numericShortcut
com.google.android.filament.Texture$Sampler: com.google.android.filament.Texture$Sampler SAMPLER_EXTERNAL
com.google.android.filament.SwapChain: long CONFIG_READABLE
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.google.ar.sceneform.ux.R$drawable: int notification_bg
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.ar.sceneform.ux.R$attr: int colorAccent
com.google.ar.sceneform.R$styleable: int Toolbar_contentInsetLeft
com.google.ar.sceneform.ux.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
com.google.ar.core.LightEstimate$State: com.google.ar.core.LightEstimate$State[] $VALUES
com.google.ar.sceneform.R$dimen: int abc_dialog_min_width_major
com.google.ar.sceneform.ux.R$dimen: int abc_button_padding_vertical_material
com.google.ar.sceneform.ux.R$id: int always
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType HALF
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorBackgroundFloating
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.ar.sceneform.rendering.LightProbe: int RGBA_BYTES_PER_PIXEL
com.google.ar.sceneform.rendering.Color: float INT_COLOR_SCALE
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean isUnderTesting
com.google.ar.sceneform.ux.R$drawable: int abc_cab_background_top_material
com.google.ar.core.ImageMetadata: int CONTROL_AE_ANTIBANDING_MODE
com.google.ar.sceneform.R$drawable: int abc_list_focused_holo
com.google.ar.sceneform.R$id: int split_action_bar
com.google.ar.schemas.sceneform.SamplerCompareFunc: short GreaterEqual
com.google.ar.sceneform.R$style: int TextAppearance_Compat_Notification_Line2
com.google.ar.sceneform.ArSceneView: android.view.Display display
com.google.ar.sceneform.ux.R$dimen: int abc_list_item_padding_horizontal_material
androidx.window.embedding.SplitRule: int minWidth
com.google.ar.sceneform.R$drawable: int sceneform_plane
com.google.ar.sceneform.R$attr: int toolbarNavigationButtonStyle
com.google.ar.sceneform.R$attr: int buttonBarNegativeButtonStyle
com.google.ar.sceneform.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DEPTH16
com.google.ar.sceneform.R$styleable: int AppCompatTextHelper_android_drawableRight
com.google.ar.core.ImageMetadata: int SENSOR_START
com.google.ar.sceneform.R$style: int Base_V28_Theme_AppCompat_Light
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB8I
com.google.ar.sceneform.ux.R$anim: int abc_slide_out_bottom
com.google.ar.sceneform.R$drawable: int abc_cab_background_top_mtrl_alpha
com.google.ar.sceneform.R$id: int action_mode_close_button
com.google.ar.sceneform.R$color: int material_blue_grey_950
com.google.ar.sceneform.R$string: int abc_menu_shift_shortcut_label
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableRightCompat
com.google.ar.sceneform.R$id: int accessibility_custom_action_24
com.google.ar.sceneform.R$drawable: int btn_checkbox_checked_mtrl
com.google.ar.sceneform.R$drawable: int abc_popup_background_mtrl_mult
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.google.ar.sceneform.R$attr: int autoSizeStepGranularity
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType INT
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.google.ar.sceneform.R$attr: int colorPrimaryDark
com.google.ar.core.CameraConfig$StereoCameraUsage: com.google.ar.core.CameraConfig$StereoCameraUsage[] $VALUES
com.google.android.filament.Colors$RgbType: com.google.android.filament.Colors$RgbType SRGB
com.google.ar.sceneform.ux.R$attr: int textAllCaps
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage$CubeMapPlane: byte[] bytes
com.google.ar.sceneform.rendering.Renderer: boolean recreateSwapChain
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.ar.sceneform.ux.R$styleable: int[] ActionMenuView
com.google.ar.sceneform.R$dimen: int notification_media_narrow_margin
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_listItemLayout
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.Camera camera
com.google.ar.sceneform.R$id: int scrollIndicatorDown
com.google.ar.sceneform.R$styleable: int Toolbar_subtitleTextAppearance
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_android_fontWeight
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.ar.schemas.lull.VertexAttributeType: int Vec4us
com.google.flatbuffers.Struct: int bb_pos
com.google.android.filament.LightManager: float EFFICIENCY_INCANDESCENT
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.google.ar.sceneform.ux.R$layout: int abc_action_menu_item_layout
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_body_2_material
com.google.ar.sceneform.ux.R$string: int lib_name
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.google.ar.core.ImageMetadata: int CONTROL_AE_PRECAPTURE_TRIGGER
com.google.ar.sceneform.ArSceneView: java.util.function.Consumer onNextHdrLightingEstimate
com.google.ar.sceneform.rendering.Renderer: float ARCORE_HDR_LIGHTING_CAMERA_APERATURE
com.google.ar.sceneform.ux.R$color: int switch_thumb_disabled_material_dark
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Reflection
com.google.ar.sceneform.ux.R$dimen: int notification_right_icon_size
com.google.ar.sceneform.rendering.Color: float r
com.google.ar.schemas.lull.MaterialTextureUsage: int Shininess
com.google.ar.sceneform.rendering.Texture$Builder: android.graphics.Bitmap bitmap
com.google.ar.schemas.lull.MaterialTextureUsage: int Ambient
com.google.ar.sceneform.R$attr: int switchPadding
com.google.ar.sceneform.ux.R$styleable: int[] SwitchCompat
com.google.ar.sceneform.ux.R$id: int blocking
com.google.ar.sceneform.ux.R$styleable: int ViewStubCompat_android_inflatedId
com.google.ar.sceneform.ux.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.google.ar.sceneform.R$attr: int listDividerAlertDialog
com.google.android.filament.Colors$RgbType: com.google.android.filament.Colors$RgbType LINEAR
com.google.android.filament.View: com.google.android.filament.Viewport mViewport
com.google.ar.sceneform.R$dimen: int abc_dialog_title_divider_material
com.google.ar.sceneform.ux.R$attr: int paddingTopNoTitle
com.google.ar.core.ImageMetadata: int SECTION_COLOR_CORRECTION
com.google.ar.sceneform.R$attr: int iconTintMode
com.google.ar.sceneform.R$styleable: int[] AppCompatImageView
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry externalTextureCleanupRegistry
com.google.ar.sceneform.collision.RayHit: float distance
com.google.ar.sceneform.R$color: int accent_material_dark
com.google.ar.sceneform.R$attr: int actionDropDownStyle
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Light_NoActionBar
com.google.ar.sceneform.ux.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.google.ar.sceneform.Sun: int DEFAULT_SUNLIGHT_COLOR
com.google.ar.sceneform.R$drawable: int notification_tile_bg
com.google.ar.sceneform.ux.R$attr: int titleTextAppearance
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_TextView
com.google.ar.sceneform.ux.R$id: int never
com.google.ar.sceneform.ux.R$styleable: int MenuItem_actionLayout
com.google.ar.sceneform.R$attr: int showAsAction
com.google.ar.sceneform.Scene: com.google.ar.sceneform.rendering.LightProbe lightProbe
com.google.ar.sceneform.rendering.LightProbe: int FLOATS_PER_VECTOR
com.google.ar.core.ImageMetadata: int LENS_POSE_TRANSLATION
com.google.ar.sceneform.ux.R$id: int search_mag_icon
com.google.android.filament.Texture$PixelBufferDescriptor: com.google.android.filament.Texture$CompressedFormat compressedFormat
com.google.ar.sceneform.ux.R$attr: int actionModeStyle
com.google.ar.sceneform.R$style: int Theme_AppCompat
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.google.ar.sceneform.R$attr: int progressBarPadding
com.google.ar.sceneform.ux.R$attr: int colorPrimaryDark
com.google.ar.sceneform.Node: com.google.ar.sceneform.Node$TapTrackingData tapTrackingData
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Quaternion cachedWorldRotation
com.google.ar.sceneform.ux.R$styleable: int FontFamily_fontProviderQuery
com.google.ar.sceneform.R$id: int tag_accessibility_pane_title
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_radioButtonStyle
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int[] StateListDrawable
com.google.ar.sceneform.ux.R$styleable: int FontFamily_fontProviderCerts
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: float ambientShScaleForFilament
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat DXT1_RGBA
com.google.ar.sceneform.ux.R$styleable: int ViewStubCompat_android_id
com.google.ar.core.Point$OrientationMode: com.google.ar.core.Point$OrientationMode INITIALIZED_TO_IDENTITY
com.google.ar.schemas.lull.TextureWrap: java.lang.String[] names
com.google.ar.core.Config$UpdateMode: com.google.ar.core.Config$UpdateMode LATEST_CAMERA_IMAGE
com.google.ar.sceneform.R$attr: int textAppearanceListItemSecondary
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.google.ar.sceneform.ux.R$styleable: int[] LinearLayoutCompat
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ImageButton
com.google.ar.schemas.lull.VariantDef: byte VariantArrayDef
com.google.ar.sceneform.R$layout: int notification_template_part_chronometer
com.google.ar.sceneform.ux.ScaleController: float DEFAULT_MIN_SCALE
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_color
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.google.ar.sceneform.R$id: int normal
com.google.ar.sceneform.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_15
com.google.android.filament.EntityInstance: int NULL
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Large
com.google.ar.sceneform.R$string: int abc_menu_sym_shortcut_label
kotlin.jvm.internal.Lambda: int arity
com.google.ar.sceneform.R$style: int Base_V21_Theme_AppCompat_Light
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Display4
com.google.ar.sceneform.ux.R$id: int forever
com.google.ar.schemas.lull.AxisSystem: int XUp_YBack_ZLeft
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_popupMenuStyle
androidx.window.core.Version: java.lang.String description
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.google.ar.sceneform.R$styleable: int ActionBar_contentInsetStartWithNavigation
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type UINT_10F_11F_11F_REV
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Toolbar
com.google.android.filament.RenderableManager$Builder: long mNativeBuilder
com.google.ar.sceneform.ux.R$styleable: int ActionBar_navigationMode
com.google.ar.sceneform.R$styleable: int AppCompatTheme_android_windowIsFloating
com.google.android.filament.View$Dithering: com.google.android.filament.View$Dithering[] $VALUES
com.google.ar.sceneform.ux.R$attr: int ttcIndex
com.google.android.filament.Fence$FenceStatus: com.google.android.filament.Fence$FenceStatus CONDITION_SATISFIED
com.google.ar.sceneform.ux.R$dimen: int compat_button_inset_horizontal_material
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type[] $VALUES
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.google.ar.core.Anchor$TerrainAnchorState: int nativeCode
com.google.android.filament.RenderTarget$Builder: long mNativeBuilder
com.google.ar.sceneform.rendering.R$raw: int sceneform_view_renderable
com.google.ar.sceneform.ux.R$attr: int editTextBackground
com.google.ar.sceneform.ux.R$styleable: int StateListDrawable_android_visible
com.google.ar.sceneform.ux.R$drawable: int abc_ratingbar_indicator_material
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int LeftUp
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.google.ar.sceneform.ux.R$styleable: int[] DrawerArrowToggle
com.google.ar.sceneform.ux.R$layout: int abc_activity_chooser_view
com.google.ar.sceneform.ux.R$attr: int toolbarNavigationButtonStyle
com.google.ar.sceneform.R$drawable: int notification_template_icon_bg
com.google.ar.sceneform.R$attr: int actionModeCutDrawable
com.google.ar.schemas.lull.VariantDef: byte NONE
com.google.ar.sceneform.R$color: int abc_hint_foreground_material_dark
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.google.ar.core.AugmentedImage$TrackingMethod: int nativeCode
com.google.ar.sceneform.ux.R$styleable: int ActionBar_progressBarPadding
com.google.ar.sceneform.R$style: int TextAppearance_Compat_Notification_Title
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.math.Quaternion boneRotation
androidx.fragment.app.Fragment: boolean mInLayout
com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory: com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory INSTANCE
com.google.ar.sceneform.ux.R$attr: int textAppearancePopupMenuHeader
com.google.ar.sceneform.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.google.ar.sceneform.R$dimen: int disabled_alpha_material_dark
com.google.ar.sceneform.R$styleable: int FontFamilyFont_android_font
com.google.ar.sceneform.R$dimen: int abc_action_bar_elevation_material
com.google.ar.sceneform.ux.R$anim: int abc_fade_out
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.Material defaultFaceMeshMaterial
com.google.ar.sceneform.ux.R$attr: int textColorSearchUrl
com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment: int Center
com.google.ar.sceneform.ux.R$anim: int abc_popup_exit
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.google.ar.sceneform.rendering.DpToMetersViewSizer: float DEFAULT_SIZE_Z
com.google.ar.sceneform.ux.R$id: int list_item
com.google.ar.sceneform.rendering.PlaneRenderer: com.google.ar.sceneform.rendering.Material shadowMaterial
com.google.ar.sceneform.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.google.ar.sceneform.ux.R$attr: int itemPadding
com.google.android.filament.Texture$Usage: int DEPTH_ATTACHMENT
com.google.ar.sceneform.ArSceneView: float DEFAULT_PIXEL_INTENSITY
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda3: android.hardware.camera2.CameraCaptureSession f$1
com.google.ar.sceneform.R$dimen: int abc_text_size_subtitle_material_toolbar
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionButtonStyle
com.google.ar.sceneform.Scene: java.lang.String DEFAULT_LIGHTPROBE_RESOURCE_NAME
com.google.ar.schemas.sceneform.SamplerMinFilter: short LinearMipmapLinear
com.google.android.filament.IndexBuffer$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.sceneform.R$styleable: int MenuItem_android_alphabeticShortcut
com.google.android.filament.MaterialInstance: com.google.android.filament.Material mMaterial
com.google.ar.sceneform.ux.R$styleable: int Toolbar_contentInsetRight
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.google.ar.sceneform.R$dimen: int notification_action_icon_size
com.google.ar.sceneform.ux.R$dimen: int abc_disabled_alpha_material_dark
com.google.ar.sceneform.R$attr: int trackTintMode
com.google.ar.core.PointCloud: long nativeSymbolTableHandle
com.google.ar.sceneform.utilities.ArCoreVersion: java.lang.String METADATA_KEY_MIN_APK_VERSION
com.google.ar.sceneform.R$styleable: int MenuItem_android_visible
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.common.TransformProvider transformProvider
com.google.ar.sceneform.R$style: int Platform_AppCompat_Light
com.google.ar.schemas.lull.VariantDef: byte VariantMapDef
com.google.ar.sceneform.rendering.Texture$Builder: java.util.concurrent.Callable inputStreamCreator
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode DISABLED
com.google.ar.sceneform.ux.HandMotionAnimation: float HALF_PI
com.google.ar.sceneform.ux.R$styleable: int[] ActionMode
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ArSceneView arSceneView
com.google.ar.sceneform.R$attr: int drawableEndCompat
com.google.ar.sceneform.R$id: int accessibility_custom_action_1
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_PopupMenu
com.google.ar.sceneform.R$id: int spacer
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.ar.sceneform.ux.R$id: int action_text
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActivityChooserView
com.google.ar.sceneform.ux.R$drawable: int abc_ic_star_black_48dp
com.google.ar.sceneform.R$dimen: int abc_control_corner_material
com.google.ar.sceneform.ux.R$attr: int listPreferredItemPaddingRight
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ListMenuView
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_drawableTopCompat
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.google.flatbuffers.Utf8: com.google.flatbuffers.Utf8 DEFAULT
com.google.ar.sceneform.R$styleable: int ActionBar_subtitle
com.google.ar.core.Anchor$CloudAnchorState: int nativeCode
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus FINISHED
androidx.fragment.app.Fragment: int mFragmentId
com.google.ar.sceneform.ux.R$color: int switch_thumb_normal_material_light
com.google.ar.sceneform.R$string: int abc_search_hint
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType HALF3
com.google.ar.sceneform.utilities.LoadHelper: java.lang.String DRAWABLE_RESOURCE_TYPE
com.google.ar.sceneform.SkeletonNode: boolean isModifiedSinceLastRender
com.google.ar.sceneform.R$id: int accessibility_custom_action_19
com.google.flatbuffers.Table: com.google.flatbuffers.Utf8 utf8
com.google.ar.sceneform.ux.R$styleable: int Spinner_popupTheme
com.google.ar.sceneform.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.ar.core.ArCoreApk$InstallBehavior: com.google.ar.core.ArCoreApk$InstallBehavior[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int ActionBar_subtitle
com.google.ar.sceneform.R$styleable: int AlertDialog_listItemLayout
com.google.ar.sceneform.R$dimen: int abc_text_size_button_material
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R32I
com.google.ar.sceneform.lullmodel.DeviceType: int Hmd
com.google.ar.sceneform.R$styleable: int MenuItem_iconTint
com.google.android.filament.TextureSampler: int mSampler
com.google.ar.sceneform.R$styleable: int Toolbar_menu
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.google.ar.sceneform.ux.R$string: int abc_capital_off
com.google.ar.sceneform.rendering.LightProbe$Builder: java.lang.String name
com.google.ar.sceneform.ux.R$attr: int tickMarkTintMode
com.google.ar.sceneform.ux.R$color: int abc_hint_foreground_material_dark
com.google.ar.sceneform.ux.R$style: int Animation_AppCompat_Dialog
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.google.ar.sceneform.R$drawable: int abc_btn_radio_material_anim
com.google.ar.sceneform.R$styleable: int[] ActionMode
com.google.ar.sceneform.ArSceneView: float[] colorCorrectionPixelIntensity
com.google.ar.sceneform.R$color: int bright_foreground_inverse_material_light
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.rendering.Color color
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.SelectionVisualizer selectionVisualizer
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type SHORT
com.google.ar.sceneform.ux.R$color: int material_blue_grey_900
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ListMenuView
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.google.ar.sceneform.ux.R$dimen: int highlight_alpha_material_light
com.google.ar.sceneform.R$drawable: int abc_ic_star_black_36dp
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int SpecularEnvironment
com.google.ar.core.CameraConfig$DepthSensorUsage: com.google.ar.core.CameraConfig$DepthSensorUsage DO_NOT_USE
com.google.ar.sceneform.R$drawable: int abc_btn_default_mtrl_shape
com.google.ar.sceneform.R$attr: int showText
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowActionBar
com.google.ar.sceneform.ux.R$layout: int abc_screen_toolbar
com.google.ar.sceneform.R$attr: int textColorSearchUrl
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.google.ar.sceneform.assets.RenderableSource: android.net.Uri modelUri
com.google.ar.sceneform.ux.R$styleable: int[] PopupWindowBackgroundState
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.android.filament.Viewport: int width
com.google.ar.sceneform.R$styleable: int AlertDialog_android_layout
com.google.ar.sceneform.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.ar.sceneform.R$styleable: int SearchView_layout
com.google.ar.schemas.lull.MaterialTextureUsage: int BaseColor
com.google.ar.sceneform.lullmodel.VariantDef: byte DataVec2
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.google.ar.sceneform.ux.BaseGesture: boolean wasCancelled
com.google.ar.sceneform.ux.R$styleable: int SearchView_layout
com.google.ar.sceneform.R$styleable: int ActionBar_backgroundSplit
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Spinner
com.google.ar.sceneform.ux.R$string: int abc_menu_sym_shortcut_label
com.google.ar.sceneform.R$dimen: int abc_text_size_body_2_material
com.google.flatbuffers.FlatBufferBuilder: int num_vtables
com.google.ar.sceneform.ux.R$attr: int contentInsetStart
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat ETC2_RGB8_A1
com.google.ar.sceneform.R$styleable: int[] AppCompatTextHelper
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Button
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.google.ar.sceneform.ux.R$drawable: int abc_btn_borderless_material
com.google.ar.core.ImageMetadata: int SENSOR_INFO_START
com.google.ar.sceneform.R$id: int submit_area
com.google.ar.sceneform.R$styleable: int[] PopupWindow
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.ar.sceneform.ux.R$attr: int backgroundTint
com.google.android.filament.android.TextureHelper: java.lang.reflect.Method sEngineGetNativeObject
com.google.ar.sceneform.R$id: int search_go_btn
com.google.ar.sceneform.ux.R$dimen: int abc_seekbar_track_background_height_material
com.google.ar.sceneform.R$attr: int listPreferredItemHeight
com.google.ar.sceneform.TouchEventSystem: java.lang.Object[] motionEventSplitParams
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleMarginStart
com.google.android.filament.Texture$PixelBufferDescriptor: int stride
com.google.ar.sceneform.ux.R$attr: int buttonBarButtonStyle
com.google.ar.sceneform.rendering.R$string: int __arcore_install_app
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_Dialog
com.google.android.filament.android.TextureHelper: int BITMAP_CONFIG_ALPHA_8
com.google.ar.sceneform.R$attr: int checkedTextViewStyle
com.google.ar.sceneform.ux.R$dimen: int abc_seekbar_track_progress_height_material
com.google.ar.sceneform.rendering.LightProbe: float[] ENVIRONMENTAL_HDR_TO_FILAMENT_SH_COEFFIECIENTS
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.google.ar.sceneform.ux.GesturePointersUtility: java.util.HashSet retainedPointerIds
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.google.ar.sceneform.rendering.CameraStream: com.google.android.filament.Scene scene
com.google.ar.sceneform.ux.R$anim: int abc_fade_in
com.google.ar.sceneform.R$id: int tag_accessibility_actions
com.google.ar.sceneform.ux.R$attr: int thumbTextPadding
com.google.ar.sceneform.R$id: int title_template
com.google.ar.schemas.lull.AxisSystem: int YUp_XFront_ZRight
com.google.ar.sceneform.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.google.ar.sceneform.R$styleable: int[] SwitchCompat
com.google.ar.sceneform.R$attr: int buttonCompat
com.google.ar.sceneform.ux.TranslationController: java.util.EnumSet allowedPlaneTypes
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.google.ar.sceneform.ux.R$attr: int gapBetweenBars
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment[] $VALUES
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat[] $VALUES
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Matrix cachedLocalModelMatrix
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.google.android.filament.Material: long mNativeObject
com.google.flatbuffers.FlatBufferBuilder: int vtable_in_use
com.google.ar.sceneform.R$id: int contentPanel
com.google.ar.sceneform.ux.R$styleable: int Toolbar_popupTheme
com.google.ar.sceneform.Scene: com.google.ar.sceneform.Sun sunlightNode
com.google.ar.sceneform.ux.R$color: int material_grey_900
com.google.ar.sceneform.ux.R$id: int tag_unhandled_key_listeners
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ButtonBar
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.ar.sceneform.ux.R$styleable: int MenuView_subMenuArrow
com.google.ar.sceneform.ux.R$color: int abc_background_cache_hint_selector_material_light
com.google.ar.sceneform.rendering.LightProbe: java.lang.String name
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType BYTE4
com.google.android.filament.VertexBuffer$QuatTangentContext: java.nio.Buffer normals
com.google.ar.sceneform.R$attr: int actionModeBackground
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.google.ar.sceneform.R$dimen: int compat_control_corner_material
com.google.ar.sceneform.R$color: int foreground_material_dark
com.google.ar.sceneform.R$style: int Widget_AppCompat_SearchView_ActionBar
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.filament.Camera$Projection: com.google.android.filament.Camera$Projection ORTHO
com.google.ar.sceneform.ux.R$attr: int colorSwitchThumbNormal
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.google.ar.sceneform.R$id: int top
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_tileMode
com.google.android.filament.View: com.google.android.filament.View$DepthPrepass mDepthPrepass
com.google.ar.sceneform.ux.R$bool: int abc_config_actionMenuItemAllCaps
com.google.android.filament.IndexBuffer$Builder: com.google.android.filament.IndexBuffer$Builder$BuilderFinalizer mFinalizer
com.google.ar.core.CameraConfig$TargetFps: int nativeCode
com.google.ar.sceneform.ux.R$raw: int sceneform_transparent_colored_material
com.google.ar.sceneform.TouchEventSystem: java.lang.reflect.Method motionEventSplitMethod
com.google.ar.sceneform.R$attr: int listLayout
com.google.ar.sceneform.R$string: int abc_action_mode_done
com.google.ar.sceneform.ux.R$dimen: int compat_button_inset_vertical_material
androidx.window.R$attr: int primaryActivityName
com.google.ar.sceneform.R$dimen: int tooltip_precise_anchor_threshold
com.google.ar.sceneform.R$string: int abc_searchview_description_submit
com.google.ar.sceneform.R$drawable: int abc_text_select_handle_right_mtrl_light
com.google.ar.schemas.sceneform.SamplerCompareFunc: short Never
androidx.window.R$styleable: int[] ActivityFilter
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.google.ar.sceneform.ux.R$dimen: int notification_subtext_size
com.google.ar.sceneform.NodeParent: int iteratingCounter
com.google.ar.sceneform.R$styleable: int AppCompatTheme_searchViewStyle
com.google.ar.sceneform.ux.R$drawable: int abc_dialog_material_background
com.google.ar.sceneform.R$styleable: int ColorStateListItem_alpha
com.google.ar.sceneform.R$color: int secondary_text_disabled_material_light
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB565
com.google.ar.sceneform.ux.R$layout: int abc_popup_menu_item_layout
com.google.ar.sceneform.ux.R$attr: int drawableRightCompat
com.google.ar.sceneform.R$color: int abc_search_url_text_pressed
com.google.ar.sceneform.R$attr: int fontProviderFetchStrategy
com.google.ar.sceneform.ux.R$id: int title
com.google.ar.sceneform.R$style: int Base_V7_Theme_AppCompat_Light
com.google.ar.sceneform.R$attr: int windowFixedWidthMinor
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.google.ar.schemas.sceneform.SamplerMinFilter: short NearestMipmapNearest
com.google.ar.sceneform.ux.R$styleable: int ActionBar_customNavigationLayout
com.google.ar.sceneform.ux.R$attr: int autoSizeMaxTextSize
com.google.ar.sceneform.R$styleable: int TextAppearance_textAllCaps
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.google.ar.sceneform.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_checked
com.google.ar.sceneform.rendering.GLHelper: java.lang.String TAG
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Tooltip
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarSize
com.google.ar.sceneform.R$attr: int dividerPadding
com.google.ar.sceneform.R$styleable: int GradientColor_android_endY
com.google.ar.core.TrackData: com.google.ar.core.Session session
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter NEAREST_MIPMAP_NEAREST
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableEndCompat
com.google.ar.sceneform.R$drawable: int abc_btn_radio_material
com.google.ar.sceneform.ux.R$styleable: int ActionMode_titleTextStyle
androidx.fragment.app.Fragment: int mState
com.google.ar.sceneform.ux.R$attr: int windowActionBar
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda0: android.hardware.camera2.CameraCaptureSession f$1
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.google.ar.sceneform.R$styleable: int ActionBar_progressBarStyle
com.google.ar.sceneform.ux.DragGesture: com.google.ar.sceneform.math.Vector3 startPosition
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.google.ar.sceneform.ux.R$string: int abc_searchview_description_clear
com.google.ar.sceneform.R$attr: int fontProviderPackage
com.google.ar.sceneform.assets.RenderableSource$Builder: java.lang.Float scale
com.google.ar.sceneform.ux.TwistGesture: int pointerId2
com.google.android.filament.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Body2
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarSize
com.google.ar.sceneform.resources.ResourceRegistry: java.util.Map futureRegistry
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.google.ar.sceneform.R$attr: int voiceIcon
com.google.ar.sceneform.rendering.Renderer: float DEFAULT_CAMERA_SHUTTER_SPEED
com.google.ar.sceneform.R$dimen: int disabled_alpha_material_light
com.google.ar.sceneform.R$attr: int submitBackground
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB8_SNORM
com.google.ar.sceneform.R$attr: int srcCompat
com.google.ar.sceneform.ux.R$layout: int abc_screen_simple_overlay_action_mode
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarTheme
com.google.ar.sceneform.R$drawable: int abc_list_longpressed_holo
com.google.ar.sceneform.ux.R$id: int src_over
com.google.ar.core.ImageMetadata: long nativeSymbolTableHandle
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_TextView
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
androidx.fragment.app.Fragment: int STARTED
com.google.ar.sceneform.collision.CollisionSystem: java.lang.String TAG
com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment: java.lang.String[] names
com.google.ar.sceneform.R$attr: int dialogPreferredPadding
com.google.ar.sceneform.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.google.ar.sceneform.ux.R$id: int accessibility_action_clickable_span
com.google.ar.sceneform.R$styleable: int MenuItem_actionProviderClass
com.google.ar.core.CameraConfig$StereoCameraUsage: com.google.ar.core.CameraConfig$StereoCameraUsage DO_NOT_USE
com.google.ar.sceneform.rendering.EngineInstance: android.opengl.EGLContext glContext
com.google.ar.sceneform.R$layout: int abc_activity_chooser_view
com.google.ar.sceneform.lullmodel.VariantDef: byte DataFloat
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.google.ar.sceneform.rendering.CameraStream: float[] CAMERA_VERTICES
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Button_Borderless
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.google.android.filament.IndexBuffer: long mNativeObject
com.google.ar.sceneform.ux.R$styleable: int ActionBar_homeAsUpIndicator
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type[] $VALUES
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.google.android.filament.android.UiHelper: boolean mHasSwapChain
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ListView_DropDown
com.google.ar.sceneform.R$attr: int actionMenuTextAppearance
com.google.ar.schemas.lull.TextureWrap: short Repeat
com.google.ar.sceneform.ux.R$attr: int lineHeight
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Spinner_DropDown
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.google.ar.core.ImageMetadata: com.google.ar.core.Session session
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.google.ar.sceneform.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.google.ar.sceneform.R$attr: int iconifiedByDefault
com.google.ar.sceneform.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.google.ar.sceneform.R$styleable: int CompoundButton_buttonCompat
com.google.ar.sceneform.ux.R$drawable: int abc_tab_indicator_mtrl_alpha
com.google.ar.sceneform.ux.R$attr: int homeAsUpIndicator
com.google.ar.sceneform.ux.R$attr: int progressBarPadding
com.google.ar.sceneform.ux.R$attr: int iconTintMode
com.google.ar.sceneform.R$styleable: int ActionBar_title
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat EAC_R11
com.google.ar.sceneform.R$id: int titleDividerNoCustom
com.google.ar.sceneform.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.google.ar.sceneform.R$styleable: int TextAppearance_android_textFontWeight
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ListView
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.google.ar.sceneform.ux.R$id: int content
com.google.ar.sceneform.R$attr: int actionBarTabTextStyle
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType BYTE3
com.google.ar.sceneform.R$id: int info
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.google.ar.sceneform.R$attr: int actionBarItemBackground
com.google.ar.sceneform.R$attr: int layout
com.google.ar.sceneform.ux.R$drawable: int tooltip_frame_dark
com.google.android.filament.View: java.lang.String mName
com.google.ar.sceneform.ux.R$id: int scrollIndicatorUp
com.google.ar.sceneform.rendering.Texture$Usage: com.google.ar.sceneform.rendering.Texture$Usage[] $VALUES
com.google.ar.sceneform.ux.R$drawable: int abc_list_selector_holo_dark
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_19
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Button_Colored
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float relativeIntensity
com.google.ar.sceneform.ux.R$drawable: int abc_btn_check_to_on_mtrl_015
com.google.ar.core.Session: com.google.ar.core.m faceCache
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
com.google.android.filament.android.UiHelper$TextureViewHandler: com.google.android.filament.android.UiHelper this$0
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.google.android.filament.MaterialInstance$IntElement: com.google.android.filament.MaterialInstance$IntElement INT
com.google.android.filament.View$QualityLevel: com.google.android.filament.View$QualityLevel ULTRA
com.google.ar.sceneform.R$id: int accessibility_custom_action_10
com.google.ar.sceneform.R$color: int material_grey_50
com.google.ar.sceneform.rendering.CameraStream: boolean isTextureInitialized
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_shadowDx
com.google.ar.sceneform.Sun: com.google.ar.sceneform.math.Vector3 DEFAULT_SUNLIGHT_DIRECTION
com.google.ar.sceneform.ux.R$styleable: int ActionMode_background
com.google.ar.sceneform.rendering.SceneformBundle: float RCB_MAJOR_VERSION
com.google.ar.core.ImageMetadata: int CONTROL_AF_MODE
com.google.ar.sceneform.R$styleable: int MenuGroup_android_visible
com.google.ar.sceneform.ux.R$dimen: int tooltip_precise_anchor_extra_offset
com.google.ar.sceneform.ux.R$color: int bright_foreground_disabled_material_light
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d[] $VALUES
com.google.ar.sceneform.ux.R$drawable: int abc_text_select_handle_right_mtrl_dark
com.google.ar.core.RecordingStatus: int nativeCode
com.google.ar.sceneform.R$styleable: int ActionBar_itemPadding
com.google.ar.sceneform.R$attr: int windowActionBarOverlay
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter minFilter
androidx.fragment.app.Fragment: boolean mAdded
com.google.flatbuffers.FlatBufferBuilder: boolean force_defaults
com.google.ar.sceneform.ux.R$id: int tag_accessibility_pane_title
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG16I
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_divider
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.google.ar.sceneform.R$color: int primary_text_disabled_material_light
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextHelper_android_drawableTop
com.google.ar.sceneform.rendering.EngineInstance: boolean filamentInitialized
com.google.ar.sceneform.ux.R$attr: int listChoiceIndicatorSingleAnimated
com.google.ar.sceneform.R$attr: int fontVariationSettings
com.google.ar.core.CameraIntrinsics: com.google.ar.core.Session session
com.google.ar.sceneform.ux.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.google.ar.sceneform.ux.R$attr: int commitIcon
com.google.ar.sceneform.ux.R$dimen: int compat_button_padding_vertical_material
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Spinner
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_content_inset_material
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewSizer viewSizer
com.google.ar.sceneform.ux.R$id: int search_plate
com.google.ar.sceneform.R$drawable: int abc_spinner_textfield_background_material
com.google.android.filament.MaterialInstance$BooleanElement: com.google.android.filament.MaterialInstance$BooleanElement BOOL
com.google.flatbuffers.FlatBufferBuilder: java.nio.ByteBuffer bb
com.google.ar.schemas.lull.VariantDef: byte DataVec2
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.google.ar.sceneform.R$string: int abc_action_menu_overflow_description
com.google.ar.sceneform.ux.R$dimen: int notification_big_circle_margin
com.google.ar.sceneform.ArSceneView: int cameraTextureId
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.ar.sceneform.ux.R$attr: int colorControlNormal
com.google.ar.sceneform.R$attr: int titleTextColor
com.google.ar.sceneform.R$string: int abc_menu_alt_shortcut_label
com.google.ar.sceneform.R$color: int abc_tint_switch_track
com.google.ar.sceneform.ux.R$drawable: int abc_ic_search_api_material
com.google.ar.sceneform.ux.BaseArFragment: android.view.GestureDetector gestureDetector
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB9_E5
com.google.android.filament.LightManager: float EFFICIENCY_LED
com.google.ar.sceneform.R$id: int radio
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.google.ar.schemas.sceneform.ParameterInitDefType: byte DoubleInit
com.google.ar.sceneform.rendering.Light$Builder: float falloffRadius
com.google.ar.sceneform.ux.R$styleable: int[] AppCompatTheme
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_corner_radius_material
com.google.ar.sceneform.R$color: int switch_thumb_disabled_material_dark
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGBA32I
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ProgressBar
com.google.android.filament.BuildConfig: java.lang.String APPLICATION_ID
com.google.ar.sceneform.R$id: int action_bar_activity_content
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode wrapModeR
com.google.ar.sceneform.R$styleable: int PopupWindow_overlapAnchor
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode[] $VALUES
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment CENTER
com.google.ar.sceneform.R$styleable: int AppCompatTheme_radioButtonStyle
com.google.ar.sceneform.R$styleable: int AppCompatTextView_autoSizeTextType
com.google.ar.sceneform.ux.R$drawable: int notify_panel_notification_icon_bg
com.google.ar.sceneform.R$drawable: int btn_checkbox_unchecked_mtrl
com.google.ar.core.GeospatialPose: long nativeSymbolTableHandle
com.google.ar.sceneform.rendering.SceneformBundle: int SIGNATURE_OFFSET
com.google.ar.sceneform.ux.HandMotionAnimation: android.view.View containerView
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment verticalAlignment
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int RightUp
com.google.ar.sceneform.lullmodel.LayoutFillOrder: int DownRight
com.google.ar.sceneform.ux.R$attr: int submitBackground
com.google.ar.sceneform.ux.DragGesture: java.lang.String TAG
com.google.android.filament.Material$CullingMode: com.google.android.filament.Material$CullingMode FRONT_AND_BACK
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_13
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.google.ar.sceneform.ux.R$attr: int listPreferredItemPaddingStart
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.google.ar.sceneform.R$style: int AlertDialog_AppCompat_Light
com.google.ar.sceneform.R$attr: int listPreferredItemPaddingStart
com.google.ar.sceneform.Scene: java.util.ArrayList onUpdateListeners
com.google.ar.sceneform.R$attr: int fontProviderQuery
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_DayNight
com.google.ar.sceneform.Node: com.google.ar.sceneform.collision.CollisionShape collisionShape
com.google.ar.sceneform.R$id: int scrollIndicatorUp
com.google.ar.sceneform.rendering.PlaneRenderer: float DEFAULT_TEXTURE_HEIGHT
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Display2
com.google.ar.core.CameraIntrinsics: long nativeHandle
com.google.ar.schemas.sceneform.ParameterInitDefType: byte DoubleVec2Init
com.google.ar.sceneform.R$styleable: int SwitchCompat_thumbTextPadding
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d VIEW_NORMALIZED
com.google.ar.sceneform.R$dimen: int notification_small_icon_background_padding
com.google.ar.sceneform.ux.R$dimen: int tooltip_vertical_padding
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Subhead
com.google.ar.sceneform.ux.R$layout: int notification_template_part_time
com.google.ar.sceneform.R$styleable: int Toolbar_titleMarginStart
com.google.ar.sceneform.R$drawable: int abc_list_selector_disabled_holo_light
com.google.ar.sceneform.ux.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.ar.sceneform.ux.R$style: int Base_V28_Theme_AppCompat_Light
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Shadow
com.google.ar.sceneform.ux.R$attr: int paddingEnd
com.google.ar.core.ImageMetadata: int LENS_INFO_START
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason BAD_STATE
com.google.ar.sceneform.R$drawable: int abc_text_select_handle_left_mtrl_light
com.google.ar.sceneform.ux.R$color: int accent_material_dark
com.google.ar.sceneform.ux.R$color: int abc_btn_colored_borderless_text_material
com.google.ar.sceneform.ux.R$attr: int navigationContentDescription
com.google.ar.sceneform.ux.R$attr: int listChoiceIndicatorMultipleAnimated
com.google.ar.sceneform.ux.R$dimen: int tooltip_corner_radius
com.google.ar.core.ImageMetadata: int COLOR_CORRECTION_START
com.google.ar.sceneform.R$id: int action_bar_root
com.google.ar.sceneform.R$attr: int ttcIndex
com.google.ar.sceneform.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.google.ar.sceneform.R$styleable: int Toolbar_buttonGravity
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.google.ar.sceneform.R$styleable: int FontFamily_fontProviderFetchStrategy
com.google.ar.core.LightEstimate: com.google.ar.core.Session session
com.google.ar.sceneform.assets.RenderableSource: android.content.Context context
com.google.ar.schemas.lull.LayoutFillOrder: int LeftDown
com.google.ar.sceneform.R$styleable: int Spinner_android_popupBackground
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.google.android.filament.BuildConfig: int VERSION_CODE
com.google.ar.sceneform.rendering.ExternalTexture: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.google.ar.sceneform.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.google.ar.sceneform.rendering.CleanupRegistry: java.lang.ref.ReferenceQueue referenceQueue
com.google.ar.sceneform.ux.R$styleable: int[] MenuView
com.google.ar.core.AugmentedFace$RegionType: com.google.ar.core.AugmentedFace$RegionType[] $VALUES
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode MIRRORED_REPEAT
com.google.android.filament.TextureSampler$CompareMode: com.google.android.filament.TextureSampler$CompareMode NONE
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.google.ar.sceneform.ux.R$attr: int panelMenuListWidth
com.google.ar.sceneform.ux.R$color: int background_floating_material_light
com.google.ar.sceneform.R$layout: int abc_screen_toolbar
com.google.ar.sceneform.R$styleable: int ViewBackgroundHelper_backgroundTint
com.google.ar.sceneform.ux.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_7
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_android_textOn
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.google.ar.sceneform.R$raw: int sceneform_view_renderable
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode AUTOMATIC
com.google.ar.sceneform.R$styleable: int CompoundButton_buttonTintMode
com.google.android.filament.Material$Builder: int mSize
com.google.ar.sceneform.ux.R$string: int abc_menu_space_shortcut_label
com.google.ar.sceneform.ux.R$attr: int switchMinWidth
com.google.ar.sceneform.ux.R$style: int Base_Theme_AppCompat_Light
com.google.ar.sceneform.ux.R$string: int abc_menu_function_shortcut_label
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda0: int f$2
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format DEPTH_STENCIL
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_Dialog
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.ar.sceneform.ux.R$attr: int dividerPadding
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Medium
com.google.ar.sceneform.ux.R$id: int normal
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
com.google.ar.sceneform.rendering.LightInstance: boolean dirty
com.google.ar.schemas.lull.LayoutVerticalAlignment: int Bottom
com.google.android.filament.LightManager$ShadowOptions: float shadowNearHint
com.google.ar.sceneform.R$style: int Widget_AppCompat_Spinner_Underlined
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute BONE_INDICES
androidx.fragment.app.Fragment: boolean mDeferStart
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_textFontWeight
com.google.ar.sceneform.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.google.android.filament.Texture$Builder: long mNativeBuilder
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.Converter converter
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType LONG
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState PAUSED
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Display4
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.DragGestureRecognizer dragGestureRecognizer
com.google.ar.sceneform.R$attr: int panelBackground
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.google.ar.core.Camera: java.lang.String TAG
com.google.android.filament.Texture$PixelBufferDescriptor: java.lang.Runnable callback
com.google.ar.sceneform.R$attr: int colorControlNormal
com.google.ar.sceneform.ux.R$attr: int subtitleTextStyle
com.google.ar.sceneform.rendering.RenderableInstance: int childEntity
com.google.ar.sceneform.R$id: int dialog_button
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.google.ar.schemas.lull.AxisSystem: int ZUp_XBack_YLeft
com.google.ar.sceneform.rendering.LightProbe: int EXPECTED_SPHERICAL_HARMONICS_LENGTH
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: double NANOSECONDS_TO_MILLISECONDS
com.google.ar.sceneform.ux.R$attr: int textAppearanceSearchResultTitle
com.google.ar.sceneform.ux.R$styleable: int ColorStateListItem_alpha
com.google.ar.sceneform.ux.R$styleable: int PopupWindow_android_popupBackground
com.google.ar.sceneform.R$attr: int windowFixedHeightMajor
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ListView
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.google.ar.sceneform.ux.R$attr: int actionModeSelectAllDrawable
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter NEAREST
com.google.ar.core.Config$AugmentedFaceMode: int nativeCode
com.google.ar.sceneform.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.google.ar.sceneform.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.google.ar.sceneform.R$styleable: int AppCompatTheme_editTextStyle
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R8I
com.google.android.filament.android.UiHelper: int mDesiredHeight
com.google.ar.sceneform.R$attr: int buttonIconDimen
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.google.ar.sceneform.R$dimen: int abc_dropdownitem_icon_width
com.google.ar.sceneform.ux.R$id: int custom
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.google.ar.sceneform.R$style: int Theme_AppCompat_Dialog
com.google.ar.sceneform.R$bool: int abc_allow_stacked_button_bar
com.google.ar.core.ImageMetadata: int SENSOR_TIMESTAMP
com.google.ar.core.ImageMetadata: int SECTION_EDGE
com.google.ar.sceneform.ux.R$styleable: int MenuItem_actionProviderClass
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_Light
com.google.ar.core.TrackableBase: com.google.ar.core.Session session
com.google.ar.sceneform.R$styleable: int TextAppearance_android_textColorLink
com.google.ar.sceneform.R$id: int homeAsUp
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.ar.sceneform.R$styleable: int[] RecycleListView
com.google.ar.sceneform.lullmodel.VertexAttributeType: java.lang.String[] names
com.google.ar.sceneform.R$attr: int closeIcon
com.google.ar.sceneform.Node: int dirtyTransformFlags
com.google.ar.sceneform.ux.R$styleable: int[] PopupWindow
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.google.ar.sceneform.R$styleable: int TextAppearance_fontFamily
com.google.ar.sceneform.ux.R$color: int background_floating_material_dark
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.google.ar.sceneform.R$dimen: int tooltip_precise_anchor_extra_offset
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Title_Inverse
com.google.ar.core.CameraConfig$FacingDirection: com.google.ar.core.CameraConfig$FacingDirection FRONT
com.google.ar.sceneform.ux.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.google.ar.sceneform.ux.R$dimen: int notification_action_icon_size
com.google.ar.sceneform.assets.RenderableSource$Builder: android.net.Uri modelUri
com.google.ar.sceneform.R$id: int bottom
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason INSUFFICIENT_LIGHT
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.google.ar.sceneform.ux.R$dimen: int abc_edit_text_inset_top_material
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_body_1_material
com.google.ar.sceneform.R$attr: int suggestionRowLayout
com.google.ar.sceneform.R$styleable: int Toolbar_contentInsetEndWithActions
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_popupWindowStyle
com.google.ar.core.CameraConfig$TargetFps: com.google.ar.core.CameraConfig$TargetFps[] $VALUES
com.google.ar.sceneform.R$id: int __arcore_continueButton
com.google.ar.sceneform.ux.R$integer: int abc_config_activityShortDur
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.ar.sceneform.ux.R$style: int Base_ThemeOverlay_AppCompat_Light
com.google.ar.sceneform.rendering.Material: java.lang.String TAG
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement FLOAT2
com.google.ar.sceneform.R$styleable: int ActionBar_height
com.google.ar.sceneform.R$drawable: int abc_btn_check_to_on_mtrl_015
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Menu
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Small
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: float reflectionScaleForFilament
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.google.ar.sceneform.assets.RenderableSource$SourceType: com.google.ar.sceneform.assets.RenderableSource$SourceType[] $VALUES
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.google.android.filament.Renderer: int MIRROR_FRAME_FLAG_COMMIT
com.google.ar.sceneform.R$styleable: int[] StateListDrawable
com.google.ar.core.HitResult: com.google.ar.core.Session session
com.google.android.filament.Material$Parameter: int count
com.google.ar.sceneform.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.google.ar.sceneform.ux.R$id: int action_mode_bar
com.google.ar.sceneform.R$drawable: int abc_textfield_activated_mtrl_alpha
com.google.ar.sceneform.R$attr: int subMenuArrow
com.google.android.filament.RenderableManager$PrimitiveType: com.google.android.filament.RenderableManager$PrimitiveType[] $VALUES
com.google.ar.sceneform.Scene: com.google.ar.sceneform.Camera camera
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DEPTH32F_STENCIL8
com.google.ar.sceneform.R$dimen: int highlight_alpha_material_dark
com.google.ar.sceneform.R$dimen: int compat_notification_large_icon_max_width
com.google.ar.sceneform.R$attr: int splitTrack
com.google.ar.core.ImageMetadata: int SECTION_LENS_INFO
com.google.ar.sceneform.utilities.MovingAverage: double weight
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_thumbTextPadding
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
com.google.ar.schemas.sceneform.LightingCubeFaceType: int pz
com.google.ar.sceneform.R$style: int Widget_Compat_NotificationActionText
com.google.ar.sceneform.R$styleable: int TextAppearance_android_fontFamily
com.google.ar.sceneform.R$id: int accessibility_custom_action_23
com.google.ar.sceneform.R$styleable: int MenuView_preserveIconSpacing
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Tooltip
com.google.ar.sceneform.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.google.ar.sceneform.R$attr: int actionBarTabStyle
com.google.ar.sceneform.R$id: int SYM
com.google.flatbuffers.Constants: int SIZEOF_LONG
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_display_3_material
com.google.ar.sceneform.R$attr: int buttonBarNeutralButtonStyle
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionMenuTextColor
com.google.flatbuffers.Table: java.lang.ThreadLocal UTF8_CHARSET
com.google.ar.sceneform.ux.R$color: int abc_tint_seek_thumb
com.google.ar.sceneform.R$dimen: int tooltip_y_offset_touch
com.google.ar.sceneform.ux.R$attr: int actionBarTheme
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.rendering.Color backgroundColor
com.google.ar.sceneform.ux.R$attr: int title
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_27
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_startColor
com.google.ar.sceneform.ux.R$id: int beginning
com.google.ar.sceneform.R$color: int material_blue_grey_800
com.google.ar.sceneform.R$styleable: int Toolbar_contentInsetRight
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.ar.sceneform.R$id: int action_bar
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_default_padding_start_material
com.google.ar.sceneform.R$color: int error_color_material_light
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_SearchView
com.google.ar.sceneform.R$id: int action_mode_bar_stub
com.google.ar.sceneform.R$styleable: int SearchView_android_focusable
com.google.ar.sceneform.ux.R$attr: int hideOnContentScroll
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_SeekBar
com.google.ar.sceneform.rendering.Texture: com.google.ar.sceneform.rendering.TextureInternalData textureData
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB8
com.google.ar.sceneform.R$dimen: int notification_main_column_padding_top
com.google.ar.core.ImageMetadata: int TONEMAP_GAMMA
com.google.ar.schemas.lull.TextureFiltering: short LinearMipmapLinear
com.google.ar.sceneform.R$id: int action_menu_divider
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_switchPadding
androidx.fragment.app.Fragment: boolean mPerformedCreateView
com.google.ar.sceneform.ux.R$styleable: int[] TextAppearance
com.google.ar.sceneform.R$string: int search_menu_title
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute[] $VALUES
com.google.ar.sceneform.utilities.TimeAccumulator: long startSampleTimeMs
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.ar.sceneform.R$styleable: int StateListDrawable_android_variablePadding
com.google.ar.sceneform.ux.R$id: int tag_screen_reader_focusable
com.google.ar.sceneform.ux.R$drawable: int abc_btn_default_mtrl_shape
com.google.ar.sceneform.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute TANGENTS
com.google.ar.sceneform.R$dimen: int abc_text_size_title_material
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Normal
com.google.ar.sceneform.ux.R$drawable: int abc_list_divider_material
com.google.ar.sceneform.ux.R$drawable: int abc_action_bar_item_background_material
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOLVING_SDK_VERSION_TOO_OLD
com.google.ar.core.Config$AugmentedFaceMode: com.google.ar.core.Config$AugmentedFaceMode[] $VALUES
com.google.ar.sceneform.rendering.RenderableDefinition: com.google.ar.sceneform.math.Matrix scratchMatrix
com.google.ar.sceneform.ux.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.google.ar.sceneform.R$dimen: int abc_text_size_display_4_material
com.google.ar.sceneform.ux.R$styleable: int CompoundButton_buttonTint
com.google.ar.schemas.lull.LayoutHorizontalAlignment: int Center
com.google.ar.sceneform.R$attr: int textAppearanceSearchResultTitle
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.google.ar.sceneform.R$dimen: int abc_text_size_headline_material
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.google.ar.sceneform.R$attr: int autoSizeMaxTextSize
com.google.ar.sceneform.rendering.CameraStream: java.nio.FloatBuffer cameraUvCoords
com.google.ar.sceneform.ux.R$attr: int fontVariationSettings
com.google.ar.sceneform.ux.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.google.ar.sceneform.rendering.LightInstance: int entity
com.google.ar.sceneform.R$style: int Widget_AppCompat_DrawerArrowToggle
com.google.ar.sceneform.ux.R$color: int ripple_material_light
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionBar_TabView
com.google.ar.sceneform.R$styleable: int GradientColor_android_centerColor
com.google.ar.sceneform.ux.R$attr: int textAppearanceListItemSecondary
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_dialogTheme
com.google.ar.sceneform.ux.R$string: int __arcore_install_feature
com.google.ar.sceneform.R$attr: int alpha
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.ar.sceneform.ux.R$id: int tag_accessibility_clickable_spans
com.google.ar.sceneform.ux.R$color: int background_material_dark
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType[] $VALUES
com.google.ar.core.InstallActivity: boolean finished
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type FLOAT4
com.google.ar.core.ImageMetadata: int STATISTICS_HOT_PIXEL_MAP_MODE
com.google.ar.sceneform.R$attr: int fontFamily
com.google.ar.sceneform.R$attr: int buttonTint
com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment: int Top
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.google.ar.sceneform.R$styleable: int View_android_focusable
com.google.ar.sceneform.R$attr: int drawableRightCompat
com.google.ar.sceneform.ux.R$styleable: int ActionBar_itemPadding
com.google.ar.sceneform.R$styleable: int ActionBar_progressBarPadding
com.google.ar.sceneform.R$attr: int tooltipFrameBackground
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.google.ar.sceneform.ux.R$attr: int listPreferredItemHeightLarge
com.google.ar.sceneform.ux.R$attr: int subtitleTextColor
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading SPECULAR_GLOSSINESS
com.google.ar.core.ImageMetadata: int JPEG_GPS_COORDINATES
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Display4
com.google.ar.sceneform.ux.R$attr: int closeItemLayout
com.google.android.filament.LightManager: float EFFICIENCY_HALOGEN
com.google.ar.core.ImageMetadata: int CONTROL_AE_STATE
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_showDividers
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.ar.sceneform.R$dimen: int notification_big_circle_margin
com.google.ar.sceneform.ux.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.google.ar.sceneform.ux.R$color: int secondary_text_default_material_dark
com.google.ar.sceneform.R$attr: int radioButtonStyle
com.google.ar.sceneform.ux.R$id: int text
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda2: android.hardware.camera2.CameraCaptureSession$StateCallback f$0
com.google.ar.sceneform.ux.ScaleController: float minScale
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.google.ar.sceneform.R$attr: int showTitle
com.google.ar.sceneform.ux.R$styleable: int View_paddingEnd
com.google.ar.sceneform.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.google.android.filament.Colors$RgbaType: com.google.android.filament.Colors$RgbaType[] $VALUES
com.google.ar.sceneform.R$styleable: int AppCompatTheme_popupMenuStyle
androidx.fragment.app.Fragment: int mContentLayoutId
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Opacity
com.google.ar.sceneform.R$id: int __arcore_messageText
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat DXT5_RGBA
com.google.ar.sceneform.R$layout: int abc_search_dropdown_item_icons_2line
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.ar.sceneform.R$styleable: int MenuGroup_android_orderInCategory
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listMenuViewStyle
com.google.ar.sceneform.R$style: int Base_ThemeOverlay_AppCompat_Light
com.google.ar.sceneform.ux.R$color: int switch_thumb_material_dark
com.google.ar.sceneform.assets.RenderableSource: java.lang.String MODEL_FILE_NAME
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.google.ar.sceneform.ux.R$styleable: int Spinner_android_popupBackground
com.google.ar.sceneform.R$style: int Widget_AppCompat_Spinner_DropDown
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.google.ar.sceneform.rendering.CameraStream: int POSITION_BUFFER_INDEX
com.google.ar.sceneform.ux.R$style: int Platform_V25_AppCompat_Light
com.google.ar.sceneform.R$id: int accessibility_custom_action_13
com.google.ar.core.ImageMetadata: int CONTROL_AE_REGIONS
com.google.ar.sceneform.R$dimen: int abc_text_size_display_3_material
com.google.android.filament.View$DynamicResolutionOptions: int history
com.google.ar.sceneform.assets.RenderableSource: com.google.ar.sceneform.assets.Converter converter
com.google.android.filament.Texture$PixelBufferDescriptor: java.lang.Object handler
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.animation.AnimationEngine animationEngine
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_panelBackground
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace POSITIVE_Y
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int Color
com.google.ar.sceneform.ux.R$attr: int state_above_anchor
com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment: int Center
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
com.google.ar.sceneform.Node: int LOCAL_TRANSFORM_DIRTY
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat ETC2_RGB8_A1
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus[] $VALUES
com.google.ar.sceneform.R$attr: int collapseContentDescription
com.google.ar.core.ImageMetadata: int SYNC_FRAME_NUMBER
com.google.ar.sceneform.R$id: int group_divider
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace NEGATIVE_X
com.google.ar.sceneform.R$color: int abc_color_highlight_material
com.google.ar.sceneform.ux.R$styleable: int GradientColor_android_centerY
com.google.ar.sceneform.R$styleable: int Toolbar_collapseIcon
com.google.ar.core.InstallActivity: com.google.ar.core.ArCoreApk$InstallBehavior installBehavior
com.google.ar.sceneform.Node: int renderableId
com.google.android.filament.View$ToneMapping: com.google.android.filament.View$ToneMapping LINEAR
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_3
com.google.ar.sceneform.lullmodel.AxisSystem: int Unspecified
com.google.ar.sceneform.R$styleable: int SearchView_submitBackground
com.google.ar.core.ImageMetadata: int NOISE_REDUCTION_START
com.google.android.filament.android.UiHelper: java.lang.String LOG_TAG
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage: int height
com.google.ar.sceneform.ux.R$styleable: int[] CompoundButton
com.google.ar.sceneform.ux.R$styleable: int[] SearchView
com.google.ar.sceneform.R$styleable: int[] View
com.google.ar.sceneform.rendering.MaterialFactory: java.lang.String MATERIAL_REFLECTANCE
com.google.ar.sceneform.rendering.R$drawable: int sceneform_plane
com.google.ar.sceneform.R$id: int italic
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.google.ar.schemas.sceneform.ParameterInitDefType: byte SamplerInit
com.google.ar.sceneform.R$style: int Widget_AppCompat_ListView
com.google.ar.core.Track: long nativeSymbolTableHandle
com.google.ar.sceneform.R$dimen: int abc_text_size_display_1_material
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_PopupWindow
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.ar.sceneform.R$id: int content
com.google.ar.sceneform.rendering.CameraStream: com.google.ar.sceneform.rendering.Material cameraMaterial
com.google.ar.sceneform.lullmodel.TextureTargetType: short CubeMap
com.google.ar.sceneform.R$id: int action_mode_bar
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.google.ar.sceneform.ux.R$styleable: int[] ActionMenuItemView
com.google.android.filament.Texture$Usage: int STENCIL_ATTACHMENT
com.google.ar.sceneform.ux.R$attr: int spinnerStyle
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.google.ar.sceneform.R$styleable: int AppCompatTheme_listMenuViewStyle
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus OK
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat ETC2_EAC_SRGBA8
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.ar.sceneform.ux.BaseArFragment: java.lang.String TAG
com.google.ar.sceneform.R$attr: int buttonTintMode
com.google.ar.sceneform.ux.R$styleable: int ViewStubCompat_android_layout
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat EAC_RG11_SIGNED
com.google.ar.sceneform.rendering.Material: com.google.ar.sceneform.rendering.MaterialParameters materialParameters
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason EXCESSIVE_MOTION
com.google.ar.sceneform.ux.R$styleable: int FontFamily_fontProviderPackage
com.google.ar.sceneform.math.Vector3: float x
com.google.ar.sceneform.rendering.SkeletonRig: com.google.ar.schemas.lull.ModelInstanceDef modelInstanceDef
com.google.ar.sceneform.ux.R$layout: int abc_alert_dialog_material
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Button_Borderless
com.google.ar.sceneform.ux.R$raw: int sceneform_camera_material
com.google.ar.sceneform.R$attr: int autoSizeMinTextSize
com.google.ar.schemas.sceneform.CollisionShapeType: int Box
com.google.ar.sceneform.rendering.SceneformBundle: java.lang.String TAG
com.google.ar.sceneform.ux.R$string: int abc_menu_enter_shortcut_label
com.google.ar.sceneform.ux.R$attr: int actionBarStyle
com.google.ar.sceneform.R$id: int accessibility_custom_action_0
com.google.ar.sceneform.ux.R$styleable: int[] ColorStateListItem
com.google.ar.sceneform.R$styleable: int MenuGroup_android_menuCategory
com.google.ar.sceneform.ux.PinchGesture: com.google.ar.sceneform.math.Vector3 startPosition2
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DayNight_Dialog
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Sampler sampler
com.google.ar.sceneform.R$drawable: int abc_ic_go_search_api_material
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod[] $VALUES
com.google.ar.sceneform.ux.R$styleable: int[] AppCompatImageView
com.google.ar.sceneform.R$attr: int actionModePasteDrawable
com.google.ar.sceneform.lullmodel.TextureFiltering: short Nearest
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.math.Vector3 direction
com.google.ar.sceneform.utilities.LoadHelper: long DEFAULT_CACHE_SIZE_BYTES
com.google.ar.sceneform.R$attr: int drawableBottomCompat
com.google.ar.sceneform.R$string: int __arcore_installing
com.google.ar.sceneform.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.google.ar.sceneform.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.google.ar.sceneform.ux.R$attr: int drawableTint
com.google.ar.sceneform.R$id: int accessibility_custom_action_22
com.google.ar.sceneform.ux.R$attr: int contentInsetRight
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.google.ar.sceneform.R$attr: int thumbTint
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int Position
com.google.ar.sceneform.rendering.Light$Builder: boolean enableShadows
com.google.ar.sceneform.ux.R$layout: int abc_action_bar_up_container
com.google.ar.sceneform.R$attr: int popupWindowStyle
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB10_A2
com.google.ar.sceneform.R$attr: int backgroundTintMode
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.ar.sceneform.ux.R$string: int abc_menu_alt_shortcut_label
com.google.ar.sceneform.ux.R$id: int action_container
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Display3
com.google.ar.sceneform.rendering.LightProbe: int CUBEMAP_FACE_COUNT
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.ar.sceneform.ux.R$dimen: int notification_top_pad_large_text
androidx.window.core.Bounds: int right
com.google.android.filament.android.TextureHelper: int BITMAP_CONFIG_HARDWARE
com.google.ar.core.ImageMetadata: int JPEG_START
com.google.ar.sceneform.ux.R$id: int search_bar
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.google.ar.sceneform.R$dimen: int abc_dialog_fixed_width_minor
com.google.ar.schemas.lull.MaterialTextureUsage: int Bump
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_16
kotlin.jvm.internal.CallableReference: java.lang.String name
com.google.ar.sceneform.ux.R$attr: int textAppearanceListItem
com.google.ar.sceneform.ux.R$id: int customPanel
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.google.ar.sceneform.ux.R$layout: int notification_action
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter[] $VALUES
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Large
com.google.ar.sceneform.R$attr: int editTextBackground
com.google.ar.sceneform.R$attr: int actionModeStyle
com.google.ar.sceneform.R$styleable: int AppCompatTheme_alertDialogStyle
com.google.ar.schemas.sceneform.SamplerCompareMode: short None
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Subhead
com.google.ar.schemas.lull.MaterialTextureUsage: int BrdfLookupTable
com.google.ar.sceneform.R$styleable: int MenuView_android_verticalDivider
com.google.ar.sceneform.R$style: int ThemeOverlay_AppCompat_DayNight
com.google.ar.sceneform.R$id: int text
com.google.ar.sceneform.R$styleable: int MenuView_android_itemBackground
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.ar.sceneform.R$styleable: int MenuGroup_android_id
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int Light
com.google.ar.sceneform.rendering.LightProbe: int[] ENVIRONMENTAL_HDR_TO_FILAMENT_SH_INDEX_MAP
com.google.ar.sceneform.ux.R$style: int Widget_Compat_NotificationActionContainer
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_YBack_ZRight
com.google.ar.sceneform.lullmodel.TextureWrap: short Repeat
com.google.ar.sceneform.ux.R$styleable: int ActionBar_contentInsetStart
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
com.google.ar.sceneform.Scene: boolean isUnderTesting
androidx.window.R$attr: int splitRatio
com.google.ar.core.ImageMetadata: int TYPE_RATIONAL
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.Engine engine
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_12
com.google.ar.sceneform.R$style: int Widget_AppCompat_TextView
com.google.ar.sceneform.R$styleable: int MenuView_android_horizontalDivider
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.google.android.filament.android.UiHelper: com.google.android.filament.android.UiHelper$RendererCallback mRenderCallback
com.google.ar.sceneform.ux.R$dimen: int tooltip_margin
com.google.ar.sceneform.R$attr: int drawableStartCompat
com.google.android.filament.View$AntiAliasing: com.google.android.filament.View$AntiAliasing NONE
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Vector3 size
com.google.android.filament.LightManager$Builder: long mNativeBuilder
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG32I
com.google.android.filament.Colors$RgbaType: com.google.android.filament.Colors$RgbaType SRGB
androidx.window.R$styleable: int[] SplitPairRule
com.google.ar.sceneform.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.google.ar.schemas.lull.AxisSystem: int YUp_ZFront_XLeft
com.google.ar.sceneform.ux.R$attr: int actionMenuTextAppearance
com.google.ar.sceneform.ux.R$attr: int autoSizeStepGranularity
com.google.ar.sceneform.ux.R$styleable: int FontFamily_fontProviderAuthority
com.google.ar.sceneform.ux.R$attr: int titleMargin
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.google.ar.core.Config$FocusMode: int nativeCode
com.google.ar.core.Config$AugmentedFaceMode: com.google.ar.core.Config$AugmentedFaceMode MESH3D
com.google.ar.schemas.lull.TextureFiltering: short LinearMipmapNearest
com.google.flatbuffers.Constants: int FILE_IDENTIFIER_LENGTH
com.google.ar.sceneform.R$styleable: int GradientColorItem_android_color
com.google.ar.sceneform.rendering.LightInstance: com.google.ar.sceneform.math.Vector3 localDirection
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage$CubeMapPlane: int rowStride
com.google.ar.sceneform.R$id: int middle
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.google.ar.sceneform.ux.R$id: int on
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.google.ar.sceneform.ux.R$attr: int drawableLeftCompat
com.google.ar.sceneform.R$color: int material_deep_teal_200
com.google.ar.schemas.sceneform.SamplerMagFilter: java.lang.String[] names
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Dialog
com.google.ar.sceneform.R$attr: int textLocale
com.google.ar.sceneform.ux.PinchGesture: float gapDelta
com.google.ar.schemas.sceneform.SamplerMinFilter: short LinearMipmapNearest
com.google.ar.sceneform.R$drawable: int abc_vector_test
com.google.ar.sceneform.collision.Plane: double NEAR_ZERO_THRESHOLD
com.google.ar.sceneform.R$id: int activity_chooser_view_content
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Body2
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_editTextStyle
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.google.ar.sceneform.R$layout: int __arcore_education
com.google.ar.sceneform.ux.R$id: int search_go_btn
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_0
com.google.ar.core.ImageMetadata: int CONTROL_AF_STATE
com.google.ar.sceneform.R$drawable: int abc_ic_ab_back_material
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType SHORT4
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType FEATURE
com.google.android.filament.VertexBuffer$QuatType: com.google.android.filament.VertexBuffer$QuatType FLOAT4
com.google.android.filament.Engine: com.google.android.filament.RenderableManager mRenderableManager
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry renderableInstanceCleanupRegistry
com.google.ar.schemas.sceneform.SamplerMinFilter: java.lang.String[] names
com.google.android.filament.Fence$Type: com.google.android.filament.Fence$Type[] $VALUES
com.google.ar.core.ImageMetadata: int FLASH_MODE
com.google.ar.schemas.lull.LayoutFillOrder: int DownLeft
com.google.ar.sceneform.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.google.ar.sceneform.ux.R$color: int foreground_material_dark
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.google.ar.sceneform.FrameTime: long deltaNanoseconds
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarDivider
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_fixed_height_major
com.google.ar.sceneform.rendering.RenderableDefinition: int POSITION_SIZE
com.google.ar.sceneform.R$attr: int paddingBottomNoButtons
com.google.ar.sceneform.R$dimen: int abc_button_padding_vertical_material
com.google.ar.sceneform.R$styleable: int SwitchCompat_thumbTintMode
com.google.ar.sceneform.ux.R$styleable: int ActionBar_backgroundStacked
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.google.ar.sceneform.R$dimen: int abc_cascading_menus_min_smallest_width
com.google.ar.sceneform.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.google.ar.sceneform.R$dimen: int abc_alert_dialog_button_bar_height
com.google.ar.sceneform.rendering.CameraStream: int UNINITIALIZED_FILAMENT_RENDERABLE
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableTintMode
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.google.ar.sceneform.R$drawable: int tooltip_frame_dark
com.google.ar.sceneform.R$color: int highlighted_text_material_light
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Headline
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Button_Small
com.google.ar.sceneform.lullmodel.AxisSystem: int YUp_XFront_ZRight
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.google.android.filament.Material: com.google.android.filament.MaterialInstance mDefaultInstance
com.google.ar.sceneform.ux.R$color: int material_blue_grey_950
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement[] $VALUES
com.google.ar.sceneform.R$styleable: int ActionBar_backgroundStacked
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.ar.sceneform.R$dimen: int abc_edit_text_inset_top_material
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float colorR
com.google.ar.sceneform.ux.R$color: int abc_btn_colored_text_material
com.google.ar.sceneform.utilities.LoadHelper: char SLASH_DELIMETER
com.google.ar.sceneform.ux.R$id: int META
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.google.android.filament.RenderableManager$PrimitiveType: int mType
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.google.ar.sceneform.ux.R$attr: int buttonCompat
com.google.ar.sceneform.rendering.CameraStream: com.google.ar.sceneform.rendering.Material defaultCameraMaterial
com.google.ar.sceneform.R$drawable: int notification_bg_low_pressed
com.google.ar.sceneform.R$styleable: int CompoundButton_android_button
com.google.ar.sceneform.R$styleable: int MenuItem_android_numericShortcut
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format R
com.google.ar.sceneform.ux.R$style: int Base_AlertDialog_AppCompat
com.google.ar.core.CameraConfig$FacingDirection: int nativeCode
com.google.ar.sceneform.rendering.Renderable$Builder: java.util.concurrent.Callable inputStreamCreator
com.google.ar.sceneform.ux.R$styleable: int MenuItem_tooltipText
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat ETC2_RGB8
com.google.ar.core.Config$InstantPlacementMode: com.google.ar.core.Config$InstantPlacementMode LOCAL_Y_UP
com.google.ar.sceneform.ux.R$id: int disableHome
com.google.ar.core.Track: long nativeHandle
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_YFront_ZRight
androidx.window.R$attr: int secondaryActivityName
com.google.ar.sceneform.ux.R$attr: int arrowShaftLength
com.google.ar.sceneform.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
com.google.ar.sceneform.ux.R$styleable: int ColorStateListItem_android_color
com.google.ar.sceneform.ux.R$drawable: int sceneform_hand_phone
com.google.ar.sceneform.resources.ResourceRegistry: java.lang.Object lock
com.google.android.filament.VertexBuffer$QuatTangentContext: java.nio.Buffer tangents
com.google.ar.sceneform.ux.R$attr: int height
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar
com.google.android.filament.Stream$Builder: com.google.android.filament.Stream$Builder$BuilderFinalizer mFinalizer
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ListPopupWindow
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.google.ar.sceneform.R$layout: int abc_activity_chooser_view_list_item
com.google.ar.core.ImageMetadata: int TYPE_DOUBLE
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_selectableItemBackground
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.google.ar.sceneform.rendering.PlaneRenderer: float lastPlaneHitDistance
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.google.ar.schemas.lull.VertexAttributeUsage: int Tangent
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type INT
com.google.ar.sceneform.R$layout: int abc_search_view
com.google.android.filament.Box: float[] mHalfExtent
com.google.ar.sceneform.ux.R$anim: int abc_grow_fade_in_from_bottom
com.google.android.filament.TextureSampler$WrapMode: com.google.android.filament.TextureSampler$WrapMode CLAMP_TO_EDGE
com.google.ar.sceneform.R$drawable: int abc_tab_indicator_material
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.google.ar.sceneform.R$attr: int navigationMode
com.google.ar.sceneform.math.Matrix: java.lang.String TAG
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState[] $VALUES
com.google.ar.core.CameraConfig$TargetFps: com.google.ar.core.CameraConfig$TargetFps TARGET_FPS_60
com.google.ar.sceneform.R$styleable: int TextAppearance_android_textStyle
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleMarginEnd
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter minFilter
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.google.ar.sceneform.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.google.ar.sceneform.ux.R$drawable: int abc_text_select_handle_right_mtrl_light
com.google.ar.sceneform.R$attr: int windowMinWidthMinor
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.google.ar.core.ImageMetadata: int STATISTICS_HOT_PIXEL_MAP
com.google.ar.sceneform.rendering.Material$Builder: com.google.android.filament.Material existingMaterial
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType SHORT
com.google.ar.sceneform.ux.R$layout: int abc_action_menu_layout
com.google.android.filament.TextureSampler$WrapMode: com.google.android.filament.TextureSampler$WrapMode[] $VALUES
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter NEAREST_MIPMAP_LINEAR
com.google.ar.sceneform.ux.R$layout: int abc_screen_simple
com.google.ar.sceneform.rendering.Light$Builder: float DEFAULT_DIRECTIONAL_INTENSITY
com.google.ar.sceneform.R$styleable: int[] LinearLayoutCompat_Layout
com.google.ar.schemas.sceneform.ParameterInitDefType: byte NONE
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode DISABLED
com.google.ar.sceneform.R$color: int abc_background_cache_hint_selector_material_light
com.google.ar.sceneform.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat STENCIL8
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason NONE
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_thumbTintMode
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod FULL_TRACKING
com.google.ar.sceneform.R$styleable: int View_android_theme
com.google.ar.sceneform.R$styleable: int[] DrawerArrowToggle
com.google.ar.sceneform.rendering.Light$Builder: float intensity
com.google.ar.sceneform.ux.R$attr: int switchPadding
com.google.ar.sceneform.ux.R$drawable: int abc_item_background_holo_dark
com.google.android.filament.RenderableManager$PrimitiveType: com.google.android.filament.RenderableManager$PrimitiveType TRIANGLES
com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment: int Right
com.google.ar.sceneform.rendering.Color: float g
com.google.ar.sceneform.R$attr: int textAppearanceSearchResultSubtitle
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda1: android.hardware.camera2.CameraCaptureSession$StateCallback f$0
com.google.ar.sceneform.ux.BaseArFragment: android.view.ViewTreeObserver$OnWindowFocusChangeListener onFocusListener
com.google.ar.sceneform.ux.R$style: int Base_V22_Theme_AppCompat
com.google.ar.sceneform.ux.R$id: int top
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_NOT_AUTHORIZED
com.google.ar.sceneform.lullmodel.TextureFiltering: short NearestMipmapLinear
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Button
com.google.ar.sceneform.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.google.ar.core.ImageFormat: int RGBA_FP16
com.google.ar.sceneform.R$style: int Widget_AppCompat_ImageButton
com.google.ar.sceneform.ux.R$styleable: int View_android_theme
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_overflow_padding_start_material
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState ERROR_UNSUPPORTED_LOCATION
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter LINEAR
com.google.ar.sceneform.R$attr: int subtitleTextColor
com.google.ar.sceneform.R$styleable: int SwitchCompat_showText
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorError
com.google.ar.sceneform.ux.R$drawable: int abc_list_selector_background_transition_holo_light
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ImageButton
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.google.ar.sceneform.R$styleable: int Toolbar_titleMarginTop
com.google.android.filament.VertexBuffer$QuatTangentContext: com.google.android.filament.VertexBuffer$QuatType quatType
com.google.ar.sceneform.R$styleable: int Toolbar_titleMarginEnd
com.google.ar.sceneform.R$dimen: int notification_top_pad_large_text
com.google.ar.core.ImageMetadata: int EDGE_START
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG8_SNORM
com.google.ar.sceneform.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.google.ar.sceneform.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.google.ar.sceneform.ux.R$dimen: int abc_action_button_min_height_material
com.google.ar.sceneform.ux.R$drawable: int abc_ic_go_search_api_material
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState TASK_IN_PROGRESS
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_id
com.google.android.filament.View$DynamicResolutionOptions: float scaleRate
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.google.ar.sceneform.ux.R$id: int action_bar_container
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry cameraStreamCleanupRegistry
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus[] $VALUES
com.google.android.filament.android.UiHelper: boolean mOpaque
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type MAT3
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.math.Matrix boneTransform
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.ar.core.Track: com.google.ar.core.Session session
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.google.ar.sceneform.R$attr: int actionViewClass
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_8
com.google.ar.schemas.lull.AxisSystem: int XUp_YFront_ZLeft
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState NONE
com.google.ar.schemas.lull.VertexAttributeType: int Vec2f
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.google.ar.sceneform.ux.R$attr: int titleTextStyle
com.google.ar.core.ImageMetadata: int BLACK_LEVEL_START
com.google.ar.sceneform.R$attr: int indeterminateProgressStyle
com.google.ar.sceneform.R$id: int tag_transition_group
com.google.ar.core.InstallActivity: int INSTALLING_TEXT_BOTTOM_MARGIN_DP
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode MASKED
com.google.ar.sceneform.R$attr: int titleTextStyle
com.google.ar.sceneform.R$id: int accessibility_custom_action_18
com.google.ar.sceneform.R$attr: int listPopupWindowStyle
com.google.ar.sceneform.R$attr: int dialogTheme
com.google.ar.sceneform.R$id: int action_menu_presenter
com.google.ar.sceneform.lullmodel.TextureTargetType: short Standard2d
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RGB16F
com.google.ar.sceneform.ux.R$drawable: int abc_ic_voice_search_api_material
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_XFront_YLeft
com.google.ar.sceneform.R$attr: int actionProviderClass
com.google.ar.schemas.sceneform.SamplerCompareFunc: short EqualTo
com.google.android.filament.Renderer: long mNativeObject
com.google.android.filament.android.TextureHelper: int BITMAP_CONFIG_RGBA_F16
com.google.ar.sceneform.R$dimen: int abc_button_inset_vertical_material
com.google.ar.sceneform.R$style: int Base_DialogWindowTitle_AppCompat
com.google.ar.sceneform.ux.R$styleable: int ActionBar_homeLayout
androidx.window.core.Version: int patch
com.google.ar.core.CameraConfigFilter: com.google.ar.core.Session session
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_toolbarStyle
com.google.ar.core.ArCoreApk$InstallBehavior: com.google.ar.core.ArCoreApk$InstallBehavior REQUIRED
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_subtitle_material_toolbar
com.google.ar.sceneform.R$styleable: int AppCompatTextView_fontFamily
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float colorA
com.google.ar.sceneform.ux.R$attr: int actionViewClass
com.google.ar.sceneform.R$dimen: int hint_pressed_alpha_material_light
androidx.window.core.Bounds: int top
com.google.ar.sceneform.ux.R$styleable: int View_theme
com.google.ar.sceneform.R$dimen: int abc_select_dialog_padding_start_material
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.google.android.filament.android.TextureHelper: int BITMAP_CONFIG_RGBA_4444
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_searchViewStyle
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.google.ar.sceneform.R$style: int Widget_AppCompat_Toolbar
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.google.ar.schemas.sceneform.LightingCubeFaceType: int py
com.google.ar.core.ImageMetadata: int EDGE_MODE
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.google.ar.sceneform.R$raw: int sceneform_transparent_colored_material
com.google.ar.sceneform.R$styleable: int AppCompatTextHelper_android_drawableTop
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.ar.sceneform.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
com.google.ar.sceneform.ux.R$drawable: int abc_edit_text_material
com.google.ar.sceneform.ux.R$attr: int textAppearanceLargePopupMenu
com.google.android.filament.BuildConfig: boolean DEBUG
com.google.ar.sceneform.R$drawable: int abc_ratingbar_indicator_material
com.google.ar.sceneform.ux.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.google.ar.schemas.lull.AxisSystem: java.lang.String[] names
com.google.ar.core.Config: java.lang.String TAG
com.google.ar.sceneform.ux.R$attr: int multiChoiceItemLayout
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.google.ar.sceneform.ux.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.google.ar.schemas.sceneform.SamplerCompareFunc: short NotEqual
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_18
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.google.ar.sceneform.ux.R$styleable: int SearchView_android_inputType
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format R_INTEGER
com.google.ar.sceneform.ArSceneView: float[] lastValidEnvironmentalHdrAmbientSphericalHarmonics
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType SHORT3
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.google.ar.sceneform.ux.R$dimen: int abc_edit_text_inset_bottom_material
com.google.ar.sceneform.R$attr: int backgroundStacked
com.google.ar.sceneform.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_Light
com.google.ar.core.ImageMetadata: int STATISTICS_LENS_SHADING_MAP_MODE
com.google.ar.sceneform.ux.R$attr: int splitTrack
com.google.ar.sceneform.Node: com.google.ar.sceneform.rendering.RenderableInstance renderableInstance
com.google.ar.sceneform.ux.R$styleable: int ActivityChooserView_initialActivityCount
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.android.filament.TextureSampler$WrapMode: com.google.android.filament.TextureSampler$WrapMode REPEAT
com.google.ar.sceneform.R$drawable: int abc_list_selector_holo_light
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment horizontalAlignment
com.google.ar.sceneform.ux.R$id: int showTitle
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter LINEAR_MIPMAP_LINEAR
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_display_4_material
com.google.ar.sceneform.R$attr: int logo
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_panelMenuListWidth
com.google.ar.sceneform.ux.R$anim: int abc_slide_in_top
com.google.android.filament.RenderTarget$AttachmentPoint: com.google.android.filament.RenderTarget$AttachmentPoint DEPTH
com.google.ar.sceneform.R$attr: int allowStacking
com.google.ar.sceneform.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.window.R$attr: int finishSecondaryWithPrimary
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_RatingBar_Small
com.google.ar.sceneform.ux.R$dimen: int notification_content_margin_start
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.google.ar.sceneform.ux.R$style: int Base_V22_Theme_AppCompat_Light
com.google.ar.sceneform.R$drawable: int abc_list_pressed_holo_dark
com.google.ar.sceneform.assets.RenderableSource: com.google.ar.sceneform.assets.RenderableSource$RecenterMode recenterMode
com.google.ar.sceneform.R$styleable: int SearchView_searchIcon
androidx.window.core.Version: int minor
com.google.android.filament.VertexBuffer$QuatTangentContext: int normalsStride
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.google.ar.sceneform.Node: int WORLD_INVERSE_TRANSFORM_DIRTY
com.google.ar.sceneform.R$style: int Platform_AppCompat
com.google.ar.sceneform.rendering.Renderer: com.google.ar.sceneform.rendering.ViewAttachmentManager viewAttachmentManager
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage: int width
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.ar.sceneform.ux.R$color: int material_deep_teal_500
com.google.ar.sceneform.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.google.ar.sceneform.R$attr: int switchTextAppearance
com.google.ar.schemas.lull.VertexAttributeType: int Vec4ub
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.google.ar.sceneform.R$id: int collapseActionView
com.google.ar.sceneform.R$styleable: int ActionBar_homeLayout
com.google.ar.sceneform.ux.R$drawable: int abc_ic_star_black_36dp
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.google.ar.sceneform.R$drawable: int abc_switch_thumb_material
com.google.ar.sceneform.ux.R$styleable: int Toolbar_titleMargins
com.google.ar.sceneform.R$style: int Theme_AppCompat_Light_Dialog
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionBar_TabView
com.google.ar.sceneform.ux.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.google.ar.sceneform.ux.R$string: int abc_searchview_description_submit
com.google.ar.sceneform.R$styleable: int ViewBackgroundHelper_android_background
com.google.ar.sceneform.R$style: int Widget_Compat_NotificationActionContainer
com.google.ar.sceneform.ux.R$dimen: int abc_list_item_height_material
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.RenderableDefinition faceMeshDefinition
com.google.ar.sceneform.ux.R$attr: int actionBarSplitStyle
com.google.android.filament.Skybox$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.sceneform.rendering.FixedWidthViewSizer: float DEFAULT_SIZE_Z
com.google.ar.sceneform.ux.R$id: int homeAsUp
com.google.ar.schemas.lull.DeviceType: int Mouse
com.google.ar.sceneform.ux.R$styleable: int ActionBar_popupTheme
com.google.ar.sceneform.ux.R$attr: int layout
com.google.ar.sceneform.ux.R$styleable: int Toolbar_subtitle
com.google.ar.sceneform.ux.R$id: int scrollView
com.google.ar.sceneform.ux.R$style: int ThemeOverlay_AppCompat_Dark
com.google.ar.schemas.lull.VertexAttributeUsage: int BoneIndices
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: java.util.List vertices
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace POSITIVE_X
com.google.ar.sceneform.rendering.PlaneRenderer: java.lang.String MATERIAL_TEXTURE
com.google.ar.sceneform.ux.R$id: int action_bar_root
com.google.ar.sceneform.ux.R$layout: int abc_screen_content_include
com.google.ar.sceneform.R$style: int Base_Animation_AppCompat_Tooltip
com.google.ar.sceneform.utilities.TimeAccumulator: long elapsedTimeMs
com.google.ar.sceneform.ux.R$styleable: int ActionBar_icon
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState TRACKING
com.google.android.filament.Texture$Builder$BuilderFinalizer: long mNativeObject
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.google.ar.sceneform.R$layout: int abc_cascading_menu_item_layout
com.google.ar.sceneform.collision.Collider: com.google.ar.sceneform.common.TransformProvider transformProvider
com.google.ar.sceneform.R$styleable: int MenuItem_android_enabled
com.google.ar.sceneform.ux.R$drawable: int abc_btn_radio_material
androidx.window.R$attr: int clearTop
com.google.ar.core.Config$CloudAnchorMode: int nativeCode
com.google.ar.sceneform.R$styleable: int MenuItem_android_orderInCategory
com.google.android.filament.android.UiHelper$ContextErrorPolicy: com.google.android.filament.android.UiHelper$ContextErrorPolicy[] $VALUES
com.google.ar.sceneform.R$id: int forever
com.google.ar.sceneform.R$attr: int menu
com.google.ar.sceneform.assets.RenderableSource$RecenterMode: com.google.ar.sceneform.assets.RenderableSource$RecenterMode[] $VALUES
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.google.ar.sceneform.R$drawable: int abc_list_divider_mtrl_alpha
com.google.ar.sceneform.rendering.CameraStream: int cameraTextureId
com.google.ar.sceneform.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.google.ar.sceneform.R$color: int secondary_text_default_material_dark
com.google.ar.sceneform.R$styleable: int TextAppearance_fontVariationSettings
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment[] $VALUES
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType FLOAT4
com.google.ar.sceneform.R$styleable: int ActionBar_displayOptions
com.google.ar.sceneform.R$styleable: int SearchView_commitIcon
com.google.ar.sceneform.ux.R$color: int primary_material_dark
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.google.ar.core.ImageMetadata: int JPEG_ORIENTATION
com.google.ar.sceneform.ux.R$string: int abc_capital_on
com.google.ar.sceneform.ux.PlaneDiscoveryController: android.view.View planeDiscoveryView
com.google.ar.sceneform.ux.R$styleable: int[] FontFamily
com.google.ar.sceneform.R$attr: int spinBars
com.google.ar.sceneform.ux.R$styleable: int MenuItem_actionViewClass
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type HORIZONTAL_DOWNWARD_FACING
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Button
com.google.ar.schemas.lull.MaterialTextureUsage: int Unused
com.google.ar.sceneform.R$string: int __arcore_cancel
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.ModelRenderable faceMeshRenderable
com.google.ar.sceneform.R$styleable: int SwitchCompat_trackTintMode
com.google.ar.sceneform.lullmodel.AxisSystem: int ZUp_XBack_YRight
com.google.ar.sceneform.ux.R$styleable: int MenuGroup_android_id
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat RG8I
com.google.ar.sceneform.R$styleable: int AppCompatTextView_drawableLeftCompat
com.google.ar.sceneform.R$id: int src_over
com.google.ar.sceneform.ux.R$styleable: int SearchView_suggestionRowLayout
com.google.android.filament.Colors$Conversion: com.google.android.filament.Colors$Conversion FAST
com.google.ar.sceneform.ux.BaseGesture: boolean justStarted
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.google.ar.sceneform.R$attr: int listChoiceIndicatorMultipleAnimated
com.google.ar.sceneform.ux.R$dimen: int abc_dialog_min_width_major
com.google.ar.sceneform.ux.PinchGesture: com.google.ar.sceneform.math.Vector3 previousPosition1
com.google.android.filament.Scene: com.google.android.filament.Skybox mSkybox
com.google.ar.sceneform.ux.PinchGesture: boolean PINCH_GESTURE_DEBUG
com.google.ar.sceneform.ux.R$drawable: int abc_btn_check_material_anim
com.google.ar.sceneform.R$attr: int title
com.google.ar.sceneform.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_dividerPadding
com.google.ar.sceneform.ux.R$drawable: int abc_switch_thumb_material
com.google.ar.schemas.sceneform.ParameterInitDefType: byte DoubleVec4Init
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_singleChoiceItemLayout
com.google.ar.sceneform.ux.R$styleable: int AlertDialog_listLayout
com.google.ar.sceneform.R$drawable: int abc_dialog_material_background
com.google.ar.core.ImageMetadata: int STATISTICS_START
com.google.ar.core.ImageMetadata: int STATISTICS_FACE_IDS
com.google.ar.sceneform.ux.R$attr: int allowStacking
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.google.ar.sceneform.lullmodel.OptionalBool: java.lang.String[] names
com.google.ar.sceneform.Node: int WORLD_ROTATION_DIRTY
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat DXT5_RGBA
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda4: android.hardware.camera2.CameraCaptureSession$StateCallback f$0
com.google.ar.sceneform.rendering.LightProbe$Builder: java.util.concurrent.Callable inputStreamCreator
com.google.ar.core.ImageMetadata: int SCALER_CROP_REGION
com.google.ar.sceneform.ux.R$styleable: int ActionBar_titleTextStyle
com.google.ar.sceneform.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.google.ar.sceneform.R$color: int material_grey_600
com.google.android.filament.View$Dithering: com.google.android.filament.View$Dithering TEMPORAL
com.google.ar.core.ImageMetadata: int JPEG_QUALITY
com.google.ar.sceneform.R$styleable: int TextAppearance_android_textSize
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment TOP
com.google.ar.sceneform.R$color: int dim_foreground_disabled_material_dark
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.google.ar.sceneform.R$styleable: int[] ColorStateListItem
com.google.ar.sceneform.R$attr: int dividerHorizontal
com.google.ar.core.Config$AugmentedFaceMode: com.google.ar.core.Config$AugmentedFaceMode DISABLED
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_PopupMenu
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.google.ar.sceneform.Node: com.google.ar.sceneform.collision.Collider collider
com.google.ar.sceneform.ux.R$attr: int panelBackground
com.google.ar.sceneform.R$attr: int paddingEnd
com.google.ar.sceneform.R$styleable: int TextAppearance_android_shadowDy
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.google.ar.sceneform.rendering.Texture$Usage: com.google.ar.sceneform.rendering.Texture$Usage DATA
com.google.ar.sceneform.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.google.ar.sceneform.ux.R$dimen: int abc_dropdownitem_text_padding_right
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.ar.schemas.sceneform.ParameterInitDefType: byte IntInit
com.google.ar.sceneform.R$styleable: int MenuItem_android_title
com.google.ar.sceneform.ux.R$color: int switch_thumb_normal_material_dark
com.google.ar.sceneform.R$id: int select_dialog_listview
com.google.ar.sceneform.R$style: int Base_AlertDialog_AppCompat
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int DiffuseColor
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format STENCIL_INDEX
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_actionBarTabStyle
com.google.ar.sceneform.ux.R$styleable: int CompoundButton_buttonCompat
com.google.ar.sceneform.rendering.ViewRenderable: android.view.View view
com.google.ar.sceneform.R$color: int notification_icon_bg_color
com.google.ar.sceneform.R$style: int Theme_AppCompat_Light
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Spinner_Underlined
com.google.ar.sceneform.R$styleable: int ActionBar_icon
com.google.ar.core.TrackData: long nativeHandle
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.google.ar.sceneform.R$dimen: int tooltip_y_offset_non_touch
com.google.ar.sceneform.R$attr: int tooltipForegroundColor
com.google.ar.sceneform.R$style: int Widget_AppCompat_SeekBar
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.ar.sceneform.ux.R$color: int secondary_text_disabled_material_dark
com.google.ar.sceneform.ux.TranslationController: float LERP_SPEED
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Display4
com.google.ar.sceneform.ux.ScaleController: float DEFAULT_SENSITIVITY
com.google.android.filament.VertexBuffer$QuatType: com.google.android.filament.VertexBuffer$QuatType HALF4
com.google.ar.sceneform.R$attr: int fontProviderAuthority
com.google.ar.sceneform.ux.R$dimen: int abc_text_size_subhead_material
com.google.ar.sceneform.ux.R$styleable: int StateListDrawable_android_dither
com.google.ar.schemas.lull.MaterialTextureUsage: int Shadow
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.google.ar.sceneform.R$id: int search_plate
com.google.ar.sceneform.R$dimen: int abc_disabled_alpha_material_light
com.google.ar.schemas.lull.AxisSystem: int ZUp_XBack_YRight
com.google.ar.sceneform.rendering.LightProbe: int SH_ORDER
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_title
com.google.ar.sceneform.Sun: float baseIntensity
com.google.ar.sceneform.ux.R$drawable: int sceneform_plane
com.google.ar.sceneform.R$attr: int tooltipText
com.google.ar.sceneform.rendering.FixedWidthViewSizer: float widthMeters
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.google.ar.schemas.sceneform.ParameterInitDefType: byte Vec2Init
com.google.ar.schemas.lull.LayoutFillOrder: int RightDown
com.google.ar.core.Frame: long nativeHandle
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.google.ar.sceneform.R$dimen: int abc_action_bar_overflow_padding_end_material
com.google.ar.sceneform.ux.R$id: int action_bar_activity_content
com.google.ar.sceneform.R$styleable: int SwitchCompat_android_textOn
com.google.ar.sceneform.rendering.PlaneRenderer: java.util.Map materialOverrides
com.google.ar.sceneform.rendering.Light: float falloffRadius
com.google.ar.sceneform.R$attr: int listPreferredItemHeightSmall
com.google.ar.core.ArCoreApk$InstallStatus: com.google.ar.core.ArCoreApk$InstallStatus INSTALL_REQUESTED
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.google.ar.schemas.sceneform.CollisionShapeType: java.lang.String[] names
com.google.ar.sceneform.R$styleable: int ActionBar_contentInsetEnd
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Usage usage
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_imageButtonStyle
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.google.ar.sceneform.R$interpolator: int fast_out_slow_in
com.google.ar.sceneform.R$drawable: int btn_radio_off_to_on_mtrl_animation
com.google.ar.core.ImageMetadata: int SECTION_INFO
com.google.ar.sceneform.ux.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.google.android.filament.Engine$Backend: com.google.android.filament.Engine$Backend DEFAULT
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType HALF2
com.google.android.filament.Viewport: int bottom
com.google.android.filament.View: com.google.android.filament.View$RenderQuality mRenderQuality
com.google.ar.sceneform.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.google.ar.sceneform.ux.R$drawable: int notification_bg_normal
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_switchMinWidth
com.google.ar.core.ImageMetadata: int SECTION_CONTROL
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.google.android.filament.MaterialInstance$IntElement: com.google.android.filament.MaterialInstance$IntElement INT3
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute UV1
com.google.ar.sceneform.ux.R$attr: int menu
com.google.ar.sceneform.assets.RenderableSource$Builder: android.content.Context context
com.google.ar.sceneform.R$attr: int actionModeSplitBackground
com.google.ar.sceneform.ux.R$layout: int notification_template_custom_big
com.google.ar.sceneform.R$attr: int viewInflaterClass
com.google.ar.sceneform.rendering.LightInstance: com.google.ar.sceneform.common.TransformProvider transformProvider
com.google.ar.sceneform.ux.R$id: int add
com.google.ar.sceneform.R$drawable: int abc_spinner_mtrl_am_alpha
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.google.ar.sceneform.ux.R$id: int unchecked
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Button_Small
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float reflectionScaleForFilament
com.google.ar.schemas.sceneform.ParameterInitDefType: byte DoubleVec3Init
com.google.android.filament.Stream$Builder: long mNativeBuilder
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.Texture[] mTextures
com.google.ar.sceneform.ux.R$color: int secondary_text_default_material_light
com.google.ar.sceneform.ux.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_shadowDy
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.google.ar.sceneform.ux.BaseTransformationController: boolean activeAndEnabled
com.google.ar.sceneform.ux.R$id: int search_edit_frame
com.google.ar.sceneform.R$style: int Base_V7_Theme_AppCompat
com.google.ar.core.ImageMetadata: int STATISTICS_FACE_DETECT_MODE
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_divider
com.google.ar.sceneform.ux.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.google.ar.sceneform.ux.R$attr: int fontProviderFetchTimeout
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment LEFT
com.google.ar.sceneform.rendering.Texture$Builder: java.lang.Object registryId
com.google.ar.schemas.lull.MaterialTextureUsage: int Opacity
com.google.ar.core.Config$InstantPlacementMode: com.google.ar.core.Config$InstantPlacementMode DISABLED
com.google.ar.core.ImageMetadata: int SECTION_FLASH
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.ar.sceneform.R$id: int accessibility_action_clickable_span
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.google.ar.sceneform.lullmodel.TextureFiltering: java.lang.String[] names
com.google.ar.sceneform.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.google.ar.sceneform.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.google.flatbuffers.Constants: int SIZEOF_DOUBLE
com.google.ar.sceneform.lullmodel.AxisSystem: java.lang.String[] names
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda1: android.hardware.camera2.CameraDevice f$1
com.google.ar.sceneform.ux.R$styleable: int ActionBar_contentInsetEnd
com.google.ar.sceneform.lullmodel.VariantDef: byte DataVec3
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float DEFAULT_REFLECTION_SCALE_FOR_FILAMENT
com.google.ar.sceneform.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.google.ar.sceneform.R$attr: int drawerArrowStyle
com.google.ar.sceneform.R$color: int dim_foreground_disabled_material_light
com.google.ar.sceneform.ux.R$styleable: int AppCompatSeekBar_android_thumb
com.google.ar.sceneform.ux.BaseTransformationController: com.google.ar.sceneform.ux.BaseGestureRecognizer gestureRecognizer
com.google.ar.sceneform.ux.R$attr: int arrowHeadLength
com.google.ar.sceneform.R$id: int search_badge
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int Invalid
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
com.google.ar.schemas.sceneform.SamplerWrapMode: short Repeat
com.google.ar.sceneform.R$drawable: int abc_list_divider_material
com.google.ar.sceneform.collision.Collider: com.google.ar.sceneform.collision.CollisionShape cachedWorldShape
com.google.ar.sceneform.SceneView: boolean debugEnabled
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.google.ar.sceneform.ux.R$attr: int popupTheme
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode AMBIENT_INTENSITY
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState ERROR_RESOURCE_EXHAUSTED
com.google.ar.schemas.lull.VertexAttributeType: int Vec2us
com.google.ar.sceneform.R$drawable: int abc_list_selector_background_transition_holo_light
com.google.ar.sceneform.R$attr: int colorControlHighlight
com.google.ar.sceneform.R$styleable: int View_paddingStart
com.google.ar.sceneform.ux.R$styleable: int SearchView_goIcon
com.google.ar.sceneform.R$styleable: int ActivityChooserView_initialActivityCount
com.google.ar.sceneform.lullmodel.AxisSystem: int XUp_ZFront_YLeft
com.google.ar.sceneform.R$styleable: int FontFamilyFont_font
com.google.android.filament.View: long mNativeObject
com.google.android.filament.BuildConfig: java.lang.String BUILD_TYPE
com.google.ar.core.CameraConfig$DepthSensorUsage: com.google.ar.core.CameraConfig$DepthSensorUsage REQUIRE_AND_USE
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat ETC2_SRGB8_A1
com.google.ar.sceneform.R$id: int expand_activities_button
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.google.ar.sceneform.rendering.Light$Type: com.google.ar.sceneform.rendering.Light$Type FOCUSED_SPOTLIGHT
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_24
com.google.ar.sceneform.ux.R$dimen: int hint_pressed_alpha_material_dark
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.google.android.filament.Camera$Projection: com.google.android.filament.Camera$Projection PERSPECTIVE
com.google.ar.sceneform.ux.R$attr: int drawableTopCompat
com.google.ar.sceneform.ux.R$drawable: int abc_ic_star_half_black_16dp
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter NEAREST_MIPMAP_NEAREST
com.google.android.filament.Stream: long mNativeObject
com.google.ar.sceneform.R$styleable: int AppCompatImageView_tintMode
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.math.Vector3 position
com.google.ar.sceneform.R$styleable: int[] AppCompatTextView
com.google.ar.sceneform.rendering.R$raw: int sceneform_transparent_textured_material
com.google.ar.sceneform.R$attr: int overlapAnchor
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage: int format
com.google.flatbuffers.Constants: int SIZEOF_SHORT
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading SUBSURFACE
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.google.ar.sceneform.R$attr: int textAppearanceListItem
com.google.ar.sceneform.ux.R$style: int Base_V7_Theme_AppCompat_Dialog
com.google.ar.sceneform.ux.R$id: int middle
androidx.window.R$id: int locale
com.google.ar.sceneform.ux.R$attr: int buttonBarPositiveButtonStyle
com.google.ar.sceneform.ux.R$id: int off
com.google.ar.sceneform.R$styleable: int CompoundButton_buttonTint
com.google.ar.sceneform.ux.R$styleable: int[] FontFamilyFont
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DialogWhenLarge
com.google.android.filament.Material$Parameter: int SAMPLER_OFFSET
androidx.window.R$attr: int secondaryActivityAction
com.google.ar.sceneform.ux.R$styleable: int StateListDrawable_android_constantSize
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_Button
com.google.ar.sceneform.R$attr: int state_above_anchor
com.google.ar.sceneform.R$string: int abc_shareactionprovider_share_with_application
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.google.ar.core.Session$Feature: int nativeCode
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.google.ar.sceneform.R$style: int Base_V7_Widget_AppCompat_EditText
com.google.ar.sceneform.rendering.Light$Builder: float spotlightConeOuter
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.google.ar.sceneform.ux.R$dimen: int tooltip_y_offset_touch
com.google.ar.schemas.lull.MaterialTextureUsage: int SpecularEnvironment
com.google.ar.sceneform.ux.R$attr: int borderlessButtonStyle
com.google.ar.sceneform.ux.BaseGestureRecognizer: com.google.ar.sceneform.ux.GesturePointersUtility gesturePointersUtility
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.math.Vector3 position
com.google.ar.sceneform.R$styleable: int AppCompatTextView_textAllCaps
com.google.ar.sceneform.ux.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.google.android.filament.Texture$Sampler: com.google.android.filament.Texture$Sampler SAMPLER_CUBEMAP
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.google.ar.sceneform.ux.R$attr: int colorBackgroundFloating
com.google.ar.sceneform.R$style: int Theme_AppCompat_DayNight_Dialog
com.google.ar.core.Frame: java.lang.String TAG
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.google.ar.sceneform.collision.Plane: com.google.ar.sceneform.math.Vector3 center
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.google.ar.sceneform.R$dimen: int tooltip_horizontal_padding
com.google.ar.sceneform.ux.R$styleable: int FontFamilyFont_fontVariationSettings
com.google.ar.sceneform.ux.R$attr: int subtitleTextAppearance
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.google.ar.core.Session: long nativeWrapperHandle
com.google.ar.sceneform.R$string: int abc_action_bar_home_description
com.google.ar.sceneform.R$dimen: int abc_control_inset_material
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType FLOAT2
com.google.android.filament.android.TextureHelper: int BITMAP_CONFIG_RGBA_8888
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.google.android.filament.SwapChain: long CONFIG_TRANSPARENT
com.google.ar.sceneform.ux.R$style: int Base_V21_Theme_AppCompat
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format RGBA_INTEGER
com.google.ar.sceneform.R$drawable: int abc_ic_star_half_black_16dp
com.google.ar.sceneform.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.google.ar.sceneform.ux.R$drawable: int abc_text_select_handle_left_mtrl_dark
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.ar.sceneform.rendering.CameraStream: int cameraStreamRenderable
com.google.ar.sceneform.R$string: int abc_searchview_description_search
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d OPENGL_NORMALIZED_DEVICE_COORDINATES
com.google.ar.sceneform.ux.R$attr: int singleChoiceItemLayout
com.google.ar.sceneform.ux.R$id: int none
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.google.ar.sceneform.R$attr: int toolbarStyle
com.google.ar.core.Anchor: long nativeSymbolTableHandle
com.google.ar.sceneform.R$attr: int backgroundTint
com.google.ar.sceneform.R$drawable: int abc_action_bar_item_background_material
com.google.ar.sceneform.ux.R$integer: int cancel_button_image_alpha
com.google.ar.sceneform.ux.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.google.ar.sceneform.ux.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.google.ar.sceneform.ux.R$styleable: int AppCompatSeekBar_tickMark
com.google.ar.sceneform.R$styleable: int MenuItem_android_onClick
com.google.ar.schemas.lull.VariantDef: java.lang.String[] names
com.google.ar.sceneform.R$styleable: int AppCompatTheme_popupWindowStyle
com.google.ar.core.ImageMetadata: int FLASH_START
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.google.ar.sceneform.ux.R$styleable: int SearchView_iconifiedByDefault
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.ar.sceneform.R$string: int abc_menu_delete_shortcut_label
com.google.ar.sceneform.R$style: int Base_V26_Theme_AppCompat
com.google.ar.sceneform.ArSceneView: com.google.ar.sceneform.rendering.Color lastValidColorCorrection
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.google.ar.sceneform.ux.R$string: int abc_action_menu_overflow_description
com.google.ar.sceneform.ux.TranslationController: com.google.ar.core.HitResult lastArHitResult
com.google.ar.sceneform.ux.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace POSITIVE_Z
com.google.ar.sceneform.ux.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.google.ar.sceneform.ux.BaseGesture: com.google.ar.sceneform.ux.GesturePointersUtility gesturePointersUtility
com.google.ar.sceneform.R$attr: int controlBackground
com.google.ar.sceneform.R$id: int accessibility_custom_action_29
com.google.ar.sceneform.ux.R$styleable: int SearchView_defaultQueryHint
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource$RecenterMode recenterMode
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.google.ar.sceneform.R$attr: int tint
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.google.ar.core.Point$OrientationMode: int nativeCode
com.google.ar.sceneform.ux.R$attr: int tintMode
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.ar.sceneform.R$color: int abc_input_method_navigation_guard
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState ERROR_HOSTING_DATASET_PROCESSING_FAILED
com.google.ar.sceneform.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.google.ar.sceneform.ux.ScaleController: float DEFAULT_ELASTICITY
com.google.ar.sceneform.rendering.ExternalTexture: android.graphics.SurfaceTexture surfaceTexture
com.google.ar.sceneform.ux.R$color: int switch_thumb_disabled_material_light
com.google.android.filament.VertexBuffer$QuatType: com.google.android.filament.VertexBuffer$QuatType[] $VALUES
com.google.ar.sceneform.rendering.MaterialFactory: float DEFAULT_METALLIC_PROPERTY
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.google.ar.sceneform.ux.ScaleController: float ELASTIC_RATIO_LIMIT
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Color color
com.google.ar.sceneform.R$dimen: int notification_large_icon_width
com.google.ar.core.ImageMetadata: int TYPE_INT
com.google.ar.core.ImageMetadata: int STATISTICS_FACE_SCORES
com.google.ar.sceneform.rendering.Texture: int MIP_LEVELS_TO_GENERATE
com.google.ar.sceneform.ux.R$id: int checkbox
com.google.ar.sceneform.ux.BaseTransformationController: com.google.ar.sceneform.ux.BaseGesture activeGesture
com.google.ar.sceneform.ux.R$styleable: int Toolbar_logo
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_28
com.google.ar.sceneform.ux.R$drawable: int abc_ic_star_half_black_36dp
com.google.ar.sceneform.ux.R$color: int primary_dark_material_light
com.google.ar.core.dependencies.c: java.lang.String b
androidx.window.embedding.SplitController: boolean sDebug
com.google.ar.sceneform.SceneView: java.lang.String TAG
com.google.ar.sceneform.R$styleable: int Toolbar_contentInsetEnd
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean IS_ANDROID_API_AVAILABLE
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: int BoneWeights
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type UBYTE
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Type type
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
com.google.ar.sceneform.R$integer: int status_bar_notification_info_maxnum
com.google.ar.sceneform.ux.R$styleable: int AppCompatTheme_colorControlActivated
com.google.ar.sceneform.ux.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.google.ar.sceneform.ux.R$attr: int actionDropDownStyle
com.google.ar.sceneform.ux.R$attr: int actionBarPopupTheme
com.google.ar.sceneform.ux.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.google.ar.sceneform.ux.R$styleable: int TextAppearance_android_textColorHint
com.google.ar.sceneform.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.google.ar.sceneform.ux.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.google.ar.sceneform.ux.R$attr: int textColorAlertDialogListItem
com.google.ar.sceneform.ux.R$id: int sceneform_hand_layout
com.google.ar.sceneform.rendering.RenderableDefinition: int BYTES_PER_FLOAT
com.google.ar.sceneform.R$styleable: int AppCompatTheme_panelMenuListWidth
com.google.ar.sceneform.R$style: int Animation_AppCompat_DropDownUp
androidx.fragment.app.Fragment: int CREATED
kotlin.jvm.internal.FunctionReference: int flags
com.google.ar.schemas.lull.AxisSystem: int ZUp_XFront_YRight
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_default_height_material
com.google.ar.sceneform.R$id: int accessibility_custom_action_27
com.google.ar.sceneform.ux.R$styleable: int[] ActionBar
com.google.ar.sceneform.ux.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.google.ar.core.SharedCamera: com.google.ar.core.aj sharedCameraInfo
com.google.ar.sceneform.R$styleable: int Spinner_android_prompt
com.google.ar.schemas.lull.DeviceType: int Keyboard
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Button
com.google.ar.sceneform.R$drawable: int abc_textfield_default_mtrl_alpha
com.google.ar.sceneform.R$attr: int showDividers
com.google.ar.sceneform.ux.R$attr: int editTextColor
com.google.ar.sceneform.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.google.ar.sceneform.R$drawable: int abc_ic_menu_overflow_material
com.google.ar.sceneform.R$styleable: int Spinner_android_entries
com.google.ar.sceneform.ux.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.google.ar.sceneform.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.google.ar.sceneform.R$attr: int firstBaselineToTopHeight
com.google.ar.sceneform.R$styleable: int AppCompatTheme_buttonBarStyle
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Display2
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_android_weightSum
com.google.ar.sceneform.rendering.Renderer: double[] cameraProjectionMatrix
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction NEVER
com.google.ar.core.Session$Feature: com.google.ar.core.Session$Feature FRONT_CAMERA
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.ar.sceneform.ux.TranslationController: com.google.ar.sceneform.math.Quaternion desiredLocalRotation
com.google.ar.sceneform.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.google.ar.sceneform.R$color: int abc_primary_text_disable_only_material_light
com.google.ar.sceneform.ux.R$id: int accessibility_custom_action_2
com.google.ar.sceneform.R$styleable: int ActionMode_closeItemLayout
com.google.ar.sceneform.R$styleable: int ActionMenuItemView_android_minWidth
com.google.ar.sceneform.ux.R$anim: int abc_slide_in_bottom
com.google.ar.sceneform.ux.R$id: int submit_area
com.google.ar.sceneform.R$layout: int abc_list_menu_item_checkbox
com.google.ar.sceneform.R$styleable: int MenuGroup_android_checkableBehavior
com.google.ar.sceneform.ux.R$styleable: int SwitchCompat_switchTextAppearance
com.google.ar.sceneform.R$dimen: int abc_dialog_padding_material
com.google.ar.sceneform.R$drawable: int abc_ratingbar_material
com.google.ar.sceneform.ux.R$string: int abc_activity_chooser_view_see_all
com.google.ar.sceneform.ux.R$id: int right_side
com.google.ar.sceneform.ux.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type FLOAT2
com.google.ar.sceneform.R$style: int Widget_AppCompat_AutoCompleteTextView
com.google.ar.sceneform.R$id: int on
com.google.ar.sceneform.ux.R$color: int button_material_light
com.google.ar.sceneform.R$attr: int icon
com.google.ar.sceneform.R$styleable: int AppCompatTheme_switchStyle
com.google.ar.sceneform.ux.R$styleable: int ViewBackgroundHelper_android_background
com.google.android.filament.VertexBuffer$Builder$BuilderFinalizer: long mNativeObject
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat
com.google.ar.sceneform.ux.R$id: int action_bar_spinner
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.google.ar.sceneform.ux.R$dimen: int abc_action_bar_default_padding_end_material
com.google.ar.sceneform.ux.R$attr: int ratingBarStyle
com.google.ar.sceneform.ux.R$drawable: int btn_checkbox_checked_mtrl
com.google.ar.sceneform.ux.R$color: int dim_foreground_disabled_material_dark
com.google.ar.sceneform.ux.R$drawable: int abc_switch_track_mtrl_alpha
com.google.android.filament.android.UiHelper: int mDesiredWidth
com.google.ar.sceneform.ux.R$attr: int showText
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_ListPopupWindow
com.google.ar.sceneform.ux.R$styleable: int AppCompatTextHelper_android_drawableStart
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.google.android.filament.IndexBuffer$Builder: long mNativeBuilder
com.google.ar.sceneform.TouchEventSystem: java.util.ArrayList onPeekTouchListeners
com.google.ar.sceneform.ux.R$attr: int fontWeight
com.google.ar.sceneform.ux.R$styleable: int Toolbar_title
com.google.ar.core.Anchor: long nativeHandle
com.google.ar.sceneform.R$style: int TextAppearance_AppCompat_Title
com.google.android.filament.Colors$Conversion: com.google.android.filament.Colors$Conversion[] $VALUES
com.google.android.filament.Material$Parameter: com.google.android.filament.Material$Parameter$Type type
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus IO_ERROR
androidx.window.embedding.SplitRule: int layoutDirection
com.google.ar.sceneform.R$attr: int dividerVertical
com.google.ar.sceneform.ux.R$style: int TextAppearance_AppCompat_Menu
com.google.ar.sceneform.R$attr: int logoDescription
com.google.ar.sceneform.ux.R$layout: int abc_action_mode_close_item_material
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: int DiffuseEnvironment
com.google.ar.sceneform.ux.R$drawable: int abc_spinner_textfield_background_material
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.google.ar.sceneform.ux.R$id: int actions
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment BOTTOM
com.google.ar.sceneform.ux.R$color: int tooltip_background_light
com.google.ar.sceneform.R$styleable: int AppCompatTheme_actionBarItemBackground
com.google.ar.sceneform.ux.R$string: int abc_search_hint
com.google.ar.sceneform.ux.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.math.Vector3 boneScale
com.google.ar.sceneform.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.google.ar.sceneform.rendering.ModelRenderable: com.google.ar.sceneform.rendering.SkeletonRig skeletonRig
com.google.ar.core.Earth$EarthState: int nativeCode
com.google.ar.sceneform.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.google.ar.sceneform.R$drawable: int abc_ratingbar_small_material
com.google.ar.sceneform.ux.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.google.ar.sceneform.ux.TwistGesture: com.google.ar.sceneform.math.Vector3 previousPosition1
com.google.android.filament.android.UiHelper$SurfaceViewHandler: com.google.android.filament.android.UiHelper this$0
com.google.android.filament.Camera$Fov: com.google.android.filament.Camera$Fov HORIZONTAL
com.google.ar.sceneform.R$dimen: int abc_switch_padding
com.google.ar.sceneform.R$styleable: int[] Toolbar
com.google.ar.sceneform.R$dimen: int abc_dialog_padding_top_material
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter[] $VALUES
com.google.ar.sceneform.ArSceneView: com.google.ar.sceneform.SequentialTask pauseResumeTask
com.google.ar.sceneform.R$style: int Base_Theme_AppCompat_Light
androidx.window.R$styleable: int[] ActivityRule
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight$Builder$BuilderFinalizer mFinalizer
com.google.ar.sceneform.rendering.SkeletonRig: com.google.ar.schemas.lull.SkeletonDef skeletonDef
com.google.ar.sceneform.ux.R$dimen: int notification_small_icon_size_as_large
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ux.BaseArFragment$OnTapArPlaneListener onTapArPlaneListener
com.google.ar.sceneform.R$attr: int colorControlActivated
com.google.ar.sceneform.R$id: int tabMode
com.google.ar.sceneform.R$string: int abc_menu_ctrl_shortcut_label
com.google.ar.sceneform.ux.R$attr: int numericModifiers
com.google.android.filament.View$DynamicResolutionOptions: float maxScale
com.google.android.filament.MaterialInstance$BooleanElement: com.google.android.filament.MaterialInstance$BooleanElement BOOL3
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.math.Vector3 position
com.google.ar.sceneform.ux.R$styleable: int MenuItem_android_onClick
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat R11F_G11F_B10F
com.google.ar.sceneform.ux.R$style: int Widget_AppCompat_Light_ActionButton
com.google.ar.sceneform.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.google.ar.sceneform.R$id: int accessibility_custom_action_30
com.google.ar.sceneform.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.google.ar.sceneform.ux.R$styleable: int MenuGroup_android_checkableBehavior
com.google.ar.sceneform.R$styleable: int MenuView_android_windowAnimationStyle
com.google.android.filament.Texture: int nSetImage(long,long,int,int,int,int,int,java.nio.Buffer,int,int,int,int,int,int,int,java.lang.Object,java.lang.Runnable)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Vector3 rotateVector(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.ArSceneView: void lambda$pauseAsync$2$ArSceneView(java.lang.ref.WeakReference)
com.google.ar.sceneform.ux.BaseArFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.google.ar.sceneform.lullmodel.VariantMapDef: int createVariantMapDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.CameraProvider: float getNearClipPlane()
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
com.google.ar.sceneform.ux.FootprintSelectionVisualizer: FootprintSelectionVisualizer()
com.google.ar.core.TrackData: java.nio.ByteBuffer nativeGetData(long,long)
com.google.ar.schemas.sceneform.BoolVec2Init: com.google.ar.schemas.sceneform.BoolVec2Init getRootAsBoolVec2Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.BoolVec2Init)
com.google.ar.schemas.sceneform.DoubleVec4Init: int endDoubleVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.BaseTransformableNode getSelectedNode()
com.google.ar.core.SharedCamera: void nativeSharedCameraCaptureSessionReady(long,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.ux.R$layout: R$layout()
com.google.ar.sceneform.utilities.LoadHelper: android.net.Uri resourceToUri(android.content.Context,int)
com.google.android.filament.Camera: float nGetSensitivity(long)
com.google.ar.core.Config: com.google.ar.core.Config$FocusMode getFocusMode()
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ux.TransformationSystem makeTransformationSystem()
com.google.ar.sceneform.rendering.ViewRenderable: void updateSuggestedCollisionShape()
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineSkeletonDef skeleton()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyMaterial(com.google.android.filament.Material)
com.google.android.filament.VertexBuffer: void access$300(long,int,int,int,int,int)
com.google.ar.core.Session: long nativeAcquireEarth(long)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef materials(com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int materialsLength()
com.google.ar.sceneform.lullmodel.VariantDef: VariantDef()
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.resources.ResourceRegistry getRenderableRegistry()
com.google.android.filament.View: com.google.android.filament.Scene getScene()
com.google.ar.sceneform.rendering.MaterialFactory: com.google.ar.sceneform.rendering.Material lambda$makeTransparentWithColor$1(com.google.ar.sceneform.rendering.Color,com.google.ar.sceneform.rendering.Material)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.ar.schemas.sceneform.VersionDef: float majorVersion()
com.google.ar.core.Config: Config(com.google.ar.core.Session,long)
com.google.android.filament.Stream: void readPixels(int,int,int,int,com.google.android.filament.Texture$PixelBufferDescriptor)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
com.google.ar.sceneform.math.MathHelper: float lerp(float,float,float)
com.google.android.filament.Texture$Sampler: com.google.android.filament.Texture$Sampler valueOf(java.lang.String)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.resources.ResourceRegistry getRenderableRegistry()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.ar.schemas.sceneform.LightingDef: int createLightingDef(com.google.flatbuffers.FlatBufferBuilder,int,float,int,int)
com.google.android.filament.RenderableManager: void access$1200(long,int)
com.google.ar.sceneform.lullmodel.Rect: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.IndexBuffer: void setBuffer(com.google.android.filament.Engine,java.nio.Buffer)
com.google.ar.sceneform.ux.BaseArFragment: void setOnTapArPlaneListener(com.google.ar.sceneform.ux.BaseArFragment$OnTapArPlaneListener)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: com.google.ar.schemas.lull.ModelPipelineCollidableDef getRootAsModelPipelineCollidableDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.ViewRenderable: void lambda$finalize$1()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.ar.schemas.sceneform.CompiledMaterialDef: com.google.ar.schemas.sceneform.CompiledMaterialDeclDef decl()
com.google.ar.schemas.lull.MaterialTextureDef: int createMaterialTextureDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.utilities.AndroidPreconditions: void setUnderTesting(boolean)
com.google.ar.core.TrackingState: TrackingState(java.lang.String,int,int)
com.google.ar.schemas.lull.ModelInstanceDef: void startAabbsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Session: void nativeSetPlaybackDatasetUri(long,java.lang.String)
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.View createView()
com.google.ar.core.Session: long nativeGetSymbolTable(long)
com.google.ar.schemas.sceneform.IntVec2Init: void addX(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Camera: void nSetExposure(long,float,float,float)
com.google.ar.schemas.sceneform.ParameterInitDef: void startParameterInitDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.flatbuffers.FlatBufferBuilder: com.google.flatbuffers.FlatBufferBuilder init(java.nio.ByteBuffer,com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory)
com.google.ar.sceneform.rendering.ViewSizer: com.google.ar.sceneform.math.Vector3 getSize(android.view.View)
com.google.android.filament.Renderer: void endFrame()
com.google.ar.sceneform.lullmodel.ModelIndexRange: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.LightingDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.IEngine: void destroyIndirectLight(com.google.android.filament.IndirectLight)
com.google.ar.schemas.lull.DataQuat: com.google.ar.schemas.lull.Quat value(com.google.ar.schemas.lull.Quat)
com.google.ar.schemas.sceneform.MaterialDef: int createMaterialDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.ux.BaseTransformationController: void onGestureStarted(com.google.ar.sceneform.ux.BaseGesture)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,boolean,boolean,boolean,boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: void addAttributes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: int usagePerChannelLength()
com.google.ar.core.SharedCamera: com.google.ar.core.aj -$$Nest$fgetsharedCameraInfo(com.google.ar.core.SharedCamera)
com.google.android.filament.View: int nGetDithering(long)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.google.ar.core.LightEstimate: void nativeGetEnvironmentalHdrMainLightIntensity(long,long,float[])
com.google.ar.core.exceptions.PlaybackFailedException: PlaybackFailedException(java.lang.String)
com.google.ar.schemas.sceneform.BoolVec2Init: void addY(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.core.HitResult: com.google.ar.core.Trackable getTrackable()
com.google.android.filament.Box: void setHalfExtent(float,float,float)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.ar.sceneform.lullmodel.DataString: int endDataString(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.LightingDef lightingDefs(int)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder setAmbientShScaleForFilament(float)
com.google.ar.core.AugmentedImage: int nativeGetTrackingMethod(long,long)
com.google.android.filament.View: long getNativeObject()
com.google.ar.sceneform.rendering.Material$Builder: Material$Builder(com.google.ar.sceneform.rendering.Material$1)
com.google.ar.schemas.lull.Color: float b()
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment valueOf(java.lang.String)
com.google.ar.core.CameraConfig: CameraConfig(com.google.ar.core.Session,long)
com.google.android.filament.Texture$PixelBufferDescriptor: int computeDataSize(com.google.android.filament.Texture$Format,com.google.android.filament.Texture$Type,int,int,int)
com.google.android.filament.TextureSampler$MagFilter: com.google.android.filament.TextureSampler$MagFilter valueOf(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
com.google.ar.core.Session: void pause()
com.google.android.filament.RenderTarget: long nBuilderBuild(long,long)
com.google.ar.schemas.sceneform.AnimationDef: void startAnimationDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.nio.ByteBuffer compressedMaterialAsByteBuffer()
com.google.android.filament.Camera$Projection: com.google.android.filament.Camera$Projection[] values()
com.google.ar.sceneform.Node: boolean shouldBeActive()
com.google.ar.core.Session: java.util.List convertNativeCameraConfigsToCollection(long[])
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.ar.core.CameraConfig: void nativeGetTextureDimensions(long,long,int[])
com.google.android.filament.LightManager: long access$000(int)
com.google.ar.core.ImageMetadata: ImageMetadata(long,com.google.ar.core.Session)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.google.ar.sceneform.rendering.Light: void removeChangedListener(com.google.ar.sceneform.rendering.Light$LightChangedListener)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.google.ar.core.Frame: android.media.Image acquireRawDepthImage16Bits()
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
com.google.android.filament.RenderTarget: com.google.android.filament.Texture$CubemapFace getFace(com.google.android.filament.RenderTarget$AttachmentPoint)
com.google.ar.core.Pose: void getTranslation(float[],int)
com.google.ar.sceneform.lullmodel.SkeletonDef: com.google.ar.sceneform.lullmodel.SkeletonDef __assign(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
com.google.android.filament.MaterialInstance: void nSetScissor(long,int,int,int,int)
com.google.ar.schemas.sceneform.SamplerDef: java.nio.ByteBuffer fileInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.lull.VariantArrayDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Pose: float tx()
com.google.ar.sceneform.ux.R$bool: R$bool()
com.google.ar.core.ImageMetadata: double[] getDoubleArray(int)
com.google.ar.schemas.sceneform.SamplerMagFilter: SamplerMagFilter()
com.google.ar.schemas.lull.DataVec4: com.google.ar.schemas.lull.DataVec4 getRootAsDataVec4(java.nio.ByteBuffer)
com.google.ar.sceneform.math.Matrix: void decomposeRotation(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Matrix)
com.google.ar.sceneform.ux.BaseArFragment: void lambda$new$0(boolean)
com.google.ar.core.Session: void setCameraConfig(com.google.ar.core.CameraConfig)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef getRootAsModelPipelineCollidableDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef)
com.google.android.filament.View: void nSetDithering(long,int)
com.google.ar.sceneform.utilities.LoadHelper: java.io.InputStream lambda$remoteUriToInputStreamCreator$3$LoadHelper(java.net.URLConnection)
com.google.ar.core.Camera: com.google.ar.core.CameraIntrinsics getTextureIntrinsics()
com.google.ar.schemas.lull.ModelDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.LightManager$Builder: LightManager$Builder(com.google.android.filament.LightManager$Type)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
com.google.ar.schemas.sceneform.LightingCubeDef: int endLightingCubeDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ArSceneView: void setLightEstimationEnabled(boolean)
com.google.ar.sceneform.lullmodel.VariantMapDef: int valuesLength()
com.google.android.filament.Skybox$Builder: com.google.android.filament.Skybox$Builder showSun(boolean)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getLocalScale()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.google.ar.core.Track: long nativeCreateTrack(long)
androidx.window.core.Bounds: int getHeight()
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer tangentDataAsByteBuffer()
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef getRootAsSuggestedCollisionShapeDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.google.ar.sceneform.rendering.EngineInstance: android.opengl.EGLContext getGlContext()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,float,float,float,float)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.google.ar.schemas.lull.TextureWrap: java.lang.String name(int)
com.google.android.filament.RenderableManager: void nSetGeometryAt(long,int,int,int,long,long,int,int)
com.google.ar.schemas.lull.VertexAttribute: int usage()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.google.ar.schemas.lull.ModelDef: int createLodsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.lull.BlendShape: long name()
com.google.ar.schemas.sceneform.RuntimeAssetDef: void addRenderFlags(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.CompiledMaterialDef compiledMaterials(com.google.ar.schemas.sceneform.CompiledMaterialDef,int)
com.google.android.filament.Engine: Engine(long)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addMaxBoneWeights(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.math.Quaternion: boolean equals(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.rendering.LightProbe$Builder: LightProbe$Builder(com.google.ar.sceneform.rendering.LightProbe$1)
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: int endModelPipelineCollidableDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Renderer: com.google.ar.sceneform.rendering.ViewAttachmentManager getViewAttachmentManager()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.ar.core.SharedCamera: SharedCamera(com.google.ar.core.Session)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.filament.Scene: com.google.android.filament.Skybox getSkybox()
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: int createModelPipelineSkeletonDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.flatbuffers.FlatBufferBuilder: int endVector()
com.google.ar.core.ArCoreApk$InstallBehavior: com.google.ar.core.ArCoreApk$InstallBehavior[] $values()
com.google.android.filament.View$AntiAliasing: View$AntiAliasing(java.lang.String,int)
com.google.ar.sceneform.Camera: void setLocalPosition(com.google.ar.sceneform.math.Vector3)
com.google.android.filament.View: void setDynamicLightingOptions(float,float)
com.google.android.filament.IndirectLight: void setRotation(float[])
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: boolean interleaved()
com.google.ar.sceneform.lullmodel.DataHashValue: int createDataHashValue(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.ar.sceneform.ux.FootprintSelectionVisualizer: void removeSelectionVisual(com.google.ar.sceneform.ux.BaseTransformableNode)
com.google.ar.sceneform.utilities.SceneformBufferUtils: byte[] inputStreamCallableToByteArray(java.util.concurrent.Callable)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.rendering.RenderableInstance: void attachToRenderer(com.google.ar.sceneform.rendering.Renderer)
com.google.ar.sceneform.collision.Collider: void markWorldShapeDirty()
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder format(com.google.android.filament.Texture$InternalFormat)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.filament.android.UiHelper: void detach()
com.google.ar.schemas.sceneform.LightingDef: void startCubeLevelsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int vertexDataLength()
com.google.ar.sceneform.resources.SharedReference: SharedReference()
com.google.android.filament.TransformManager: void nGetTransform(long,int,float[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.google.ar.core.HitResult: com.google.ar.core.Anchor createAnchor()
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus[] values()
com.google.ar.sceneform.rendering.Renderer: void removeModelInstanceInternal(com.google.ar.sceneform.rendering.RenderableInstance)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: java.lang.String source()
com.google.flatbuffers.FlatBufferBuilder: int createString(java.nio.ByteBuffer)
com.google.ar.sceneform.utilities.LoadHelper: java.util.concurrent.Callable androidResourceUriToInputStreamCreator(android.content.Context,android.net.Uri)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.google.android.filament.LightManager: float getIntensity(int)
com.google.android.filament.VertexBuffer$QuatType: VertexBuffer$QuatType(java.lang.String,int)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: com.google.ar.schemas.lull.ModelPipelineRenderableDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Earth: int nativeGetEarthState(long,long)
com.google.android.filament.Camera: void nLookAt(long,double,double,double,double,double,double,double,double,double)
com.google.ar.sceneform.math.QuaternionEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com.google.android.filament.IndexBuffer: int nGetIndexCount(long)
com.google.ar.sceneform.rendering.MaterialParameters: void setTexture(java.lang.String,com.google.ar.sceneform.rendering.Texture)
com.google.ar.sceneform.ux.AugmentedFaceNode: java.lang.Boolean lambda$onActivate$0(com.google.ar.sceneform.rendering.ModelRenderable,java.lang.Throwable)
com.google.ar.schemas.sceneform.SamplerDef: java.nio.ByteBuffer dataAsByteBuffer()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelDef: ModelDef()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.google.android.filament.Stream: int nReadPixels(long,long,int,int,int,int,java.nio.Buffer,int,int,int,int,int,int,int,java.lang.Object,java.lang.Runnable)
com.google.ar.core.Config: int nativeGetGeospatialMode(long,long,long)
com.google.ar.sceneform.lullmodel.ArcDef: com.google.ar.sceneform.lullmodel.ArcDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.ArImage: int nativeGetRowStride(long,long,int)
com.google.ar.sceneform.collision.CollisionShape: void transform(com.google.ar.sceneform.common.TransformProvider,com.google.ar.sceneform.collision.CollisionShape)
com.google.ar.sceneform.rendering.Texture$Builder: Texture$Builder(com.google.ar.sceneform.rendering.Texture$1)
com.google.android.filament.NativeSurface: long nCreateSurface(int,int)
androidx.fragment.app.Fragment: void performStart()
com.google.ar.core.Camera: com.google.ar.core.Pose nativeDisplayOrientedPose(long,long)
com.google.ar.sceneform.lullmodel.Quat: int createQuat(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.ar.core.Pose: float[] getTranslation()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
com.google.ar.core.TrackableBase: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.ar.core.dependencies.j: void c(android.os.Bundle)
com.google.ar.core.Plane$Type: Plane$Type(java.lang.String,int,int)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int createRenderablesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.DataVec3: int endDataVec3(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.ar.schemas.sceneform.MaterialDef: com.google.ar.schemas.sceneform.ParameterDef parameters(int)
androidx.fragment.app.Fragment: int getTargetRequestCode()
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder spotLightCone(float,float)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.core.Config: com.google.ar.core.Config setAugmentedFaceMode(com.google.ar.core.Config$AugmentedFaceMode)
com.google.ar.schemas.lull.SkeletonDef: int createBoneParentsVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.schemas.sceneform.Vec3Init: int createVec3Init(com.google.flatbuffers.FlatBufferBuilder,float,float,float)
com.google.ar.sceneform.lullmodel.Recti: int h()
com.google.android.filament.RenderableManager: void nSetPriority(long,int,int)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: com.google.flatbuffers.Table value(com.google.flatbuffers.Table)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.google.android.filament.LightManager: void nBuilderFalloff(long,float)
com.google.android.filament.IndexBuffer: IndexBuffer(long)
com.google.android.filament.IndirectLight: void access$800(long)
com.google.ar.sceneform.FrameTime: float getStartSeconds()
com.google.ar.sceneform.ux.BaseArFragment$OnTapArPlaneListener: void onTapPlane(com.google.ar.core.HitResult,com.google.ar.core.Plane,android.view.MotionEvent)
com.google.ar.core.SharedCamera: void onDeviceDisconnected(android.hardware.camera2.CameraDevice)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: void addType(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.android.UiHelper$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.google.ar.sceneform.rendering.ShapeFactory: com.google.ar.sceneform.rendering.ModelRenderable makeSphere(float,com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.rendering.Material)
com.google.ar.schemas.lull.DataBytes: int value(int)
com.google.android.filament.Material: com.google.android.filament.Material$CullingMode getCullingMode()
com.google.ar.sceneform.Camera: void setParent(com.google.ar.sceneform.NodeParent)
com.google.ar.sceneform.rendering.Renderable$Builder: Renderable$Builder()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: com.google.ar.schemas.sceneform.LightingCubeFaceDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.LightingDef: java.lang.String name()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.google.ar.schemas.lull.ModelInstanceDef: int indices32Length()
com.google.android.filament.LightManager: float[] getColor(int,float[])
com.google.ar.sceneform.rendering.Renderable: java.util.ArrayList getMaterialNames()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.ar.schemas.lull.DataVec3: int endDataVec3(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.LightProbe: LightProbe(com.google.ar.sceneform.rendering.LightProbe$Builder)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
com.google.ar.core.AugmentedFace$RegionType: com.google.ar.core.AugmentedFace$RegionType[] values()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
com.google.ar.schemas.lull.MaterialDef: int createMaterialDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: RenderableDefinition$Submesh$Builder()
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: MovingAverageMillisecondsTracker(com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker$Clock,double)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: com.google.ar.schemas.sceneform.CompiledMaterialDeclDef getRootAsCompiledMaterialDeclDef(java.nio.ByteBuffer)
com.google.ar.core.CameraConfig$DepthSensorUsage: com.google.ar.core.CameraConfig$DepthSensorUsage forNumber(int)
com.google.ar.schemas.sceneform.TransformDef: TransformDef()
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Vector3 getExtents()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyMaterialInstance(com.google.android.filament.MaterialInstance)
com.google.ar.sceneform.rendering.LightInstance: void finalize()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.ar.sceneform.ux.TransformationSystem: void onTouch(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.resources.ResourceHolder: long reclaimReleasedResources()
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 one()
com.google.ar.schemas.lull.KeyVariantPairDef: void addKey(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.google.android.filament.Engine: com.google.android.filament.RenderableManager getRenderableManager()
androidx.fragment.app.Fragment: void onPause()
com.google.ar.schemas.sceneform.IntVec4Init: int z()
com.google.ar.core.SharedCamera: void -$$Nest$monDeviceDisconnected(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraDevice)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 localToWorldDirection(com.google.ar.sceneform.math.Vector3)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.filament.RenderTarget: RenderTarget(long,com.google.android.filament.RenderTarget$Builder,com.google.android.filament.RenderTarget$1)
com.google.ar.core.Pose: float[] getYAxis()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: int createMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: RenderableDefinition$Submesh(com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,com.google.android.filament.MaterialInstance$IntElement,int[],int,int)
com.google.ar.schemas.lull.TextureDef: void addGenerateMipmaps(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.Node$LifecycleListener: void onUpdated(com.google.ar.sceneform.Node,com.google.ar.sceneform.FrameTime)
com.google.android.filament.IndirectLight$Builder: IndirectLight$Builder()
com.google.android.filament.MaterialInstance: void nSetParameterInt(long,java.lang.String,int)
com.google.android.filament.RenderTarget: long nBuilderMipLevel(long,int,int)
com.google.ar.schemas.lull.Rect: float y()
com.google.ar.schemas.sceneform.MaterialDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.TextureDef: void addMagFilter(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Engine: void destroyMaterialInstance(com.google.android.filament.MaterialInstance)
com.google.ar.core.Plane: float nativeGetExtentX(long,long)
com.google.ar.sceneform.rendering.LullModel: boolean isLullModel(java.nio.ByteBuffer)
com.google.android.filament.Material$Parameter: Material$Parameter(java.lang.String,com.google.android.filament.Material$Parameter$Type,com.google.android.filament.Material$Parameter$Precision,int)
androidx.fragment.app.Fragment: Fragment()
com.google.ar.sceneform.resources.ResourceRegistry: void register(java.lang.Object,java.util.concurrent.CompletableFuture)
com.google.ar.sceneform.utilities.SceneformBufferUtils: java.nio.ByteBuffer readStream(java.io.InputStream)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.google.android.filament.TextureSampler: void setWrapModeS(com.google.android.filament.TextureSampler$WrapMode)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.google.ar.core.Config: com.google.ar.core.Config$PlaneFindingMode getPlaneFindingMode()
com.google.ar.core.AugmentedImage: float getExtentX()
com.google.ar.core.Frame: java.util.List hitTest(android.view.MotionEvent)
com.google.ar.sceneform.lullmodel.BlendShape: void startTangentIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.BaseGesture: float pixelsToInches(float)
com.google.ar.sceneform.Camera: void setWorldPosition(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.rendering.LightInstance: LightInstance(com.google.ar.sceneform.rendering.Light,com.google.ar.sceneform.common.TransformProvider)
com.google.android.filament.View$ToneMapping: View$ToneMapping(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.google.android.filament.IndirectLight: void nDestroyBuilder(long)
com.google.ar.core.dependencies.c: android.os.Parcel a()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
com.google.android.filament.EntityManager: int[] create(int[])
com.google.android.filament.Engine: void nDestroyIndexBuffer(long,long)
com.google.android.filament.Engine: com.google.android.filament.LightManager getLightManager()
com.google.ar.sceneform.lullmodel.VariantMapDef: void addValues(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Engine: void destroyTexture(com.google.android.filament.Texture)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: void checkPreconditions()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.google.ar.core.Session: void nativeRequestModuleInstallDeferred(long,int[])
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.ar.core.AugmentedImage: java.lang.String getName()
com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter valueOf(java.lang.String)
com.google.ar.schemas.sceneform.SamplerCompareFunc: java.lang.String name(int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.google.ar.sceneform.ux.BaseGesture: void onCancel()
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Vertex$Builder setPosition(com.google.ar.sceneform.math.Vector3)
com.google.flatbuffers.FlatBufferBuilder: void addByte(byte)
com.google.ar.schemas.lull.DataHashValue: int endDataHashValue(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.DoubleVec3Init: double x()
com.google.android.filament.Texture$CubemapFace: Texture$CubemapFace(java.lang.String,int)
com.google.ar.core.ArCoreApkJniAdapter: int checkAvailability(android.content.Context)
com.google.ar.sceneform.ArSceneView: void updateNormalLightEstimate(com.google.ar.core.LightEstimate)
com.google.ar.schemas.lull.VariantArrayDef: void startValuesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.MaterialDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.VariantArrayDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.VertexBuffer: void nBuilderAttribute(long,int,int,int,int,int)
com.google.ar.core.exceptions.SessionUnsupportedException: SessionUnsupportedException(java.lang.String)
com.google.ar.schemas.sceneform.ExternalSamplerInit: com.google.ar.schemas.sceneform.ExternalSamplerInit getRootAsExternalSamplerInit(java.nio.ByteBuffer)
com.google.ar.core.Earth: int nativeGetTrackingState(long,long)
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.math.Matrix getRelativeTransform()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.google.ar.sceneform.Scene: com.google.ar.sceneform.HitTestResult hitTest(android.view.MotionEvent)
com.google.ar.sceneform.rendering.Light: void setIntensity(float)
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.rendering.SkeletonRig getSkeletonRig()
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
com.google.ar.sceneform.rendering.ModelRenderable$Builder: java.lang.Boolean hasSource()
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material$Builder setSource(java.util.concurrent.Callable)
com.google.ar.schemas.sceneform.SamplerDef: java.nio.ByteBuffer dataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.af: com.google.ar.core.af[] values()
androidx.fragment.app.Fragment: void onDetach()
com.google.ar.schemas.lull.VariantArrayDef: com.google.ar.schemas.lull.VariantArrayDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.Rect: Rect()
com.google.ar.core.ImageMetadata: float getFloat(int)
com.google.ar.schemas.sceneform.SceneformBundleDef: void startSamplersVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.ar.sceneform.lullmodel.MaterialDef: int createMaterialDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.lullmodel.Mat4x3: com.google.ar.sceneform.lullmodel.Mat4x3 __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineDef: int renderablesLength()
com.google.ar.sceneform.ux.GesturePointersUtility: com.google.ar.sceneform.math.Vector3 motionEventToPosition(android.view.MotionEvent,int)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.core.AugmentedImage: int hashCode()
com.google.android.filament.Renderer: void nRender(long,long)
com.google.ar.core.GeospatialPose: double nativeGetHeadingAccuracy(long,long)
com.google.ar.sceneform.lullmodel.ModelIndexRange: ModelIndexRange()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer vertexIndices16AsByteBuffer()
com.google.ar.schemas.sceneform.ParameterDef: java.nio.ByteBuffer idInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.AnimationData: java.lang.String getName()
com.google.ar.sceneform.lullmodel.VariantMapDef: com.google.ar.sceneform.lullmodel.VariantMapDef getRootAsVariantMapDef(java.nio.ByteBuffer)
com.google.android.filament.RenderTarget: int nGetMipLevel(long,int)
com.google.ar.core.Frame: long[] nativeHitTestInstantPlacement(long,long,float,float,float)
com.google.ar.core.Frame: void nativeGetLightEstimate(long,long,long)
com.google.ar.sceneform.ux.BaseGesture: com.google.ar.sceneform.Node getTargetNode()
com.google.ar.core.Frame: long nativeAcquireDepthImage16Bits(long,long)
com.google.ar.sceneform.ux.AugmentedFaceNode: void onActivate()
com.google.android.filament.RenderableManager: void nSetCastShadows(long,int,boolean)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.google.ar.schemas.sceneform.AnimationDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void addTextures(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.filament.MaterialInstance: void nSetParameterFloat4(long,java.lang.String,float,float,float,float)
com.google.ar.sceneform.lullmodel.DataQuat: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.CameraConfig: android.util.Range getFpsRange()
com.google.android.filament.android.UiHelper$2: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
com.google.android.filament.TransformManager: void nGetWorldTransform(long,int,float[])
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters makeDefault()
com.google.ar.core.InstantPlacementPoint: boolean equals(java.lang.Object)
com.google.android.filament.RenderableManager: int getInstance(int)
com.google.ar.schemas.lull.SkeletonDef: void startBoneNamesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Session: void nativeDestroySessionWrapper(long)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.sceneform.lullmodel.DataFloat: void addValue(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.sceneform.Node: void setLocalRotation(com.google.ar.sceneform.math.Quaternion)
com.google.android.filament.View: void nSetRenderQuality(long,int)
androidx.fragment.app.Fragment: android.view.View requireView()
com.google.ar.schemas.sceneform.CompiledMaterialDef: void addCompressedMaterial(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Material$CullingMode: Material$CullingMode(java.lang.String,int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
com.google.ar.core.ImageMetadata: int nativeGetMetadataEntryValueCount(long,long)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Matrix getRawRotationMatrix()
com.google.ar.sceneform.rendering.AnimatorImpl: void setInterpolator(android.animation.TimeInterpolator)
com.google.android.filament.LightManager: void setIntensity(int,float)
com.google.android.filament.TextureSampler: int nSetMagFilter(int,int)
com.google.ar.core.Session: boolean isSupported(com.google.ar.core.Config)
com.google.ar.sceneform.lullmodel.DataInt: com.google.ar.sceneform.lullmodel.DataInt getRootAsDataInt(java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addCmPerUnit(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int createSourcesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.lull.DataString: java.nio.ByteBuffer valueInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.Fence$Type: Fence$Type(java.lang.String,int)
com.google.ar.core.SharedCamera: void -$$Nest$monCaptureSessionClosed(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession)
com.google.android.filament.android.UiHelper: UiHelper()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.ar.schemas.lull.TextureDef: int data(int)
com.google.ar.sceneform.collision.CollisionSystem: com.google.ar.sceneform.collision.Collider raycast(com.google.ar.sceneform.collision.Ray,com.google.ar.sceneform.collision.RayHit)
com.google.android.filament.Camera$Fov: com.google.android.filament.Camera$Fov[] values()
com.google.ar.schemas.sceneform.SamplerInit: java.lang.String path()
com.google.ar.core.CameraIntrinsics: void nativeDestroyCameraIntrinsics(long,long)
com.google.ar.core.Session: java.util.List getSupportedCameraConfigs()
com.google.ar.core.Session: boolean nativeIsSupported(long,long)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
com.google.ar.core.InstallActivity: void -$$Nest$mstartInstaller(com.google.ar.core.InstallActivity)
com.google.ar.sceneform.ux.TwistGesture: float calculateDeltaRotation(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.android.filament.android.UiHelper$2: UiHelper$2(com.google.android.filament.android.UiHelper)
com.google.ar.sceneform.lullmodel.BlendShape: int tangentIndices16Length()
com.google.ar.core.Anchor: com.google.ar.core.Anchor$CloudAnchorState getCloudAnchorState()
com.google.android.filament.MaterialInstance: void nSetParameterInt2(long,java.lang.String,int,int)
com.google.android.filament.Camera: void nSetProjectionFov(long,double,double,double,double,int)
com.google.ar.schemas.sceneform.BoolVec2Init: boolean x()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addMaterials(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode access$700(com.google.ar.sceneform.rendering.Texture$Sampler$Builder)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,boolean,boolean,boolean)
com.google.ar.core.Point$OrientationMode: com.google.ar.core.Point$OrientationMode forNumber(int)
com.google.ar.schemas.lull.MaterialDef: java.lang.String name()
com.google.android.filament.Asserts: float[] assertMat4f(float[])
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float getRelativeIntensity()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineDef getRootAsModelPipelineDef(java.nio.ByteBuffer)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
com.google.flatbuffers.FlatBufferBuilder: void putInt(int)
com.google.android.filament.Engine: void nDestroyRenderTarget(long,long)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.google.ar.sceneform.rendering.Material: void setInt3(java.lang.String,int,int,int)
com.google.ar.core.AugmentedImageDatabase: long nativeCreate(long)
com.google.ar.sceneform.rendering.TextureInternalData: TextureInternalData(com.google.android.filament.Texture,com.google.ar.sceneform.rendering.Texture$Sampler)
com.google.ar.sceneform.collision.CollisionSystem: com.google.ar.sceneform.collision.Collider intersects(com.google.ar.sceneform.collision.Collider)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.ar.schemas.lull.VariantArrayDefImpl: VariantArrayDefImpl()
com.google.android.filament.android.UiHelper$RendererCallback: void onResized(int,int)
com.google.android.filament.Engine: com.google.android.filament.Engine create(com.google.android.filament.Engine$Backend)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addLightingDefs(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.RenderableManager: void nSetGeometryAt(long,int,int,int,int,int)
com.google.ar.schemas.lull.Mat4x3: com.google.ar.schemas.lull.Vec4 c0(com.google.ar.schemas.lull.Vec4)
com.google.android.filament.Texture: void access$100(long,int)
androidx.fragment.app.Fragment: void postponeEnterTransition()
com.google.android.filament.VertexBuffer: VertexBuffer(long,com.google.android.filament.VertexBuffer$1)
com.google.ar.sceneform.Scene: com.google.ar.sceneform.rendering.LightProbe getLightProbe()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.filament.android.UiHelper: void createSwapChain(android.view.Surface)
com.google.ar.sceneform.ux.ScaleController: void onContinueTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.core.HitResult: HitResult()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.google.android.filament.Texture: void nBuilderUsage(long,int)
com.google.android.filament.View: com.google.android.filament.View$DepthPrepass getDepthPrepass()
com.google.android.filament.Renderer: Renderer(com.google.android.filament.Engine,long)
com.google.ar.sceneform.lullmodel.BlendShape: void startTangentIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.AnimationDef: int data(int)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: java.nio.ByteBuffer keyInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.SkeletonRig: void updateBoneTransforms()
com.google.ar.sceneform.rendering.Material: void setInt4(java.lang.String,int,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.ar.schemas.lull.SkeletonDef: com.google.ar.schemas.lull.SkeletonDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.ImageMetadata: android.util.Rational getRational(int)
com.google.android.filament.Texture: int nSetImageCubemapCompressed(long,long,int,java.nio.Buffer,int,int,int,int,int,int,int,int[],java.lang.Object,java.lang.Runnable)
com.google.ar.schemas.lull.BlendShape: int vertexIndices32Length()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.TransformManager getTransformManager()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.ar.schemas.lull.Rect: float w()
com.google.ar.sceneform.lullmodel.VertexAttribute: int type()
com.google.ar.schemas.sceneform.LightingDef: void addCubeLevels(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.DataVec2: com.google.ar.schemas.lull.Vec2 value()
com.google.ar.schemas.lull.VariantArrayDefImpl: com.google.ar.schemas.lull.VariantArrayDefImpl getRootAsVariantArrayDefImpl(java.nio.ByteBuffer)
com.google.ar.core.InstallActivity: void onCreate(android.os.Bundle)
com.google.ar.sceneform.lullmodel.Mat4x3: com.google.ar.sceneform.lullmodel.Vec4 c2(com.google.ar.sceneform.lullmodel.Vec4)
com.google.android.filament.View: void nSetFrontFaceWindingInverted(long,boolean)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.google.ar.core.ArImage: int nativeGetPixelStride(long,long,int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.Node findInHierarchy(java.util.function.Predicate)
com.google.ar.schemas.sceneform.BoolInit: BoolInit()
com.google.ar.sceneform.SkeletonNode: int getIndexForBoneName(java.lang.String)
com.google.android.filament.View: void setViewport(com.google.android.filament.Viewport)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.DataVec2: com.google.ar.sceneform.lullmodel.DataVec2 getRootAsDataVec2(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataVec2)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startBlendShapesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.IntVec3Init: com.google.ar.schemas.sceneform.IntVec3Init getRootAsIntVec3Init(java.nio.ByteBuffer)
com.google.ar.core.Track: void nativeDestroyTrack(long,long)
com.google.android.filament.View: void nSetAmbientOcclusionOptions(long,float,float,float,float)
com.google.ar.schemas.lull.VariantMapDef: VariantMapDef()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
com.google.ar.sceneform.R$attr: R$attr()
com.google.ar.schemas.lull.VariantArrayDef: com.google.ar.schemas.lull.VariantArrayDefImpl values(int)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: void addNameOverride(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer indices32InByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.R$anim: R$anim()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.MaterialDef materials(com.google.ar.schemas.sceneform.MaterialDef,int)
com.google.ar.core.ArCoreApk$Availability: boolean isTransient()
com.google.ar.schemas.sceneform.ExternalSamplerInit: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Scene: void setOnTouchListener(com.google.ar.sceneform.Scene$OnTouchListener)
com.google.ar.sceneform.ux.BaseArFragment: java.util.Set getSessionFeatures()
com.google.ar.schemas.sceneform.LightingCubeDef: com.google.ar.schemas.sceneform.LightingCubeFaceDef faces(int)
com.google.ar.core.Config$GeospatialMode: com.google.ar.core.Config$GeospatialMode[] values()
com.google.ar.sceneform.lullmodel.DataBool: com.google.ar.sceneform.lullmodel.DataBool getRootAsDataBool(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.ar.sceneform.rendering.SkeletonRig: int getBoneParentIndex(int)
com.google.ar.sceneform.lullmodel.BlendShape: int createVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.android.filament.IndirectLight: IndirectLight(long)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: int endModelPipelineRenderableDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.HitResult: int hashCode()
com.google.android.filament.RenderableManager: void destroy(int)
com.google.android.filament.Scene: void addEntity(int)
com.google.ar.sceneform.rendering.LightProbe: void lambda$finalize$0()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startBlendAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.DataFloat: void addValue(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.schemas.sceneform.Vec4Init: float z()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
com.google.ar.sceneform.lullmodel.Color: Color()
com.google.android.filament.Fence: int nWaitAndDestroy(long,int)
com.google.ar.schemas.lull.DataVec3: void startDataVec3(com.google.flatbuffers.FlatBufferBuilder)
kotlin.jvm.internal.Lambda: Lambda(int)
com.google.ar.core.Frame: long nativeAcquireRawDepthImage16Bits(long,long)
com.google.ar.schemas.sceneform.SamplerDef: java.nio.ByteBuffer fileAsByteBuffer()
com.google.ar.sceneform.rendering.Light$Builder: float access$800(com.google.ar.sceneform.rendering.Light$Builder)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
com.google.flatbuffers.FlatBufferBuilder: FlatBufferBuilder(int,com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory,java.nio.ByteBuffer,com.google.flatbuffers.Utf8)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.ar.schemas.sceneform.NullInit: NullInit()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.ar.sceneform.rendering.MaterialParameters: MaterialParameters()
com.google.ar.core.CameraConfigFilter: CameraConfigFilter()
com.google.ar.sceneform.rendering.LightInstance: boolean lightTypeRequiresDirection(com.google.ar.sceneform.rendering.Light$Type)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.ar.core.exceptions.CameraNotAvailableException: CameraNotAvailableException()
com.google.ar.schemas.lull.SkeletonDef: void startBoneParentsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.View: com.google.android.filament.View$DynamicResolutionOptions getDynamicResolutionOptions()
com.google.ar.sceneform.rendering.LightProbe: java.lang.String access$600()
com.google.ar.core.SharedCamera: void -$$Nest$monCaptureSessionConfigureFailed(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.lullmodel.DataQuat: int endDataQuat(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,float,float,float)
com.google.ar.sceneform.lullmodel.AabbDef: com.google.ar.sceneform.lullmodel.Vec3 min()
com.google.ar.sceneform.rendering.R$string: R$string()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.google.ar.core.SharedCamera: void -$$Nest$monCaptureSessionConfigured(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
com.google.ar.sceneform.ux.AugmentedFaceNode: void setFaceRegionsRenderable(com.google.ar.sceneform.rendering.ModelRenderable)
com.google.ar.sceneform.lullmodel.BlendShape: void addVertexIndices16(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.google.ar.sceneform.FrameTime: long getStartTime(java.util.concurrent.TimeUnit)
com.google.ar.sceneform.rendering.Light: void fireChangedListeners()
com.google.ar.core.AugmentedImage: com.google.ar.core.AugmentedImage$TrackingMethod getTrackingMethod()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.SceneformBundleDef getRootAsSceneformBundleDef(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.TransformDef: com.google.ar.schemas.lull.Vec3 offset()
com.google.ar.sceneform.rendering.Renderable: void prepareForDraw()
com.google.ar.core.CameraConfig: com.google.ar.core.CameraConfig$DepthSensorUsage getDepthSensorUsage()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material lambda$build$2(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.BoolVec3Init: boolean z()
com.google.ar.schemas.sceneform.CompiledMaterialDef: int createCompiledMaterialVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.math.Quaternion: boolean equals(java.lang.Object)
com.google.android.filament.Camera: void setProjection(double,double,double,double,com.google.android.filament.Camera$Fov)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.window.core.Bounds: int getLeft()
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.google.ar.sceneform.rendering.Color: Color(float,float,float)
com.google.android.filament.View: void setRenderTarget(com.google.android.filament.RenderTarget)
com.google.android.filament.LightManager: float nGetSunHaloSize(long,int)
com.google.ar.schemas.sceneform.CubemapSamplerInit: void startCubemapSamplerInit(com.google.flatbuffers.FlatBufferBuilder)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.ar.sceneform.lullmodel.VariantMapDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight$Builder rotation(float[])
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,boolean,boolean,boolean,boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.google.ar.sceneform.rendering.Material: void setFloat4(java.lang.String,float,float,float,float)
com.google.ar.schemas.sceneform.TransformDef: int endTransformDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: java.nio.ByteBuffer fileAsByteBuffer()
com.google.android.filament.View: void setSampleCount(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.filament.android.UiHelper$ContextErrorPolicy: com.google.android.filament.android.UiHelper$ContextErrorPolicy valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: java.lang.String source()
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
com.google.ar.core.Session: void nativeSetCameraTextureNames(long,int[])
com.google.android.filament.Skybox: long nBuilderBuild(long,long)
androidx.fragment.app.Fragment: java.lang.String toString()
com.google.android.filament.Texture: void setImage(com.google.android.filament.Engine,int,int,int,int,int,com.google.android.filament.Texture$PixelBufferDescriptor)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,int)
com.google.ar.core.Frame: com.google.ar.core.Camera getCamera()
com.google.ar.core.Frame: android.media.Image acquireDepthImage()
com.google.ar.schemas.lull.ModelPipelineMaterialDef: int endModelPipelineMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.AugmentedImageDatabase: AugmentedImageDatabase(com.google.ar.core.Session,long)
com.google.ar.sceneform.lullmodel.BlendShape: long name()
com.google.ar.sceneform.SceneView: void onLayout(boolean,int,int,int,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int indices32Length()
com.google.ar.core.Pose: com.google.ar.core.Pose extractRotation()
com.google.android.filament.Colors: float[] cct(float)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Quaternion getWorldRotation()
com.google.android.filament.Texture: Texture(long)
com.google.ar.schemas.lull.VariantMapDef: com.google.ar.schemas.lull.VariantMapDef getRootAsVariantMapDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.VariantMapDef)
com.google.ar.sceneform.lullmodel.TextureDef: com.google.ar.sceneform.lullmodel.TextureDef getRootAsTextureDef(java.nio.ByteBuffer)
com.google.ar.sceneform.resources.SharedReference: void onDispose()
com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory: java.nio.ByteBuffer newByteBuffer(int)
com.google.ar.core.Config$GeospatialMode: com.google.ar.core.Config$GeospatialMode[] $values()
com.google.ar.sceneform.rendering.Material: void setFloat3(java.lang.String,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.lull.Vec4: float w()
com.google.android.filament.RenderableManager: void access$700(long,int,int)
com.google.ar.sceneform.math.Vector3: void set(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.Sun: void setupDefaultLighting(com.google.ar.sceneform.SceneView)
com.google.ar.core.exceptions.GooglePlayServicesLocationLibraryNotLinkedException: GooglePlayServicesLocationLibraryNotLinkedException(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.collision.CollisionShape transform(com.google.ar.sceneform.common.TransformProvider)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.ar.core.Anchor$TerrainAnchorState: boolean isError()
com.google.android.filament.Texture: int nGetLevels(long)
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer tangentIndices16AsByteBuffer()
com.google.ar.schemas.sceneform.AnimationDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Stream: long getTimestamp()
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setSampler(com.google.ar.sceneform.rendering.Texture$Sampler)
com.google.android.filament.Stream: long access$000()
com.google.ar.core.Config: com.google.ar.core.Config setAugmentedImageDatabase(com.google.ar.core.AugmentedImageDatabase)
com.google.ar.schemas.sceneform.MaterialDef: void startParametersVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setRegistryId(java.lang.Object)
com.google.android.filament.Asserts: void assertMat4dIn(double[])
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.google.ar.sceneform.TouchEventSystem: int getPointerIdBits(android.view.MotionEvent)
com.google.ar.sceneform.lullmodel.OptionalBool: java.lang.String name(int)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.ar.schemas.lull.VariantArrayDef: com.google.ar.schemas.lull.VariantArrayDef getRootAsVariantArrayDef(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.BaseArFragment: boolean isArRequired()
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer vertexDataInByteBuffer(java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder: void notNested()
com.google.ar.sceneform.lullmodel.Recti: int y()
com.google.ar.sceneform.lullmodel.VariantMapDef: com.google.ar.sceneform.lullmodel.VariantMapDef getRootAsVariantMapDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.VariantMapDef)
com.google.ar.core.Session: void pauseSharedCameraIfInUse()
com.google.ar.sceneform.rendering.Texture$Sampler: Texture$Sampler(com.google.ar.sceneform.rendering.Texture$Sampler$Builder,com.google.ar.sceneform.rendering.Texture$1)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.google.ar.schemas.lull.Mat4x3: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.Quat: com.google.ar.schemas.lull.Quat __assign(int,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.fragment.app.Fragment: void onStart()
com.google.ar.schemas.lull.BlendShape: void startVertexIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.SkeletonRig: java.lang.String getBoneName(int)
com.google.android.filament.Camera: void nSetLensProjection(long,double,double,double)
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource$RecenterMode access$400(com.google.ar.sceneform.assets.RenderableSource$Builder)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,boolean,boolean)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: java.lang.String targetMeshes(int)
com.google.ar.sceneform.Sun: void setLightEstimate(com.google.ar.sceneform.rendering.Color,float)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,com.google.android.filament.Colors$RgbType,float,float,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.google.flatbuffers.FlatBufferBuilder: int createByteVector(byte[])
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: void startModelPipelineMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: RenderableDefinition$Submesh(com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder,com.google.ar.sceneform.rendering.RenderableDefinition$1)
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer vertexDataInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.Renderer: boolean nBeginFrame(long,long)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.google.ar.sceneform.ArSceneView: void captureLightingValues(java.util.function.Consumer)
com.google.ar.sceneform.SceneView: void destroy()
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.math.Vector3 access$400(com.google.ar.sceneform.rendering.Light$Builder)
com.google.ar.sceneform.ux.BaseArFragment: void onDestroy()
com.google.ar.sceneform.lullmodel.TextureDef: java.lang.String file()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.ar.sceneform.rendering.Texture$Usage: com.google.ar.sceneform.rendering.Texture$Usage[] values()
com.google.ar.schemas.sceneform.LightingDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.CompiledMaterialDef: int compiledMaterial(int)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
com.google.ar.core.Session: void nativeSetPlaybackDataset(long,java.lang.String)
com.google.ar.sceneform.ux.DragGestureRecognizer: DragGestureRecognizer(com.google.ar.sceneform.ux.GesturePointersUtility)
com.google.ar.sceneform.lullmodel.ModelDef: void startModelDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.IEngine: void destroyMaterial(com.google.android.filament.Material)
com.google.ar.sceneform.ux.BaseTransformableNode: void addTransformationController(com.google.ar.sceneform.ux.BaseTransformationController)
com.google.android.filament.Material: com.google.android.filament.Material$BlendingMode getBlendingMode()
com.google.ar.core.ImageMetadata: double[] nativeGetDoubleArrayFromMetadataEntry(long,long)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: int materialsLength()
com.google.android.filament.IndexBuffer$Builder: com.google.android.filament.IndexBuffer$Builder indexCount(int)
com.google.android.filament.Camera: void nGetUpVector(long,float[])
com.google.ar.sceneform.AnchorNode: com.google.ar.core.Anchor getAnchor()
com.google.ar.sceneform.rendering.PlaneRenderer: PlaneRenderer(com.google.ar.sceneform.rendering.Renderer)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.ar.schemas.lull.ModelInstanceDef: void addBlendShapes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: ModelPipelineSkeletonDef()
com.google.ar.schemas.sceneform.NullInit: com.google.ar.schemas.sceneform.NullInit getRootAsNullInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.NullInit)
com.google.ar.core.ArCoreApk$InstallBehavior: com.google.ar.core.ArCoreApk$InstallBehavior forNumber(int)
com.google.ar.schemas.lull.ModelPipelineImportDef: float smoothingAngle()
com.google.ar.sceneform.Scene: Scene(com.google.ar.sceneform.SceneView)
com.google.ar.schemas.sceneform.BoolInit: com.google.ar.schemas.sceneform.BoolInit getRootAsBoolInit(java.nio.ByteBuffer)
com.google.ar.core.AugmentedFace: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.ar.core.AugmentedImageDatabase: int addImage(java.lang.String,android.graphics.Bitmap)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder sampler(com.google.android.filament.Texture$Sampler)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createShaderToMeshBonesVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.rendering.LullModel: int getByteCountPerVertex(com.google.ar.schemas.lull.ModelInstanceDef)
com.google.ar.sceneform.ux.BaseGesture: boolean canStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.schemas.sceneform.SceneformBundleDef: SceneformBundleDef()
com.google.ar.sceneform.Node: void refreshCollider()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.android.filament.Fence$Mode: com.google.android.filament.Fence$Mode valueOf(java.lang.String)
com.google.ar.schemas.lull.TextureDef: java.nio.ByteBuffer fileAsByteBuffer()
com.google.android.filament.LightManager$Builder: void build(com.google.android.filament.Engine,int)
com.google.ar.sceneform.collision.Collider: boolean doesCachedWorldShapeNeedUpdate()
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
com.google.android.filament.View: void nSetViewport(long,int,int,int,int)
com.google.ar.core.Session: void nativeRequestModuleInstallImmediate(long,int[])
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: void addSource(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.google.ar.sceneform.ux.ArFragment: java.lang.String[] getAdditionalPermissions()
com.google.ar.schemas.lull.Vec3: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.AnimatorImpl: int getRepeatCount()
com.google.android.filament.android.TextureHelper: TextureHelper()
com.google.ar.sceneform.rendering.Texture: java.lang.String access$200()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.android.filament.LightManager: void nGetPosition(long,int,float[])
com.google.ar.schemas.lull.BlendShape: void addVertexIndices16(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.TextureDef textures(com.google.ar.schemas.lull.TextureDef,int)
com.google.ar.sceneform.rendering.Renderer: void setDynamicResolutionEnabled(boolean)
com.google.ar.schemas.lull.ModelPipelineImportDef: boolean reportErrorsToStdout()
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.google.ar.schemas.lull.ModelInstanceDef: int blendAttributesLength()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.filament.Engine: void destroyScene(com.google.android.filament.Scene)
com.google.ar.sceneform.NodeParent: com.google.ar.sceneform.Node findByName(java.lang.String)
com.google.ar.core.CameraConfigFilter: java.util.EnumSet getDepthSensorUsage()
com.google.android.filament.Camera: void setProjection(com.google.android.filament.Camera$Projection,double,double,double,double,double,double)
com.google.ar.schemas.sceneform.ScalarInit: float value()
com.google.ar.schemas.lull.DataInt: com.google.ar.schemas.lull.DataInt getRootAsDataInt(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Vertex: void setUvCoordinate(com.google.ar.sceneform.rendering.Vertex$UvCoordinate)
com.google.ar.sceneform.lullmodel.Color: float a()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.exceptions.MetadataNotFoundException: MetadataNotFoundException(java.lang.String)
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda3: SharedCamera$1$$ExternalSyntheticLambda3(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice)
com.google.ar.core.Session: com.google.ar.core.Session createForSharedCamera(android.content.Context)
com.google.ar.schemas.lull.OptionalBool: OptionalBool()
com.google.ar.schemas.lull.ModelInstanceDef: int vertexData(int)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: java.nio.ByteBuffer nameOverrideAsByteBuffer()
com.google.ar.sceneform.lullmodel.DataBytes: com.google.ar.sceneform.lullmodel.DataBytes __assign(int,java.nio.ByteBuffer)
com.google.android.filament.TextureSampler: int nSetMinFilter(int,int)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,boolean)
com.google.ar.core.ImageMetadata: void nativeDestroyMetadataEntry(long,long)
com.google.ar.schemas.lull.VertexAttribute: int createVertexAttribute(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.sceneform.rendering.LightProbe$Builder: float access$100(com.google.ar.sceneform.rendering.LightProbe$Builder)
com.google.ar.schemas.lull.BlendShape: void addVertexIndices32(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.BlendShape: void addTangentIndices16(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.ar.schemas.lull.ModelInstanceDef: void addInterleaved(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.android.filament.RenderableManager: void nBuilderSkinning(long,int)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,com.google.android.filament.Colors$RgbaType,float,float,float,float)
com.google.ar.core.CameraConfig: android.util.Size getImageSize()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.android.filament.LightManager: void nSetPosition(long,int,float,float,float)
com.google.ar.core.InstallActivity: void onResume()
com.google.ar.sceneform.rendering.AnimatorImpl: void resume()
com.google.android.filament.Colors: float[] toLinear(com.google.android.filament.Colors$RgbaType,float[])
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getBack()
com.google.ar.core.Config$FocusMode: com.google.ar.core.Config$FocusMode[] values()
com.google.ar.schemas.lull.MaterialTextureDef: void startMaterialTextureDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.PinchGesture: PinchGesture(com.google.ar.sceneform.ux.GesturePointersUtility,android.view.MotionEvent,int)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
com.google.ar.schemas.sceneform.CompiledMaterialDef: void addCompiledMaterial(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.exceptions.UnavailableSdkTooOldException: UnavailableSdkTooOldException(java.lang.String)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Matrix getLocalModelMatrixInternal()
com.google.ar.sceneform.Scene: com.google.ar.sceneform.Node overlapTest(com.google.ar.sceneform.Node)
com.google.flatbuffers.FlatBufferBuilder: FlatBufferBuilder()
com.google.ar.sceneform.rendering.IEngine: void destroyIndexBuffer(com.google.android.filament.IndexBuffer)
com.google.android.filament.Camera: float nGetAperture(long)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
com.google.ar.sceneform.ux.BaseTransformationController: void onContinueTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.sceneform.rendering.Texture$Builder: java.util.concurrent.CompletableFuture makeBitmap(java.util.concurrent.Callable,boolean)
com.google.ar.schemas.sceneform.DoubleInit: void addValue(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.android.filament.IndirectLight: void nRotation(long,float,float,float,float,float,float,float,float,float)
com.google.ar.schemas.lull.SubmeshAabb: com.google.ar.schemas.lull.Vec3 maxPosition()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
com.google.android.filament.RenderableManager: int nBuilderSkinningBones(long,int,java.nio.Buffer,int)
com.google.android.filament.Texture: long nCreateBuilder()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.ar.schemas.sceneform.LightingCubeFaceDef: int data(int)
com.google.ar.schemas.lull.VertexAttribute: int type()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.ar.core.TrackData: long getFrameTimestamp()
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Color access$600(com.google.ar.sceneform.rendering.Light$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: com.google.ar.sceneform.lullmodel.VariantArrayDefImpl getRootAsVariantArrayDefImpl(java.nio.ByteBuffer)
com.google.ar.schemas.lull.SkeletonDef: int createBoneNamesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.ModelDef: int createTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.rendering.ModelRenderable getModelRenderable()
com.google.ar.sceneform.collision.Box: Box(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.ux.BaseTransformationController: void onUpdated(com.google.ar.sceneform.ux.BaseGesture)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
com.google.ar.sceneform.lullmodel.MaterialDef: com.google.ar.sceneform.lullmodel.VariantMapDef properties(com.google.ar.sceneform.lullmodel.VariantMapDef)
com.google.ar.schemas.lull.DataBool: com.google.ar.schemas.lull.DataBool __assign(int,java.nio.ByteBuffer)
com.google.android.filament.VertexBuffer: long access$500(long,long)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.google.ar.core.Camera: void nativeGetProjectionMatrix(long,long,float[],int,float,float)
com.google.android.filament.View: boolean isFrontFaceWindingInverted()
com.google.android.filament.Texture: boolean isTextureFormatSupported(com.google.android.filament.Engine,com.google.android.filament.Texture$InternalFormat)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.google.ar.schemas.sceneform.RuntimeAssetDef: int renderPriority()
com.google.ar.core.CameraConfig$FacingDirection: com.google.ar.core.CameraConfig$FacingDirection[] $values()
com.google.android.filament.LightManager: void nDestroyBuilder(long)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.ar.sceneform.ux.TranslationController: void onContinueTransformation(com.google.ar.sceneform.ux.BaseGesture)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.google.android.filament.Fence$Type: com.google.android.filament.Fence$Type valueOf(java.lang.String)
com.google.ar.sceneform.rendering.Material: void setInt(java.lang.String,int)
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.ar.core.CameraIntrinsics: float[] getFocalLength()
com.google.ar.sceneform.rendering.SkeletonRig: java.nio.FloatBuffer getMaterialBoneTransformsBuffer()
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.ModelRenderable$Builder getSelf()
com.google.ar.schemas.lull.Quat: float y()
com.google.ar.schemas.lull.MaterialDef: com.google.ar.schemas.lull.MaterialTextureDef textures(com.google.ar.schemas.lull.MaterialTextureDef,int)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
com.google.ar.core.Pose: void getTransformedAxis(int,float,float[],int)
com.google.flatbuffers.Table: int compareStrings(int,byte[],java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Renderer: void clearNativeObject()
com.google.ar.schemas.sceneform.ParameterDef: com.google.ar.schemas.sceneform.ParameterInitDef initialValue(com.google.ar.schemas.sceneform.ParameterInitDef)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.schemas.lull.LayoutHorizontalAlignment: java.lang.String name(int)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
com.google.ar.core.exceptions.ResourceExhaustedException: ResourceExhaustedException(java.lang.String)
com.google.ar.sceneform.lullmodel.BlendShape: int vertexData(int)
com.google.android.filament.Camera: float getNear()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.google.ar.schemas.lull.BlendShape: void startTangentDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.google.ar.sceneform.rendering.AnimatorImpl: com.google.ar.sceneform.rendering.SkeletonRig getTargetSkeletonRig()
com.google.ar.sceneform.ux.BaseGesture: float inchesToPixels(float)
com.google.ar.sceneform.ux.R$id: R$id()
com.google.ar.sceneform.ux.TranslationController: void onUpdated(com.google.ar.sceneform.Node,com.google.ar.sceneform.FrameTime)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.android.filament.VertexBuffer$QuatTangentContext: VertexBuffer$QuatTangentContext()
com.google.ar.sceneform.lullmodel.DataQuat: void startDataQuat(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.android.filament.Scene: void nSetSkybox(long,long)
com.google.ar.schemas.lull.DeviceType: java.lang.String name(int)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.AabbDef boundingBox(com.google.ar.sceneform.lullmodel.AabbDef)
com.google.ar.schemas.sceneform.Vec3Init: int endVec3Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.Vec2i: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.DepthPoint: java.util.Collection getAnchors()
androidx.fragment.app.Fragment: void performPause()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
com.google.ar.schemas.lull.DataString: com.google.ar.schemas.lull.DataString getRootAsDataString(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: double getAverage()
com.google.ar.sceneform.lullmodel.DataVec3: void startDataVec3(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,int,int,int,int)
com.google.android.filament.Engine: void destroySkybox(com.google.android.filament.Skybox)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
com.google.android.filament.IndexBuffer: long getNativeObject()
com.google.ar.sceneform.SceneView: void doFrame(long)
com.google.ar.sceneform.lullmodel.VariantMapDef: int createValuesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.Color: com.google.ar.sceneform.lullmodel.Color __assign(int,java.nio.ByteBuffer)
com.google.android.filament.MaterialInstance$IntElement: com.google.android.filament.MaterialInstance$IntElement[] values()
com.google.ar.sceneform.ux.ScaleController: void setElasticity(float)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
com.google.ar.schemas.lull.KeyVariantPairDef: byte valueType()
com.google.ar.sceneform.lullmodel.DataVec4: DataVec4()
com.google.ar.core.Session: int nativeSetCameraConfig(long,long)
com.google.ar.sceneform.lullmodel.VertexAttributeType: java.lang.String name(int)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.google.ar.sceneform.Scene: void lambda$overlapTestAll$2$Scene(java.util.ArrayList,com.google.ar.sceneform.collision.Collider)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
com.google.ar.sceneform.lullmodel.BlendShape: void addVertexIndices32(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.MaterialInstance: void nSetParameterTexture(long,java.lang.String,long,int)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: java.lang.String getName()
com.google.ar.core.AugmentedFace$RegionType: AugmentedFace$RegionType(java.lang.String,int,int)
com.google.ar.schemas.sceneform.ParameterInitDef: int createParameterInitDef(com.google.flatbuffers.FlatBufferBuilder,byte,int)
com.google.ar.core.LightEstimate: int nativeGetState(long,long)
com.google.ar.core.CameraConfig$DepthSensorUsage: com.google.ar.core.CameraConfig$DepthSensorUsage[] $values()
com.google.ar.schemas.sceneform.SamplerParamsDef: int wrapS()
com.google.ar.sceneform.lullmodel.SubmeshAabb: com.google.ar.sceneform.lullmodel.Vec3 minPosition()
com.google.android.filament.RenderableManager: void setCastShadows(int,boolean)
com.google.android.filament.Stream: void nBuilderWidth(long,int)
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: com.google.ar.schemas.lull.ModelPipelineSkeletonDef getRootAsModelPipelineSkeletonDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelPipelineSkeletonDef)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry getExternalTextureCleanupRegistry()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addAabbs(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.IndexBuffer$Builder$IndexType: IndexBuffer$Builder$IndexType(java.lang.String,int)
com.google.ar.sceneform.lullmodel.ArcDef: float startAngle()
com.google.ar.core.Config: int nativeGetDepthMode(long,long)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: int createModelPipelineRenderableDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.ux.BaseArFragment: java.lang.String[] getAdditionalPermissions()
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda0: void run()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.android.filament.Fence: int nWait(long,int,long)
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.SelectionVisualizer getSelectionVisualizer()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource$Builder setScale(float)
com.google.ar.schemas.sceneform.AnimationDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.collision.Ray: com.google.ar.sceneform.math.Vector3 getPoint(float)
com.google.ar.sceneform.lullmodel.BlendShape: void addName(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.ar.sceneform.rendering.RenderableDefinition: com.google.ar.sceneform.rendering.RenderableDefinition$Builder builder()
com.google.ar.schemas.lull.DataInt: com.google.ar.schemas.lull.DataInt getRootAsDataInt(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataInt)
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer$Builder vertexCount(int)
com.google.ar.sceneform.collision.Ray: void setDirection(com.google.ar.sceneform.math.Vector3)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
com.google.ar.sceneform.utilities.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)
com.google.ar.sceneform.ux.TwistGesture: TwistGesture(com.google.ar.sceneform.ux.GesturePointersUtility,android.view.MotionEvent,int)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion rotationBetweenVectors(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.core.Frame: long nativeAcquireRawDepthImage(long,long)
com.google.ar.sceneform.Camera: float getFarClipPlane()
com.google.ar.core.ArCoreApkJniAdapter: int requestInstallCustom(android.app.Activity,boolean,int,int,int[])
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addFixInfacingNormals(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.android.filament.View$DepthPrepass: View$DepthPrepass(java.lang.String,int,int)
com.google.ar.schemas.sceneform.BoolVec4Init: com.google.ar.schemas.sceneform.BoolVec4Init getRootAsBoolVec4Init(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void startModelPipelineDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelPipelineImportDef: com.google.ar.schemas.lull.ModelPipelineImportDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.ImageMetadata: double nativeGetDoubleFromMetadataEntry(long,long)
com.google.ar.schemas.lull.DataBytes: int createDataBytes(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
com.google.ar.sceneform.lullmodel.ModelIndexRange: long start()
com.google.ar.sceneform.rendering.AnimatorImpl: boolean isStarted()
com.google.ar.schemas.sceneform.DoubleVec2Init: int createDoubleVec2Init(com.google.flatbuffers.FlatBufferBuilder,double,double)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: com.google.ar.schemas.lull.ModelPipelineMaterialDef materials(int)
com.google.ar.sceneform.lullmodel.SubmeshAabb: SubmeshAabb()
androidx.window.embedding.ActivityRule: int hashCode()
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material lambda$build$0(com.google.ar.sceneform.rendering.Material)
com.google.android.filament.IndirectLight: void nSetRotation(long,float,float,float,float,float,float,float,float,float)
com.google.ar.core.Frame: int nativeGetCameraTextureName(long,long)
com.google.ar.sceneform.ux.BaseArFragment: void onWindowFocusChanged(boolean)
com.google.ar.core.Earth: com.google.ar.core.TrackingState getTrackingState()
com.google.ar.sceneform.FrameTime: float getDeltaSeconds()
com.google.android.filament.LightManager: void setSunHaloFalloff(int,float)
com.google.ar.sceneform.ArSceneView: boolean onBeginFrame(long)
androidx.window.embedding.ActivityStack: boolean isEmpty()
com.google.ar.sceneform.rendering.Material: void setFloat4(java.lang.String,com.google.ar.sceneform.rendering.Color)
com.google.android.filament.Material: int nGetRequiredAttributes(long)
com.google.ar.core.LightEstimate: void finalize()
com.google.ar.sceneform.ArSceneView: ArSceneView(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.rendering.ModelRenderable: com.google.ar.sceneform.rendering.Renderable makeCopy()
com.google.ar.schemas.sceneform.IntVec4Init: com.google.ar.schemas.sceneform.IntVec4Init getRootAsIntVec4Init(java.nio.ByteBuffer)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,com.google.android.filament.MaterialInstance$FloatElement,float[],int,int)
com.google.ar.sceneform.Scene: void setupLightProbe(com.google.ar.sceneform.SceneView)
com.google.ar.sceneform.utilities.LoadHelper: java.io.InputStream lambda$fileUriToInputStreamCreator$1$LoadHelper(android.content.res.AssetManager,java.lang.String,java.lang.String)
com.google.android.filament.VertexBuffer: long access$000()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.ar.schemas.lull.Rect: float h()
androidx.window.core.Bounds: int hashCode()
com.google.ar.schemas.lull.DataFloat: com.google.ar.schemas.lull.DataFloat getRootAsDataFloat(java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: int endModelPipelineSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.AabbDef: int createAabbDef(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float,float,float)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.ar.schemas.lull.SkeletonDef: com.google.ar.schemas.lull.Mat4x3 boneTransforms(int)
com.google.ar.sceneform.Camera: void updateTrackedPose(com.google.ar.core.Camera)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.google.ar.sceneform.rendering.RenderableDefinition: void applyDefinitionToData(com.google.ar.sceneform.rendering.IRenderableInternalData,java.util.ArrayList,java.util.ArrayList)
com.google.ar.schemas.lull.MaterialDef: void startTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Pose: float[] transformPoint(float[])
com.google.ar.core.Config$InstantPlacementMode: com.google.ar.core.Config$InstantPlacementMode valueOf(java.lang.String)
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.google.ar.sceneform.ux.TransformationSystem: boolean selectNode(com.google.ar.sceneform.ux.BaseTransformableNode)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: int materialsLength()
com.google.ar.sceneform.lullmodel.Color: void __init(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.android.filament.RenderTarget: int getMipLevel(com.google.android.filament.RenderTarget$AttachmentPoint)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.google.ar.core.Camera: void finalize()
com.google.ar.schemas.lull.KeyVariantPairDef: void addValueType(com.google.flatbuffers.FlatBufferBuilder,byte)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addWrapS(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: int usage()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.google.ar.sceneform.rendering.ExternalTexture: void initialize(com.google.android.filament.Stream)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.google.android.filament.Camera: float[] getForwardVector(float[])
com.google.android.filament.RenderableManager: com.google.android.filament.Box getAxisAlignedBoundingBox(int,com.google.android.filament.Box)
com.google.ar.sceneform.lullmodel.MaterialDef: com.google.ar.sceneform.lullmodel.MaterialDef getRootAsMaterialDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.LullModel: com.google.android.filament.TextureSampler$MinFilter fromLullToMinFilter(com.google.ar.schemas.lull.TextureDef)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: boolean flattenHierarchyAndTransformVerticesToRootSpace()
com.google.ar.core.Config: void nativeSetInstantPlacementMode(long,long,int)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: int createMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture build(com.google.android.filament.Engine)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.ar.schemas.lull.ModelInstanceDef: int rangesLength()
com.google.flatbuffers.FlatBufferBuilder: java.nio.ByteBuffer createUnintializedVector(int,int,int)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.flatbuffers.FlatBufferBuilder: void addLong(long)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.ar.core.Session: void setDisplayGeometry(int,int,int)
com.google.ar.core.Frame: long[] nativeAcquireTrackData(long,long,byte[])
kotlin.jvm.internal.FunctionReference: int getArity()
com.google.ar.sceneform.ux.BaseGesture: void setGestureEventListener(com.google.ar.sceneform.ux.BaseGesture$OnGestureEventListener)
com.google.ar.core.Frame: java.util.List hitTestInstantPlacement(float,float,float)
com.google.ar.core.Frame: com.google.ar.core.ImageMetadata getImageMetadata()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.ar.sceneform.lullmodel.DataHashValue: com.google.ar.sceneform.lullmodel.DataHashValue getRootAsDataHashValue(java.nio.ByteBuffer)
androidx.lifecycle.ViewModel: ViewModel()
com.google.android.filament.RenderableManager: void nBuilderMorphing(long,boolean)
com.google.ar.sceneform.ArSceneView: void resumeSession()
com.google.android.filament.RenderableManager: void nBuilderReceiveShadows(long,boolean)
com.google.ar.schemas.sceneform.SamplerUsageType: SamplerUsageType()
com.google.ar.core.RecordingConfig: RecordingConfig()
com.google.ar.sceneform.lullmodel.Vec4: void __init(int,java.nio.ByteBuffer)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
com.google.ar.sceneform.Node: com.google.ar.sceneform.collision.Collider getCollider()
com.google.ar.sceneform.rendering.MaterialFactory: java.util.concurrent.CompletableFuture makeOpaqueWithColor(android.content.Context,com.google.ar.sceneform.rendering.Color)
com.google.ar.core.CameraConfig$StereoCameraUsage: CameraConfig$StereoCameraUsage(java.lang.String,int,int)
com.google.android.filament.Stream$Builder$BuilderFinalizer: void finalize()
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: int createVariantArrayDefImpl(com.google.flatbuffers.FlatBufferBuilder,byte,int)
com.google.ar.core.exceptions.TextureNotSetException: TextureNotSetException()
com.google.ar.sceneform.ux.BaseArFragment: java.lang.Boolean getCanRequestDangerousPermissions()
com.google.ar.sceneform.ux.BaseTransformationController: com.google.ar.sceneform.ux.BaseGesture getActiveGesture()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.google.ar.schemas.lull.MaterialDef: void addProperties(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.android.UiHelper$TextureViewHandler: void setSurface(android.view.Surface)
com.google.ar.sceneform.math.Vector3: void setForward()
androidx.window.core.Version: int getPatch()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.google.ar.sceneform.collision.Sphere: boolean boxIntersection(com.google.ar.sceneform.collision.Box)
com.google.vr.dynamite.client.INativeLibraryLoader: int checkVersion(java.lang.String)
com.google.android.filament.RenderableManager: void access$300(long,int,int,long,long,int,int,int,int)
com.google.ar.schemas.sceneform.ParameterInitDef: com.google.ar.schemas.sceneform.ParameterInitDef getRootAsParameterInitDef(java.nio.ByteBuffer)
com.google.android.filament.Texture$CompressedFormat: Texture$CompressedFormat(java.lang.String,int)
com.google.android.filament.Engine: void nDestroySkybox(long,long)
com.google.ar.sceneform.lullmodel.BlendShape: com.google.ar.sceneform.lullmodel.BlendShape getRootAsBlendShape(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.SceneformBundleDef getRootAsSceneformBundleDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.SceneformBundleDef)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.ar.sceneform.ux.TranslationController: float dotQuaternion(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.ModelInstanceDef getRootAsModelInstanceDef(java.nio.ByteBuffer)
com.google.ar.sceneform.Scene: void removeOnUpdateListener(com.google.ar.sceneform.Scene$OnUpdateListener)
com.google.ar.schemas.sceneform.DoubleVec4Init: double x()
com.google.android.filament.MaterialInstance: MaterialInstance(com.google.android.filament.Material,long)
com.google.android.filament.Engine: void nDestroyScene(long,long)
com.google.android.filament.MaterialInstance: void clearNativeObject()
com.google.android.filament.Scene: void setSkybox(com.google.android.filament.Skybox)
com.google.ar.core.Config$UpdateMode: com.google.ar.core.Config$UpdateMode[] $values()
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: void addMaterials(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelPipelineImportDef: java.lang.String file()
com.google.android.filament.Texture: void access$200(long,int)
com.google.ar.core.SharedCamera: void nativeSharedCameraCaptureSessionConfigured(long,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setUsage(com.google.ar.sceneform.rendering.Texture$Usage)
com.google.android.filament.Texture: int nGetTarget(long)
com.google.android.filament.Camera: long getNativeObject()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addIndices32(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.TextureDef: int wrapR()
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: void endSample()
com.google.android.filament.Texture: void nBuilderHeight(long,int)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: java.nio.ByteBuffer sourceInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.Camera: float getSensitivity()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
com.google.ar.schemas.sceneform.AnimationDef: com.google.ar.schemas.sceneform.AnimationDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.IntVec2Init: void addY(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.SkeletonRig: void getInverseBindPoseForBone(int,com.google.ar.sceneform.math.Matrix)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.google.ar.core.SessionCreateJniHelper: SessionCreateJniHelper()
com.google.vr.dynamite.client.DynamiteClient: DynamiteClient()
com.google.ar.core.SessionCreateJniHelper: int getArCoreApkVersionCode(android.content.Context)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,float,float)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineDef getRootAsModelPipelineDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelPipelineDef)
androidx.fragment.app.Fragment: boolean isStateSaved()
com.google.ar.sceneform.lullmodel.ModelDef: int endModelDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.Mat4x3: com.google.ar.sceneform.lullmodel.Vec4 c1()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void startTargetMeshesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: int endModelPipelineCollidableDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.dependencies.d: boolean a(int,android.os.Parcel)
com.google.ar.schemas.lull.ModelInstanceDef: int shaderToMeshBones(int)
com.google.ar.schemas.lull.ModelDef: void startModelDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.SceneformBundleDef: void startCompiledMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.SkeletonDef: java.nio.ByteBuffer boneParentsInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.lull.VariantArrayDef: VariantArrayDef()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.ar.sceneform.ux.BaseGesture: void cancel()
androidx.fragment.app.Fragment: void onLowMemory()
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.SwapChain createSwapChain(java.lang.Object)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.ar.sceneform.ux.BaseGesture: boolean hasFinished()
com.google.android.filament.Texture: long getNativeObject()
com.google.ar.schemas.lull.VertexAttribute: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Config$GeospatialMode: com.google.ar.core.Config$GeospatialMode forNumber(int)
com.google.ar.core.Config$InstantPlacementMode: com.google.ar.core.Config$InstantPlacementMode[] values()
com.google.android.filament.Stream$Builder: Stream$Builder()
com.google.ar.sceneform.ux.BaseGesture: boolean wasCancelled()
com.google.ar.schemas.lull.ModelPipelineMaterialDef: com.google.ar.schemas.lull.MaterialDef material()
com.google.ar.schemas.sceneform.SamplerMinFilter: SamplerMinFilter()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: int targetMeshesLength()
com.google.ar.core.Plane: boolean nativeIsPoseInExtents(long,long,com.google.ar.core.Pose)
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.google.ar.sceneform.rendering.Light: float getIntensity()
com.google.android.filament.RenderTarget: long access$800(long)
com.google.ar.sceneform.lullmodel.ModelDef: void finishSizePrefixedModelDefBuffer(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Anchor: com.google.ar.core.Pose nativeGetPose(long,long)
com.google.android.filament.Stream: void setDimensions(int,int)
com.google.ar.core.Pose: Pose(float[],float[])
com.google.android.filament.View: int getSampleCount()
com.google.ar.sceneform.lullmodel.Vec3: float y()
com.google.ar.core.AugmentedImage: float nativeGetExtentZ(long,long)
com.google.ar.schemas.lull.ModelDef: void addVersion(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.DataBool: com.google.ar.sceneform.lullmodel.DataBool getRootAsDataBool(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataBool)
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer tangentIndices32InByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.Material: boolean nIsDepthCullingEnabled(long)
com.google.ar.sceneform.ux.RotationController: float getRotationRateDegrees()
com.google.ar.core.InstallActivity: void onActivityResult(int,int,android.content.Intent)
androidx.fragment.app.Fragment: void onDestroy()
com.google.ar.schemas.lull.DataInt: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.Texture$PixelBufferDescriptor: Texture$PixelBufferDescriptor(java.nio.Buffer,com.google.android.filament.Texture$Format,com.google.android.filament.Texture$Type)
androidx.window.layout.WindowMetricsCalculator: void reset()
com.google.ar.sceneform.collision.Sphere: com.google.ar.sceneform.collision.CollisionShape transform(com.google.ar.sceneform.common.TransformProvider)
com.google.ar.sceneform.ux.DragGesture: void onStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.ar.core.Anchor: com.google.ar.core.Pose getPose()
com.google.ar.core.Anchor: int nativeGetTrackingState(long,long)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.fragment.app.Fragment: void setNextTransition(int,int)
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setSource(java.util.concurrent.Callable)
com.google.android.filament.Engine: com.google.android.filament.Fence createFence(com.google.android.filament.Fence$Type)
com.google.ar.core.Session: Session()
com.google.ar.core.Camera: Camera()
com.google.ar.schemas.sceneform.DoubleInit: DoubleInit()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void startSourcesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode valueOf(java.lang.String)
com.google.android.filament.Engine: long nCreateView(long)
com.google.ar.schemas.lull.ModelInstanceDef: void startRangesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.collision.CollisionShape getCollisionShape()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading[] values()
com.google.ar.sceneform.lullmodel.MaterialDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.android.filament.RenderableManager: void setMaterialInstanceAt(int,int,com.google.android.filament.MaterialInstance)
com.google.android.filament.LightManager: void access$400(long,float,float,float)
com.google.ar.core.dependencies.f: void e(java.lang.String,java.util.List,android.os.Bundle,com.google.ar.core.dependencies.j)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.AugmentedFace: java.nio.ByteBuffer nativeGetMeshNormalsByteBuffer(long,long)
com.google.ar.sceneform.lullmodel.BlendShape: int createTangentIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,short[])
com.google.ar.core.InstallActivity: boolean isOptional()
com.google.ar.schemas.lull.ModelPipelineDef: int endModelPipelineDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelIndexRange: ModelIndexRange()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder color(float,float,float)
com.google.ar.core.exceptions.SessionNotPausedException: SessionNotPausedException(java.lang.String)
com.google.ar.sceneform.lullmodel.DataHashValue: com.google.ar.sceneform.lullmodel.DataHashValue __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Stream$Builder: com.google.android.filament.Stream$Builder height(int)
com.google.ar.schemas.lull.DataHashValue: int createDataHashValue(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.ar.schemas.sceneform.IntInit: void startIntInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.utilities.LoadHelper: java.util.concurrent.Callable fileUriToInputStreamCreator(android.content.Context,android.net.Uri)
com.google.android.filament.RenderableManager: void setBlendOrderAt(int,int,int)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef getRootAsModelPipelineSkeletonDef(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: int endKeyVariantPairDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.R$layout: R$layout()
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: void nDestroySwiftShaderEngine(long)
com.google.ar.core.Session: long nativeGetSessionNativeHandle(long)
com.google.ar.sceneform.ux.DragGesture: void onCancel()
com.google.ar.sceneform.ux.BaseTransformationController: void onEndTransformation(com.google.ar.sceneform.ux.BaseGesture)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.filament.IndirectLight: long getNativeObject()
com.google.android.filament.RenderableManager: void access$500(long,int,int)
com.google.android.filament.Colors: float[] toLinear(com.google.android.filament.Colors$RgbType,float[])
com.google.ar.schemas.lull.BlendShape: void startTangentIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.ExternalSamplerInit: java.lang.String path()
com.google.ar.core.Point$OrientationMode: Point$OrientationMode(java.lang.String,int,int)
com.google.ar.core.Session: com.google.ar.core.Anchor resolveCloudAnchor(java.lang.String)
com.google.ar.schemas.sceneform.IntVec4Init: int x()
com.google.ar.sceneform.SceneView: long reclaimReleasedResources()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.ar.sceneform.lullmodel.TextureDef: java.nio.ByteBuffer dataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineImportDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.ar.schemas.lull.DataBytes: int createValueVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createBlendShapesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.DataBytes: int endDataBytes(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.RenderableDefinition: java.util.List getSubmeshes()
com.google.ar.core.dependencies.e: android.os.Parcelable a(android.os.Parcel,android.os.Parcelable$Creator)
com.google.ar.sceneform.rendering.SkeletonRig$Factory: SkeletonRig$Factory()
com.google.ar.schemas.sceneform.BoolVec3Init: void addY(com.google.flatbuffers.FlatBufferBuilder,boolean)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
com.google.ar.core.Session: int nativeGetRecordingStatus(long)
com.google.ar.sceneform.rendering.Renderer: void onResized(int,int)
com.google.ar.schemas.sceneform.NullInit: int endNullInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.InstallActivity: void -$$Nest$mcloseInstaller(com.google.ar.core.InstallActivity)
com.google.ar.schemas.lull.MaterialTextureDef: int usage()
com.google.ar.core.PointCloud: long getTimestamp()
com.google.android.filament.MaterialInstance: void nSetIntParameterArray(long,java.lang.String,int,int[],int,int)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.google.ar.sceneform.lullmodel.SkeletonDef: void addBoneTransforms(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.AabbDef: AabbDef()
com.google.ar.sceneform.ux.BaseGestureRecognizer: void addOnGestureStartedListener(com.google.ar.sceneform.ux.BaseGestureRecognizer$OnGestureStartedListener)
com.google.ar.sceneform.ux.TranslationController: void onContinueTransformation(com.google.ar.sceneform.ux.DragGesture)
com.google.ar.sceneform.ux.ArFragment: void handleSessionException(com.google.ar.core.exceptions.UnavailableException)
com.google.ar.core.ArImage: void nativeLoadSymbols()
com.google.ar.core.TrackableBase: java.util.Collection getAnchors()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.ar.sceneform.Camera: int getViewHeight()
com.google.ar.core.ArCoreApk$InstallBehavior: com.google.ar.core.ArCoreApk$InstallBehavior valueOf(java.lang.String)
com.google.ar.sceneform.ux.BaseTransformableNode: boolean select()
com.google.ar.schemas.sceneform.NullInit: void startNullInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.IntVec3Init: void startIntVec3Init(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.ar.schemas.sceneform.CubemapSamplerInit: void addUsage(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.Vec4: com.google.ar.schemas.lull.Vec4 __assign(int,java.nio.ByteBuffer)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.google.android.filament.View: void setDepthPrepass(com.google.android.filament.View$DepthPrepass)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
com.google.ar.sceneform.assets.RenderableSource$RecenterMode: RenderableSource$RecenterMode(java.lang.String,int)
com.google.ar.sceneform.Scene: void removeOnPeekTouchListener(com.google.ar.sceneform.Scene$OnPeekTouchListener)
com.google.ar.schemas.sceneform.Vec2Init: int createVec2Init(com.google.flatbuffers.FlatBufferBuilder,float,float)
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode valueOf(java.lang.String)
com.google.ar.sceneform.rendering.IEngine: void destroyVertexBuffer(com.google.android.filament.VertexBuffer)
com.google.ar.schemas.sceneform.SceneformBundleDef: int createCompiledMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.rendering.TextureInternalData: com.google.ar.sceneform.rendering.Texture$Sampler getSampler()
com.google.ar.sceneform.lullmodel.DataVec4: com.google.ar.sceneform.lullmodel.DataVec4 getRootAsDataVec4(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataVec4)
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer vertexDataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.CameraConfig: com.google.ar.core.CameraConfig$FacingDirection getFacingDirection()
com.google.android.filament.IndexBuffer: void nBuilderBufferType(long,int)
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$MinFilter minFilterFromMagFilter(com.google.android.filament.TextureSampler$MagFilter)
com.google.ar.core.Config: void nativeDestroy(long,long)
com.google.ar.schemas.lull.SubmeshAabb: int endSubmeshAabb(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Renderer: void onPause()
com.google.ar.schemas.lull.TextureDef: int magFilter()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
com.google.ar.schemas.sceneform.SamplerParamsDef: int compareFunc()
com.google.android.filament.android.TextureHelper: int toNativeFormat(android.graphics.Bitmap$Config)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: com.google.ar.sceneform.lullmodel.KeyVariantPairDef __assign(int,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.ar.core.Session: long[] nativeGetSupportedCameraConfigsWithFilter(long,long)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addSmoothingAngle(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.sceneform.lullmodel.BlendShape: int tangentDataLength()
com.google.ar.core.Earth$EarthState: Earth$EarthState(java.lang.String,int,int)
com.google.ar.core.AugmentedImageDatabase: java.nio.ByteBuffer loadDirectByteBuffer(java.io.InputStream)
com.google.ar.schemas.lull.VertexAttributeType: VertexAttributeType()
com.google.android.filament.android.UiHelper: boolean isReadyToRender()
com.google.ar.schemas.sceneform.RenderFlags: java.lang.String name(int)
com.google.ar.core.Earth: void nativeReleaseEarth(long,long)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.ar.core.SharedCamera: void pause()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda0: SharedCamera$1$$ExternalSyntheticLambda0(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice,int)
com.google.ar.core.Anchor: void nativeReleaseAnchor(long,long)
com.google.ar.core.Session: com.google.ar.core.Anchor hostCloudAnchorWithTtl(com.google.ar.core.Anchor,int)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineDef getRootAsModelPipelineDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelPipelineDef)
com.google.android.filament.IndirectLight: long nBuilderBuild(long,long)
com.google.ar.schemas.lull.SubmeshAabb: com.google.ar.schemas.lull.SubmeshAabb getRootAsSubmeshAabb(java.nio.ByteBuffer,com.google.ar.schemas.lull.SubmeshAabb)
com.google.ar.sceneform.R$dimen: R$dimen()
com.google.android.filament.Stream: Stream(long,com.google.android.filament.Engine)
com.google.android.filament.Scene: int nGetRenderableCount(long)
com.google.ar.schemas.sceneform.BoolVec2Init: void startBoolVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.LightInstance: void updateTransform()
com.google.ar.sceneform.lullmodel.VariantMapDef: VariantMapDef()
com.google.ar.schemas.lull.DataBytes: com.google.ar.schemas.lull.DataBytes getRootAsDataBytes(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataBytes)
com.google.ar.sceneform.HitTestResult: void reset()
androidx.window.layout.EmptyDecorator: EmptyDecorator()
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState forNumber(int)
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.math.Matrix getWorldModelMatrix()
com.google.ar.sceneform.math.Vector3: boolean equals(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.android.filament.IndirectLight: void nIntensity(long,float)
com.google.ar.sceneform.rendering.LightInstance: int getEntity()
com.google.vr.dynamite.client.INativeLibraryLoader: long initializeAndLoadNativeLibrary(java.lang.String)
com.google.ar.schemas.lull.KeyVariantPairDef: com.google.ar.schemas.lull.KeyVariantPairDef getRootAsKeyVariantPairDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.KeyVariantPairDef)
androidx.window.embedding.ActivityFilter: int hashCode()
com.google.android.filament.Engine: void destroyCamera(com.google.android.filament.Camera)
com.google.ar.sceneform.rendering.SceneformBundle: com.google.ar.sceneform.collision.CollisionShape readCollisionGeometry(com.google.ar.schemas.sceneform.SceneformBundleDef)
com.google.ar.schemas.lull.SubmeshAabb: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Session$FeatureMapQuality: Session$FeatureMapQuality(java.lang.String,int,int)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder boundingBox(com.google.android.filament.Box)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.ar.core.LightEstimate: android.media.Image[] acquireEnvironmentalHdrCubeMap()
com.google.ar.schemas.sceneform.CubemapSamplerInit: com.google.ar.schemas.sceneform.CubemapSamplerInit __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.R: R()
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
com.google.ar.sceneform.lullmodel.TextureTargetType: java.lang.String name(int)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: EnvironmentalHdrParameters(com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder,com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$1)
com.google.ar.sceneform.rendering.AnimationData$Factory: AnimationData$Factory()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.ar.sceneform.lullmodel.TextureDef: int minFilter()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.ar.sceneform.rendering.ViewRenderable: void updateSuggestedCollisionShapeAsync()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.ar.core.DepthPoint: int hashCode()
com.google.ar.sceneform.ux.GesturePointersUtility: void releasePointerId(int)
com.google.ar.core.SharedCamera: android.graphics.SurfaceTexture getGpuSurfaceTexture()
com.google.ar.core.ArCoreApk$InstallBehavior: com.google.ar.core.ArCoreApk$InstallBehavior[] values()
com.google.ar.schemas.lull.MaterialTextureDef: int createUsagePerChannelVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.lull.TextureTargetType: java.lang.String name(int)
com.google.ar.schemas.sceneform.Vec4Init: float y()
com.google.ar.core.Config: void nativeSetDepthMode(long,long,int)
com.google.ar.schemas.lull.ModelPipelineDef: int createTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.core.ArImage: void nativeClose(long,long)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.ar.core.TrackableBase: int nativeGetType(long,long)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.ar.core.AugmentedImageDatabase: long nativeDeserialize(long,java.nio.ByteBuffer)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.google.android.filament.android.UiHelper$2: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Vector3 getSize()
com.google.ar.core.GeospatialPose: void nativeDestroy(long,long)
com.google.ar.schemas.lull.SubmeshAabb: com.google.ar.schemas.lull.Vec3 minPosition(com.google.ar.schemas.lull.Vec3)
com.google.ar.schemas.sceneform.DoubleVec2Init: com.google.ar.schemas.sceneform.DoubleVec2Init __assign(int,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.filament.Texture: void nGenerateMipmaps(long,long)
com.google.ar.sceneform.Node: void setWorldRotation(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.NodeParent: void startIterating()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.ar.sceneform.collision.Collider: com.google.ar.sceneform.common.TransformProvider getTransformProvider()
com.google.android.filament.IndirectLight: void access$300(long,int,float[])
com.google.ar.core.Plane: boolean isPoseInPolygon(com.google.ar.core.Pose)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef getRootAsModelPipelineRenderableDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.TextureDef textures(int)
androidx.window.R$styleable: R$styleable()
com.google.ar.sceneform.lullmodel.DataString: java.lang.String value()
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.google.android.filament.Box: float[] getCenter()
com.google.ar.sceneform.lullmodel.DataQuat: com.google.ar.sceneform.lullmodel.Quat value()
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason[] values()
com.google.flatbuffers.Utf8Safe: int computeEncodedLength(java.lang.CharSequence)
com.google.ar.sceneform.Node: void setLocalScale(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.resources.ResourceRegistry: void destroyAllResources()
com.google.android.filament.Stream: long nBuilderBuild(long,long)
com.google.android.filament.Texture$PixelBufferDescriptor: Texture$PixelBufferDescriptor(java.nio.Buffer,com.google.android.filament.Texture$Format,com.google.android.filament.Texture$Type,int,int,int)
androidx.window.layout.WindowInfoTracker: void reset()
com.google.ar.sceneform.ux.DragGestureRecognizer: void tryCreateGestures(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.google.ar.core.CameraConfig$StereoCameraUsage: com.google.ar.core.CameraConfig$StereoCameraUsage valueOf(java.lang.String)
com.google.ar.sceneform.ux.AugmentedFaceNode: void updateSubmeshes()
com.google.ar.core.GeospatialPose: double getHorizontalAccuracy()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.google.android.filament.RenderTarget$AttachmentPoint: com.google.android.filament.RenderTarget$AttachmentPoint valueOf(java.lang.String)
com.google.ar.schemas.lull.DataBytes: DataBytes()
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.SkeletonDef skeleton(com.google.ar.sceneform.lullmodel.SkeletonDef)
com.google.ar.core.exceptions.PlaybackFailedException: PlaybackFailedException()
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.ModelIndexRange ranges(int)
com.google.ar.sceneform.rendering.Renderer: void createImp()
com.google.ar.core.Session: com.google.ar.core.Config getConfig()
com.google.ar.sceneform.rendering.FixedWidthViewSizer: com.google.ar.sceneform.math.Vector3 getSize(android.view.View)
com.google.ar.sceneform.lullmodel.VariantArrayDef: VariantArrayDef()
com.google.android.filament.Material: com.google.android.filament.Material$Interpolation getInterpolation()
com.google.flatbuffers.FlatBufferBuilder: FlatBufferBuilder(java.nio.ByteBuffer,com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory)
com.google.ar.schemas.sceneform.SamplerInit: int endSamplerInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.Scene: com.google.ar.sceneform.HitTestResult hitTest(com.google.ar.sceneform.collision.Ray)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void __init(int,java.nio.ByteBuffer)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: int createKeyVariantPairDef(com.google.flatbuffers.FlatBufferBuilder,int,long,byte,int)
com.google.ar.sceneform.lullmodel.TextureDef: void addWrapR(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.DataHashValue: long value()
com.google.ar.core.RecordingStatus: RecordingStatus(java.lang.String,int,int)
com.google.ar.core.Plane: long nativeAcquireSubsumedBy(long,long)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,com.google.android.filament.MaterialInstance$BooleanElement,boolean[],int,int)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: java.lang.String source()
com.google.ar.schemas.sceneform.RuntimeAssetDef: int endRuntimeAssetDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.SceneformBundleDef: void startMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.VariantArrayDef: void addValues(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.fragment.app.Fragment: java.lang.String getString(int)
com.google.ar.schemas.lull.ModelInstanceDef: void addAabbs(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.SubmeshAabb: SubmeshAabb()
com.google.ar.sceneform.lullmodel.TextureDef: boolean generateMipmaps()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: com.google.ar.sceneform.lullmodel.VariantArrayDefImpl __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.Color: float a()
com.google.ar.sceneform.lullmodel.DataBool: DataBool()
com.google.ar.sceneform.ux.ScaleController: void onEndTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode[] $values()
com.google.ar.core.dependencies.e: e()
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$MagFilter getMagFilter()
com.google.ar.sceneform.rendering.Renderable: Renderable(com.google.ar.sceneform.rendering.Renderable)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.google.ar.sceneform.ux.DragGesture: com.google.ar.sceneform.math.Vector3 getDelta()
com.google.ar.sceneform.lullmodel.BlendShape: void startVertexIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.layout.WindowMetricsCalculator: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.ar.sceneform.ux.RotationController: boolean canStartTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.sceneform.lullmodel.BlendShape: int tangentIndices32Length()
com.google.ar.schemas.lull.MaterialTextureDef: com.google.ar.schemas.lull.MaterialTextureDef __assign(int,java.nio.ByteBuffer)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder position(float,float,float)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.flatbuffers.Table: java.nio.ByteBuffer __vector_as_bytebuffer(int,int)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.sceneform.ux.BaseArFragment: java.lang.Void lambda$setupSelectionRenderable$2(java.lang.Throwable)
com.google.android.filament.Engine: void nDestroySwapChain(long,long)
com.google.ar.schemas.sceneform.LightingCubeDef: com.google.ar.schemas.sceneform.LightingCubeFaceDef faces(com.google.ar.schemas.sceneform.LightingCubeFaceDef,int)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 max(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.filament.Stream$Builder: com.google.android.filament.Stream$Builder width(int)
com.google.ar.sceneform.rendering.CameraProvider: boolean isActive()
com.google.android.filament.android.UiHelper: void setOpaque(boolean)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
com.google.android.filament.TransformManager: void destroy(int)
com.google.flatbuffers.Utf8Safe: int encodeUtf8Array(java.lang.CharSequence,byte[],int,int)
com.google.android.filament.Stream: boolean isNative()
com.google.ar.sceneform.ux.AugmentedFaceNode: void updateFaceMeshVerticesAndTriangles()
com.google.ar.core.Session: long[] nativeGetSupportedCameraConfigs(long)
com.google.ar.schemas.lull.Vec2: float x()
com.google.ar.sceneform.Camera: com.google.ar.sceneform.math.Matrix getProjectionMatrix()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.google.ar.schemas.sceneform.Vec2Init: int endVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: java.lang.String nameOverride()
com.google.android.filament.Camera: void clearNativeObject()
com.google.android.filament.View$AmbientOcclusion: com.google.android.filament.View$AmbientOcclusion[] values()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.google.ar.sceneform.rendering.ViewRenderable: ViewRenderable(com.google.ar.sceneform.rendering.ViewRenderable)
com.google.ar.schemas.lull.BlendShape: int createTangentIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,short[])
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.RenderableManager getRenderableManager()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.TextureDef textures(int)
com.google.ar.sceneform.SceneView: boolean onTouchEvent(android.view.MotionEvent)
com.google.ar.sceneform.lullmodel.Quat: Quat()
com.google.ar.schemas.lull.TextureDef: void addTargetType(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.google.android.filament.Material$VertexDomain: com.google.android.filament.Material$VertexDomain valueOf(java.lang.String)
com.google.ar.sceneform.TouchEventSystem: com.google.ar.sceneform.TouchEventSystem$TouchTarget addTouchTarget(com.google.ar.sceneform.Node,int)
com.google.android.filament.IndexBuffer: int getIndexCount()
com.google.ar.schemas.lull.DataBytes: int valueLength()
com.google.ar.sceneform.rendering.LightProbe: void setIntensity(float)
com.google.android.filament.Camera: float getShutterSpeed()
com.google.ar.sceneform.rendering.MaterialFactory: com.google.ar.sceneform.rendering.Material lambda$makeOpaqueWithColor$0(com.google.ar.sceneform.rendering.Color,com.google.ar.sceneform.rendering.Material)
com.google.ar.schemas.sceneform.ParameterDef: java.nio.ByteBuffer idAsByteBuffer()
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode[] values()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.flatbuffers.FlatBufferBuilder: java.nio.ByteBuffer growByteBuffer(java.nio.ByteBuffer,com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory)
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight$Builder irradiance(int,float[])
com.google.android.filament.TransformManager: void setTransform(int,float[])
com.google.ar.sceneform.rendering.ShapeFactory: com.google.ar.sceneform.rendering.ModelRenderable makeCylinder(float,float,com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.rendering.Material)
com.google.ar.sceneform.ArSceneView: void pauseScene()
androidx.fragment.app.Fragment: java.lang.String getTag()
com.google.ar.sceneform.AnchorNode: void setSmoothed(boolean)
com.google.ar.schemas.sceneform.SamplerParamsDef: com.google.ar.schemas.sceneform.SamplerParamsDef getRootAsSamplerParamsDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.SamplerParamsDef)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.google.android.filament.Camera: float[] getViewMatrix(float[])
com.google.android.filament.Colors$RgbType: com.google.android.filament.Colors$RgbType valueOf(java.lang.String)
com.google.android.filament.Camera$Projection: Camera$Projection(java.lang.String,int)
com.google.android.filament.VertexBuffer: long nBuilderBuild(long,long)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.Color: float r()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.google.ar.sceneform.lullmodel.Recti: int createRecti(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int)
androidx.window.embedding.SplitPairRule: int hashCode()
com.google.android.filament.Engine: void nDestroyMaterialInstance(long,long)
com.google.android.filament.RenderableManager: int getPrimitiveCount(int)
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer$Builder normalized(com.google.android.filament.VertexBuffer$VertexAttribute,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
com.google.ar.core.LightEstimate$State: com.google.ar.core.LightEstimate$State[] values()
com.google.android.filament.RenderTarget: com.google.android.filament.Texture getTexture(com.google.android.filament.RenderTarget$AttachmentPoint)
com.google.ar.schemas.sceneform.SamplerDef: int dataLength()
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.google.ar.sceneform.rendering.CleanupRegistry: CleanupRegistry()
com.google.ar.sceneform.rendering.SkeletonRig: SkeletonRig(com.google.ar.schemas.lull.SkeletonDef,com.google.ar.schemas.lull.ModelInstanceDef)
com.google.ar.schemas.sceneform.VersionDef: void startVersionDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.SubmeshAabb: void startSubmeshAabb(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.ar.sceneform.lullmodel.BlendShape: int createVertexIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.ar.sceneform.rendering.IEngine: void destroyStream(com.google.android.filament.Stream)
com.google.ar.sceneform.ux.BaseGesture: void onStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Matrix getWorldModelMatrix()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef collidable(com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef)
com.google.ar.core.TrackingFailureReason: TrackingFailureReason(java.lang.String,int,int)
com.google.ar.sceneform.rendering.ResourceManager: long reclaimReleasedResources()
com.google.ar.core.Session: void nativeResume(long)
com.google.flatbuffers.Table: int compareStrings(int,int,java.nio.ByteBuffer)
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState[] values()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 lerp(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3,float)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.google.ar.sceneform.rendering.Renderer: void preRenderImp()
com.google.ar.schemas.lull.DataBytes: com.google.ar.schemas.lull.DataBytes getRootAsDataBytes(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyStream(com.google.android.filament.Stream)
com.google.ar.sceneform.Node: void setWorldPosition(com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.sceneform.IntVec4Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.filament.Material$Parameter$Precision: Material$Parameter$Precision(java.lang.String,int)
com.google.ar.schemas.lull.ModelInstanceDef: void addIndices32(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
com.google.ar.sceneform.rendering.Renderer: void setDesiredSize(int,int)
com.google.ar.core.Config: int nativeGetPlaneFindingMode(long,long)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyTexture(com.google.android.filament.Texture)
com.google.ar.sceneform.rendering.ExternalTexture: com.google.android.filament.Texture getFilamentTexture()
com.google.ar.schemas.lull.SkeletonDef: void startBoneTransformsVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.ModelIndexRange ranges(int)
com.google.android.filament.TextureSampler: int nSetCompareMode(int,int)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder skinning(int,java.nio.Buffer)
com.google.ar.sceneform.lullmodel.Vec4: float w()
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
com.google.ar.sceneform.lullmodel.SkeletonDef: void startBoneParentsVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.ar.core.Frame: long getTimestamp()
com.google.android.filament.Camera: float[] getLeftVector(float[])
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean isAndroidApiAvailable()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewSizer access$000(com.google.ar.sceneform.rendering.ViewRenderable$Builder)
com.google.ar.sceneform.rendering.Texture$Builder: java.util.concurrent.CompletableFuture build()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.google.ar.sceneform.utilities.LoadHelper: java.lang.Boolean isAndroidResource(android.net.Uri)
com.google.android.filament.Camera: void nGetProjectionMatrix(long,double[])
com.google.android.filament.LightManager: void access$1000(long,float,float)
com.google.ar.schemas.lull.ModelPipelineImportDef: boolean useSpecularGlossinessTexturesIfPresent()
com.google.ar.schemas.lull.DataQuat: void startDataQuat(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.exceptions.NotTrackingException: NotTrackingException(java.lang.String)
com.google.ar.sceneform.utilities.AndroidPreconditions: AndroidPreconditions()
com.google.android.filament.LightManager: void setSpotLightCone(int,float,float)
com.google.ar.sceneform.lullmodel.SkeletonDef: void addBoneNames(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.CameraConfig$StereoCameraUsage: com.google.ar.core.CameraConfig$StereoCameraUsage[] values()
com.google.android.filament.NativeSurface: long getNativeObject()
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Quaternion getWorldRotationInternal()
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality[] values()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void addSkeleton(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.MaterialTextureDef: java.nio.ByteBuffer usagePerChannelInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.SkeletonNode: boolean access$000(com.google.ar.sceneform.SkeletonNode)
com.google.ar.sceneform.math.Vector3: void setRight()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.ar.schemas.lull.Vec2i: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.BoolVec2Init: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType valueOf(java.lang.String)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,int,int)
com.google.ar.sceneform.math.MathHelper: float clamp01(float)
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState[] $values()
com.google.ar.sceneform.lullmodel.TextureTargetType: TextureTargetType()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.google.android.filament.LightManager: float nGetIntensity(long,int)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
com.google.ar.core.Frame: long[] nativeHitTestRay(long,long,float[],int,float[],int)
com.google.flatbuffers.Constants: Constants()
com.google.ar.sceneform.ux.AugmentedFaceNode: java.lang.Boolean lambda$onActivate$1(com.google.ar.sceneform.rendering.ModelRenderable,java.lang.Throwable)
com.google.ar.sceneform.lullmodel.SkeletonDef: void startBoneNamesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.ar.sceneform.SceneView: void initialize()
com.google.android.filament.Texture: long nBuilderBuild(long,long)
com.google.ar.sceneform.collision.Box: boolean rayIntersection(com.google.ar.sceneform.collision.Ray,com.google.ar.sceneform.collision.RayHit)
androidx.window.java.R: R()
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.lang.String sha1sum()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.google.ar.sceneform.ux.BaseArFragment: android.view.View loadPlaneDiscoveryView(android.view.LayoutInflater,android.view.ViewGroup)
com.google.ar.schemas.lull.DataQuat: com.google.ar.schemas.lull.DataQuat getRootAsDataQuat(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.IntVec3Init: int z()
com.google.ar.sceneform.ux.BaseArFragment: void onDestroyView()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.google.ar.schemas.lull.ModelInstanceDef: int vertexDataLength()
com.google.ar.schemas.lull.Recti: int w()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.ar.sceneform.utilities.SceneformBufferUtils: byte[] copyByteBufferToArray(java.nio.ByteBuffer)
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus forNumber(int)
com.google.ar.sceneform.lullmodel.DataBytes: java.nio.ByteBuffer valueInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.Vec4: com.google.ar.sceneform.lullmodel.Vec4 __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Camera: void getViewMatrix(float[],int)
com.google.ar.schemas.lull.AxisSystem: java.lang.String name(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.ar.schemas.lull.TextureDef: boolean generateMipmaps()
com.google.ar.schemas.sceneform.SamplerDef: void addData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.CameraIntrinsics: void finalize()
com.google.ar.sceneform.resources.SharedReference: void retain()
com.google.android.filament.Material$Builder: com.google.android.filament.Material build(com.google.android.filament.Engine)
com.google.android.filament.LightManager: boolean nIsShadowCaster(long,int)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addSuggestedCollisionShape(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.TransformationSystem: void addGestureRecognizer(com.google.ar.sceneform.ux.BaseGestureRecognizer)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
com.google.ar.sceneform.ux.ScaleController: float getMaxScale()
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.rendering.LightProbe$Builder setSource(android.content.Context,int)
com.google.ar.sceneform.rendering.AnimatorImpl: com.google.ar.sceneform.rendering.ModelRenderable getTarget()
com.google.ar.sceneform.rendering.Renderer: void onTouchEvent(android.view.MotionEvent)
com.google.ar.schemas.lull.TextureDef: java.lang.String name()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
com.google.ar.schemas.lull.ModelInstanceDef: void addBlendAttributes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: void startAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.Recti: int createRecti(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int)
com.google.ar.sceneform.ux.FootprintSelectionVisualizer: void applySelectionVisual(com.google.ar.sceneform.ux.BaseTransformableNode)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.ar.core.Config: com.google.ar.core.Config$InstantPlacementMode getInstantPlacementMode()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
com.google.ar.sceneform.Node: void dispatchTransformChanged(com.google.ar.sceneform.Node)
com.google.ar.sceneform.lullmodel.TextureDef: int endTextureDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.DataInt: int createDataInt(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.flatbuffers.FlatBufferBuilder: void addFloat(float)
com.google.ar.schemas.sceneform.AnimationDef: int createDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getWorldScaleInternal()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.google.ar.core.ImageMetadata: long nativeGetLongFromMetadataEntry(long,long)
com.google.ar.sceneform.Node: void onUpdate(com.google.ar.sceneform.FrameTime)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Vector3 inverseRotateVector(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.assets.RenderableSource$SourceType: RenderableSource$SourceType(java.lang.String,int)
com.google.ar.sceneform.ux.ScaleController: void onActivated(com.google.ar.sceneform.Node)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float getReflectionScaleForFilament()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.ar.sceneform.collision.RayHit: float getDistance()
com.google.ar.sceneform.rendering.PlaneRenderer: void setVisible(boolean)
com.google.ar.core.Frame: android.media.Image acquireDepthImage16Bits()
com.google.ar.core.Pose: com.google.ar.core.Pose makeRotation(float,float,float,float)
com.google.android.filament.IndirectLight: void access$400(long,long)
com.google.ar.schemas.lull.BlendShape: int vertexDataLength()
com.google.android.filament.VertexBuffer$AttributeType: VertexBuffer$AttributeType(java.lang.String,int)
com.google.ar.sceneform.lullmodel.BlendShape: int vertexIndices32Length()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.google.ar.schemas.sceneform.InputDef: java.lang.String path()
com.google.ar.sceneform.rendering.CameraStream: void setCameraMaterial(com.google.ar.sceneform.rendering.Material)
com.google.ar.schemas.lull.BlendShape: int createBlendShape(com.google.flatbuffers.FlatBufferBuilder,long,int,int,int,int,int,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.ar.sceneform.rendering.PlaneRenderer: void setEnabled(boolean)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: int attributes(int)
com.google.flatbuffers.FlatBufferBuilder$HeapByteBufferFactory: FlatBufferBuilder$HeapByteBufferFactory()
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: com.google.ar.schemas.lull.ModelPipelineSkeletonDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.BoolVec4Init: com.google.ar.schemas.sceneform.BoolVec4Init getRootAsBoolVec4Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.BoolVec4Init)
com.google.ar.core.AugmentedFace: java.nio.FloatBuffer getMeshVertices()
com.google.ar.core.Plane: com.google.ar.core.Plane$Type getType()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.ar.sceneform.lullmodel.BlendShape: void addTangentIndices16(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.VariantArrayDefImpl: com.google.ar.schemas.lull.VariantArrayDefImpl __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setPremultiplied(boolean)
com.google.android.filament.VertexBuffer: void access$400(long,int,boolean)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef skeleton(com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef)
com.google.android.filament.MaterialInstance: void nSetParameterFloat3(long,java.lang.String,float,float,float)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.CameraStream: void initializeFilamentRenderable()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.ar.sceneform.rendering.Material: void setBoolean4(java.lang.String,boolean,boolean,boolean,boolean)
com.google.ar.sceneform.ux.ScaleController: void onUpdated(com.google.ar.sceneform.Node,com.google.ar.sceneform.FrameTime)
com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter: Texture$Sampler$MagFilter(java.lang.String,int)
com.google.ar.schemas.lull.TextureDef: java.nio.ByteBuffer nameAsByteBuffer()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.ar.core.Config$FocusMode: com.google.ar.core.Config$FocusMode[] $values()
androidx.fragment.app.Fragment: void noteStateNotSaved()
com.google.ar.sceneform.ArSceneView: void initializeCameraStream()
com.google.ar.sceneform.rendering.ModelRenderable: void onAnimationEngineUpdated()
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Builder setColor(com.google.ar.sceneform.rendering.Color)
com.google.ar.sceneform.rendering.LightProbe: float getIntensity()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.ar.core.ArCoreApk$Availability: boolean isUnsupported()
com.google.ar.core.CameraIntrinsics: void getPrincipalPoint(float[],int)
com.google.ar.sceneform.rendering.SkeletonRig: com.google.ar.sceneform.rendering.SkeletonRig makeCopy()
com.google.ar.schemas.sceneform.SceneformBundleDef: void startSceneformBundleDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Color: Color(com.google.ar.sceneform.rendering.Color)
com.google.android.filament.RenderableManager$PrimitiveType: com.google.android.filament.RenderableManager$PrimitiveType[] values()
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.LightManager: void nBuilderHaloFalloff(long,float)
com.google.ar.sceneform.ux.R$style: R$style()
com.google.android.filament.Material: boolean nIsDepthWriteEnabled(long)
com.google.ar.sceneform.rendering.RenderableInstance: int createFilamentChildEntity(com.google.ar.sceneform.rendering.IEngine,int,com.google.ar.sceneform.math.Matrix)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment access$100(com.google.ar.sceneform.rendering.ViewRenderable$Builder)
com.google.ar.schemas.sceneform.IntInit: int createIntInit(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.VariantMapDef: com.google.ar.schemas.lull.VariantMapDef __assign(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.ar.sceneform.lullmodel.MaterialDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Renderer: void addLight(com.google.ar.sceneform.rendering.LightInstance)
com.google.android.filament.Texture: void setExternalStream(com.google.android.filament.Engine,com.google.android.filament.Stream)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.rendering.LightInstance: void dispose()
com.google.ar.core.Frame: long nativeAcquirePointCloud(long,long)
com.google.ar.sceneform.rendering.PlaneRenderer: com.google.ar.sceneform.math.Vector3 getFocusPoint(com.google.ar.core.Frame,int,int)
com.google.android.filament.Fence$Mode: Fence$Mode(java.lang.String,int)
com.google.ar.schemas.sceneform.LightingCubeDef: void startFacesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.Scene$OnUpdateListener: void onUpdate(com.google.ar.sceneform.FrameTime)
com.google.ar.sceneform.lullmodel.Quat: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: java.lang.String file()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createModelInstanceDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int,int,int,long,boolean,int,int,int,int)
com.google.android.filament.Renderer: void copyFrame(com.google.android.filament.SwapChain,com.google.android.filament.Viewport,com.google.android.filament.Viewport,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: void startUsagePerChannelVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef getRootAsModelPipelineCollidableDef(java.nio.ByteBuffer)
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type valueOf(java.lang.String)
com.google.android.filament.LightManager: LightManager(long)
com.google.ar.core.RecordingConfig: void nativeDestroyRecordingConfig(long,long)
com.google.ar.sceneform.ux.TranslationController: com.google.ar.sceneform.math.Quaternion calculateFinalDesiredLocalRotation(com.google.ar.sceneform.math.Quaternion)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,int,int,int,int)
com.google.ar.sceneform.Camera: float getNearClipPlane()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addAxisSystem(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
com.google.ar.core.Session: void stopRecording()
com.google.ar.schemas.lull.MaterialDef: com.google.ar.schemas.lull.MaterialTextureDef textures(int)
com.google.ar.sceneform.lullmodel.ArcDef: ArcDef()
com.google.android.filament.TextureSampler: int nGetWrapModeR(int)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: void addMatSha1sum(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getRight()
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion slerp(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion,float)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addTargetMeshes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Platform: boolean validateSurface(java.lang.Object)
com.google.ar.schemas.sceneform.ParameterDef: com.google.ar.schemas.sceneform.ParameterInitDef initialValue()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,float)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.google.ar.sceneform.rendering.ExternalTexture: ExternalTexture()
com.google.ar.sceneform.rendering.PlaneRenderer: void lambda$loadShadowMaterial$0(com.google.ar.sceneform.rendering.Material)
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState valueOf(java.lang.String)
com.google.ar.schemas.sceneform.DoubleVec2Init: void startDoubleVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.BoolVec3Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,boolean)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer indices32AsByteBuffer()
com.google.ar.sceneform.rendering.LightProbe: void setRotation(com.google.ar.sceneform.math.Quaternion)
com.google.android.filament.Fence$FenceStatus: Fence$FenceStatus(java.lang.String,int)
com.google.ar.core.Config: long nativeGetAugmentedImageDatabase(long,long)
com.google.android.filament.Platform$UnknownPlatform: boolean validateStreamSource(java.lang.Object)
com.google.android.filament.LightManager: void nSetSunHaloSize(long,int,float)
com.google.ar.sceneform.utilities.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])
com.google.ar.schemas.sceneform.DoubleVec3Init: com.google.ar.schemas.sceneform.DoubleVec3Init __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.LightProbe: com.google.ar.schemas.sceneform.LightingDef lambda$loadInBackground$1(java.util.concurrent.Callable)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.ar.schemas.lull.VariantArrayDef: int endVariantArrayDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Session: void setPlaybackDataset(java.lang.String)
com.google.ar.sceneform.math.Vector3: Vector3()
com.google.ar.schemas.lull.ModelDef: void startLodsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.Vec3Init: com.google.ar.schemas.sceneform.Vec3Init __assign(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.google.ar.core.Config: int nativeGetUpdateMode(long,long)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
com.google.ar.sceneform.rendering.RenderableInstance: void prepareForDraw()
com.google.flatbuffers.FlatBufferBuilder: void clear()
com.google.ar.sceneform.rendering.LightProbe: void dispose()
com.google.ar.core.Session: void loadDynamicSymbolsAfterSessionCreate()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
com.google.ar.sceneform.collision.Ray: com.google.ar.sceneform.math.Vector3 getDirection()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.google.ar.sceneform.ux.BaseTransformationController: void onFinished(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.sceneform.NodeParent: void onAddChild(com.google.ar.sceneform.Node)
com.google.ar.sceneform.rendering.MaterialInternalData: com.google.android.filament.Material getFilamentMaterial()
com.google.ar.core.Config$CloudAnchorMode: com.google.ar.core.Config$CloudAnchorMode forNumber(int)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void addCollidable(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.proguard.UsedByReflection: java.lang.String value()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,java.util.concurrent.Callable)
com.google.ar.core.Earth: long nativeResolveAnchorOnTerrain(long,long,double,double,double,float,float,float,float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.flatbuffers.FlatBufferBuilder: void putByte(byte)
com.google.ar.sceneform.HitTestResult: HitTestResult()
com.google.ar.core.InstallActivity: void -$$Nest$mshowSpinner(com.google.ar.core.InstallActivity)
com.google.ar.core.GeospatialPose: double getLatitude()
com.google.ar.sceneform.lullmodel.SkeletonDef: com.google.ar.sceneform.lullmodel.SkeletonDef getRootAsSkeletonDef(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.TwistGestureRecognizer getTwistRecognizer()
com.google.ar.schemas.lull.DataVec4: int endDataVec4(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.View: int nGetAmbientOcclusion(long)
com.google.ar.schemas.sceneform.Vec4Init: void addY(com.google.flatbuffers.FlatBufferBuilder,float)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.Renderer createRenderer()
com.google.ar.core.Frame: com.google.ar.core.Pose getAndroidSensorPose()
com.google.ar.core.ArCoreApk$InstallStatus: com.google.ar.core.ArCoreApk$InstallStatus[] $values()
com.google.android.filament.Platform: boolean validateStreamSource(java.lang.Object)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
com.google.android.filament.EntityManager: int nCreate(long)
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.google.ar.sceneform.rendering.Vertex: void setColor(com.google.ar.sceneform.rendering.Color)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry getModelRenderableRegistry()
com.google.ar.core.Session: void nativeStartRecording(long,long)
com.google.ar.schemas.lull.Color: float g()
com.google.ar.schemas.sceneform.SamplerParamsDef: com.google.ar.schemas.sceneform.SamplerParamsDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.ux.PlaneDiscoveryController: void hide()
com.google.ar.schemas.sceneform.LightingCubeFaceDef: com.google.ar.schemas.sceneform.LightingCubeFaceDef getRootAsLightingCubeFaceDef(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.ar.sceneform.SkeletonNode: void updateMappedNodes()
com.google.ar.sceneform.R$string: R$string()
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability[] $values()
com.google.ar.sceneform.Node: void setOnTapListener(com.google.ar.sceneform.Node$OnTapListener)
com.google.android.filament.VertexBuffer: void access$100(long,int)
com.google.ar.sceneform.ux.TransformationSystem: void setSelectionVisualizer(com.google.ar.sceneform.ux.SelectionVisualizer)
com.google.ar.core.Session$Feature: Session$Feature(java.lang.String,int,int)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion inverted()
com.google.ar.core.exceptions.UnavailableArcoreNotInstalledException: UnavailableArcoreNotInstalledException()
com.google.ar.schemas.lull.ModelPipelineImportDef: boolean ensureVertexOrientationWNotZero()
com.google.ar.schemas.lull.SkeletonDef: com.google.ar.schemas.lull.SkeletonDef getRootAsSkeletonDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder builder()
com.google.ar.sceneform.rendering.ModelRenderable: com.google.ar.sceneform.rendering.ModelRenderable makeCopy()
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.google.ar.schemas.lull.DataVec2: void startDataVec2(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.DoubleVec3Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,double)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d forNumber(int)
com.google.ar.sceneform.rendering.RenderableInstance: void setBlendOrderAt(int,int)
com.google.ar.sceneform.rendering.Renderer: int getDesiredHeight()
com.google.ar.core.GeospatialPose: double nativeGetHeading(long,long)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: void addSource(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.SceneView: SceneView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: android.content.Context getContext()
com.google.ar.schemas.lull.BlendShape: int createVertexIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.sceneform.ParameterInitDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.TransformDef transform()
com.google.ar.sceneform.ArSceneView: void resume()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.sceneform.rendering.Renderer: void resizeImp(int,int)
com.google.flatbuffers.Struct: Struct()
com.google.android.filament.MaterialInstance: void nSetParameterFloat2(long,java.lang.String,float,float)
com.google.android.filament.NioUtils: int getBaseArrayOffset(java.nio.Buffer,int)
com.google.ar.core.Session: com.google.ar.core.Session$FeatureMapQuality estimateFeatureMapQualityForHosting(com.google.ar.core.Pose)
com.google.ar.sceneform.utilities.FlatBufferUtils: FlatBufferUtils()
com.google.ar.schemas.sceneform.AnimationDef: com.google.ar.schemas.sceneform.AnimationDef getRootAsAnimationDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.AnimationDef)
com.google.ar.core.Session: long nativeHostCloudAnchorWithTtl(long,long,int)
com.google.android.filament.LightManager: float nGetSunHaloFalloff(long,int)
com.google.android.filament.RenderableManager: void setReceiveShadows(int,boolean)
com.google.ar.sceneform.ux.BaseGestureRecognizer: void tryCreateGestures(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: com.google.ar.sceneform.lullmodel.KeyVariantPairDef getRootAsKeyVariantPairDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.KeyVariantPairDef)
com.google.ar.sceneform.ux.TranslationController: boolean canStartTransformation(com.google.ar.sceneform.ux.DragGesture)
com.google.ar.schemas.lull.DataString: java.lang.String value()
com.google.ar.schemas.lull.Color: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.AugmentedImageDatabase: void serialize(java.io.OutputStream)
com.google.ar.sceneform.ArSceneView: com.google.ar.sceneform.rendering.PlaneRenderer getPlaneRenderer()
com.google.ar.sceneform.utilities.LoadHelper: int rawResourceNameToIdentifier(android.content.Context,java.lang.String)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder geometry(int,com.google.android.filament.RenderableManager$PrimitiveType,com.google.android.filament.VertexBuffer,com.google.android.filament.IndexBuffer,int,int)
com.google.ar.core.Pose: java.lang.String toString()
com.google.android.filament.Camera: void nGetModelMatrix(long,float[])
com.google.ar.core.SharedCamera: void -$$Nest$monDeviceOpened(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraDevice)
com.google.ar.schemas.lull.ModelPipelineDef: void startModelPipelineDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.Vec3: com.google.ar.schemas.lull.Vec3 __assign(int,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.ar.sceneform.ux.AugmentedFaceNode: void setFaceMeshTexture(com.google.ar.sceneform.rendering.Texture)
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus[] values()
com.google.ar.schemas.sceneform.SamplerParamsDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.LightManager: void nSetIntensity(long,int,float)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.ar.core.GeospatialPose: double nativeGetVerticalAccuracy(long,long)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: void addSource(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.MaterialDef materials(int)
com.google.ar.sceneform.rendering.PlaneRenderer: java.lang.Void lambda$loadShadowMaterial$1(java.lang.Throwable)
com.google.android.filament.Colors: float[] toLinear(com.google.android.filament.Colors$RgbType,float,float,float)
com.google.ar.sceneform.ux.BaseTransformationController: void onActivated(com.google.ar.sceneform.Node)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: EnvironmentalHdrParameters(com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.google.ar.core.AugmentedFace: java.nio.ByteBuffer nativeGetMeshTriangleIndicesByteBuffer(long,long)
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.rendering.Material getMaterial()
com.google.ar.sceneform.rendering.MaterialInternalDataGltfImpl: void onDispose()
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: void addCenter(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.VariantArrayDef: int valuesLength()
com.google.android.filament.Fence: com.google.android.filament.Fence$FenceStatus wait(com.google.android.filament.Fence$Mode,long)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.VertexAttribute blendAttributes(com.google.ar.schemas.lull.VertexAttribute,int)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: java.nio.ByteBuffer sourceAsByteBuffer()
com.google.ar.core.Frame: Frame()
com.google.android.filament.MaterialInstance$IntElement: com.google.android.filament.MaterialInstance$IntElement valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.DataVec2: com.google.ar.sceneform.lullmodel.DataVec2 getRootAsDataVec2(java.nio.ByteBuffer)
com.google.android.filament.Camera: void nGetLeftVector(long,float[])
com.google.ar.core.Pose: void rotateVector(float[],int,float[],int)
com.google.ar.sceneform.rendering.AnimatorImpl$Factory: com.google.ar.sceneform.rendering.AnimatorImpl create(com.google.ar.sceneform.rendering.AnimationData,com.google.ar.sceneform.rendering.ModelRenderable)
com.google.android.filament.RenderTarget: int getLayer(com.google.android.filament.RenderTarget$AttachmentPoint)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder intensity(float,float)
com.google.ar.schemas.lull.DataVec3: DataVec3()
com.google.android.filament.Stream: void clearNativeObject()
com.google.android.filament.TransformManager: void nSetParent(long,int,int)
com.google.android.filament.MaterialInstance: void setMaskThreshold(float)
com.google.ar.core.ImageMetadata: float[] nativeGetFloatArrayFromMetadataEntry(long,long)
com.google.ar.core.Camera: void getProjectionMatrix(float[],int,float,float)
com.google.ar.schemas.sceneform.Vec4Init: com.google.ar.schemas.sceneform.Vec4Init getRootAsVec4Init(java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.TextureSampler$CompareMode: com.google.android.filament.TextureSampler$CompareMode valueOf(java.lang.String)
com.google.ar.core.exceptions.ImageInsufficientQualityException: ImageInsufficientQualityException()
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Platform$UnknownPlatform: boolean validateSharedContext(java.lang.Object)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
com.google.ar.sceneform.Node: void setRenderable(com.google.ar.sceneform.rendering.Renderable)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setSource(android.content.Context,int)
com.google.ar.sceneform.ux.TwistGesture: float getDeltaRotationDegrees()
com.google.ar.sceneform.lullmodel.VariantArrayDef: com.google.ar.sceneform.lullmodel.VariantArrayDefImpl values(int)
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability forNumber(int)
com.google.ar.sceneform.math.Matrix: com.google.ar.sceneform.math.Vector3 transformDirection(com.google.ar.sceneform.math.Vector3)
com.google.ar.core.SharedCamera: void nativeSharedCameraOnOpened(long,android.hardware.camera2.CameraDevice)
com.google.ar.core.ArCoreApk: com.google.ar.core.ArCoreApk$InstallStatus requestInstall(android.app.Activity,boolean)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: ModelPipelineDef()
com.google.android.filament.TransformManager: void commitLocalTransformTransaction()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod[] $values()
com.google.ar.core.AugmentedImageDatabase: int nativeAddImage(long,long,java.lang.String,java.nio.ByteBuffer,int,int,int)
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer shaderToMeshBonesAsByteBuffer()
com.google.ar.sceneform.rendering.Texture$Builder: Texture$Builder()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.ar.sceneform.rendering.PlaneRenderer: void setShadowReceiver(boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
com.google.ar.schemas.lull.DataInt: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.dependencies.a: a()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.filament.Platform: void log(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void startRenderablesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.TextureSampler: void setCompareFunction(com.google.android.filament.TextureSampler$CompareFunction)
com.google.android.filament.IndexBuffer: void access$200(long,int)
com.google.ar.core.Frame: void recordTrackData(java.util.UUID,java.nio.ByteBuffer)
com.google.ar.sceneform.ux.TranslationController: boolean isTransforming()
com.google.ar.schemas.lull.ModelPipelineImportDef: ModelPipelineImportDef()
com.google.ar.core.exceptions.FineLocationPermissionNotGrantedException: FineLocationPermissionNotGrantedException(java.lang.String)
com.google.ar.schemas.lull.VariantMapDef: com.google.ar.schemas.lull.KeyVariantPairDef values(int)
com.google.ar.sceneform.rendering.Renderer: void postRenderImp()
com.google.flatbuffers.Table: boolean __has_identifier(java.nio.ByteBuffer,java.lang.String)
com.google.android.filament.Engine: com.google.android.filament.Engine$Backend getBackend()
com.google.ar.core.exceptions.SessionNotPausedException: SessionNotPausedException()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.lullmodel.DataBool: com.google.ar.sceneform.lullmodel.DataBool __assign(int,java.nio.ByteBuffer)
com.google.flatbuffers.Table: int __indirect(int)
com.google.android.filament.Texture: int nGetDepth(long,int)
com.google.ar.core.Earth: com.google.ar.core.Earth$EarthState getEarthState()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setRemoteSourceHelper(android.content.Context,android.net.Uri,boolean)
com.google.ar.sceneform.lullmodel.Vec2: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Session: Session(android.content.Context)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
com.google.ar.sceneform.rendering.Light: void setColor(com.google.ar.sceneform.rendering.Color)
com.google.ar.sceneform.collision.CollisionShape: com.google.ar.sceneform.utilities.ChangeId getId()
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.rendering.RenderableInstance createInstance(com.google.ar.sceneform.common.TransformProvider)
com.google.ar.schemas.sceneform.NullInit: com.google.ar.schemas.sceneform.NullInit __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.DataString: com.google.ar.schemas.lull.DataString __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.BlendShape blendShapes(com.google.ar.schemas.lull.BlendShape,int)
com.google.ar.sceneform.lullmodel.Rect: float w()
com.google.ar.schemas.lull.ModelPipelineDef: void addCollidable(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Engine: long nGetLightManager(long)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability valueOf(java.lang.String)
com.google.ar.sceneform.rendering.Material: com.google.ar.sceneform.rendering.Material makeCopy()
com.google.ar.sceneform.lullmodel.TextureDef: void addWrapT(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$Builder setWrapModeT(com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode)
com.google.ar.sceneform.rendering.Renderable$Builder: java.util.concurrent.CompletableFuture loadRenderableFromGltf(android.content.Context,com.google.ar.sceneform.rendering.Renderable,byte[])
com.google.android.filament.Box: Box(float[],float[])
com.google.ar.schemas.lull.ModelPipelineMaterialDef: com.google.ar.schemas.lull.ModelPipelineMaterialDef getRootAsModelPipelineMaterialDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelPipelineMaterialDef)
com.google.ar.sceneform.ux.ScaleController: float getClampedScaleRatio()
com.google.ar.schemas.lull.VariantDef: VariantDef()
com.google.android.filament.TextureSampler: int nGetCompareFunction(int)
com.google.ar.schemas.lull.ModelPipelineImportDef: java.lang.String targetMeshes(int)
com.google.android.filament.LightManager: int nGetType(long,int)
com.google.ar.sceneform.lullmodel.DataQuat: com.google.ar.sceneform.lullmodel.Quat value(com.google.ar.sceneform.lullmodel.Quat)
com.google.ar.sceneform.lullmodel.ModelDef: void addLods(com.google.flatbuffers.FlatBufferBuilder,int)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.ar.sceneform.lullmodel.VariantArrayDef: void addValues(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Frame: long nativeAcquireImageMetadata(long,long)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry getViewRenderableRegistry()
com.google.ar.core.Pose: Pose(float,float,float,float,float,float,float)
com.google.ar.schemas.sceneform.SamplerDef: int data(int)
com.google.ar.sceneform.R$style: R$style()
com.google.android.filament.Texture: long access$800(long,long)
com.google.ar.sceneform.rendering.Renderable$Builder: java.util.concurrent.CompletableFuture build()
com.google.android.filament.Engine: long getNativeObject()
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight$Builder radiance(int,float[])
com.google.ar.core.ImageMetadata: android.util.Rational[] getRationalArray(int)
com.google.ar.sceneform.Node: void onTransformChange(com.google.ar.sceneform.Node)
com.google.ar.core.AugmentedImageDatabase: int nativeAddImageWithPhysicalSize(long,long,java.lang.String,java.nio.ByteBuffer,int,int,int,float)
com.google.ar.sceneform.rendering.MaterialParameters: void setInt2(java.lang.String,int,int)
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Texture: com.google.android.filament.Texture$InternalFormat getInternalFormatForUsage(com.google.ar.sceneform.rendering.Texture$Usage)
com.google.ar.sceneform.rendering.Material: void setInt2(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Builder setColorTemperature(float)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.filament.Fence: void clearNativeObject()
com.google.ar.sceneform.rendering.Renderer: boolean isFrontFaceWindingInverted()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyVertexBuffer(com.google.android.filament.VertexBuffer)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
com.google.ar.core.SharedCamera: android.hardware.camera2.CameraCaptureSession$StateCallback createARSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback,android.os.Handler)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.android.filament.RenderableManager: void nSetLayerMask(long,int,int,int)
androidx.fragment.app.Fragment: boolean isDetached()
com.google.ar.core.Point$OrientationMode: com.google.ar.core.Point$OrientationMode valueOf(java.lang.String)
com.google.ar.core.exceptions.NotYetAvailableException: NotYetAvailableException()
com.google.ar.schemas.sceneform.LightingCubeDef: LightingCubeDef()
com.google.ar.schemas.sceneform.SceneformBundleDef: void addMaterials(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.LightingDef: void addShCoefficients(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.EntityManager: void nDestroy(long,int)
com.google.ar.sceneform.Camera: void setWorldRotation(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.lullmodel.AxisSystem: AxisSystem()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.google.android.filament.VertexBuffer: int nSetBufferAt(long,long,int,java.nio.Buffer,int,int,int,java.lang.Object,java.lang.Runnable)
com.google.ar.core.CameraConfigFilter: void finalize()
com.google.ar.sceneform.rendering.MaterialParameters: void setFloat4(java.lang.String,float,float,float,float)
androidx.fragment.app.Fragment: void onStop()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.google.ar.schemas.lull.VariantArrayDefImpl: int createVariantArrayDefImpl(com.google.flatbuffers.FlatBufferBuilder,byte,int)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.ar.sceneform.rendering.PlaneRenderer: java.util.concurrent.CompletableFuture getMaterial()
com.google.ar.schemas.lull.Recti: Recti()
com.google.ar.sceneform.rendering.EngineInstance: void createEngine()
com.google.ar.schemas.sceneform.MaterialDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.DataHashValue: void addValue(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$Builder setMagFilter(com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter)
com.google.ar.sceneform.NodeParent: NodeParent()
com.google.ar.sceneform.ux.PinchGesture: void onFinish()
com.google.ar.sceneform.ux.R$interpolator: R$interpolator()
com.google.ar.sceneform.ux.TransformationSystem: TransformationSystem(android.util.DisplayMetrics,com.google.ar.sceneform.ux.SelectionVisualizer)
com.google.android.filament.RenderTarget: long getNativeObject()
com.google.android.filament.RenderableManager: void nBuilderMaterial(long,int,long)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.google.ar.core.Session$Feature: com.google.ar.core.Session$Feature valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.OptionalBool: OptionalBool()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
com.google.ar.core.Config: Config()
androidx.appcompat.widget.SearchView: int getInputType()
com.google.ar.sceneform.Node: void markTransformChangedRecursively(int,com.google.ar.sceneform.Node)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.SamplerDef samplers(int)
com.google.ar.sceneform.collision.Ray: Ray(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.lull.Vec2i: int y()
com.google.ar.sceneform.rendering.FixedWidthViewSizer: float getWidth()
com.google.ar.schemas.lull.ModelIndexRange: com.google.ar.schemas.lull.ModelIndexRange __assign(int,java.nio.ByteBuffer)
com.google.android.filament.MaterialInstance: void nSetParameterFloat(long,java.lang.String,float)
com.google.ar.schemas.sceneform.ScalarInit: ScalarInit()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addVertexAttributes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.Color: com.google.ar.schemas.lull.Color __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: void addMaterial(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: void startVariantArrayDefImpl(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelInstanceDef: void startVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int shaderToMeshBonesLength()
com.google.ar.sceneform.rendering.Renderer: void updateInstances()
com.google.ar.core.Session: com.google.ar.core.Anchor hostCloudAnchor(com.google.ar.core.Anchor)
com.google.ar.sceneform.collision.RayHit: void reset()
com.google.ar.core.CameraConfig$DepthSensorUsage: CameraConfig$DepthSensorUsage(java.lang.String,int,int)
com.google.ar.sceneform.rendering.Color: com.google.ar.sceneform.rendering.Color inverseTonemap()
com.google.ar.sceneform.Camera: void setFarClipPlane(float)
com.google.ar.schemas.sceneform.CompiledMaterialDef: void addSha1sum(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.android.UiHelper: int access$400(com.google.android.filament.android.UiHelper)
com.google.ar.schemas.lull.BlendShape: void addName(com.google.flatbuffers.FlatBufferBuilder,long)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.ar.sceneform.lullmodel.DataVec4: void startDataVec4(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry getRenderableInstanceCleanupRegistry()
com.google.ar.schemas.lull.MaterialTextureDef: void startUsagePerChannelVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.collision.CollisionShape: boolean rayIntersection(com.google.ar.sceneform.collision.Ray,com.google.ar.sceneform.collision.RayHit)
com.google.flatbuffers.Utf8: com.google.flatbuffers.Utf8 getDefault()
com.google.ar.core.Frame: void nativeRecordTrackData(long,long,byte[],byte[])
com.google.android.filament.Scene: void nAddEntities(long,int[])
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.google.ar.core.exceptions.CloudAnchorsNotConfiguredException: CloudAnchorsNotConfiguredException()
com.google.ar.core.AugmentedImage: float getExtentZ()
com.google.ar.sceneform.lullmodel.DataInt: int endDataInt(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.R$color: R$color()
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
com.google.ar.core.Config$InstantPlacementMode: Config$InstantPlacementMode(java.lang.String,int,int)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.google.ar.sceneform.rendering.SkeletonRig: boolean isAnimating(com.google.ar.sceneform.rendering.ModelRenderable)
com.google.ar.sceneform.Node: void removeLifecycleListener(com.google.ar.sceneform.Node$LifecycleListener)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef getRootAsModelPipelineRenderableDef(java.nio.ByteBuffer)
com.google.android.filament.AndroidPlatform: long getSharedContextNativeHandle(java.lang.Object)
com.google.android.filament.Texture: void access$500(long,int)
com.google.android.filament.Material: java.util.Set getRequiredAttributes()
com.google.ar.core.Anchor: void finalize()
com.google.ar.schemas.lull.KeyVariantPairDef: com.google.ar.schemas.lull.KeyVariantPairDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.ux.PlaneDiscoveryController: PlaneDiscoveryController(android.view.View)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.ModelDef getRootAsModelDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelDef)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
com.google.ar.sceneform.Scene: com.google.ar.sceneform.SceneView getView()
com.google.android.filament.View$DynamicResolutionOptions: View$DynamicResolutionOptions()
com.google.ar.schemas.lull.DataVec2: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.MaterialInstance: void nSetParameterInt3(long,java.lang.String,int,int,int)
com.google.ar.schemas.sceneform.SamplerDef: java.lang.String file()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.ar.sceneform.rendering.Renderer: void setLightProbe(com.google.ar.sceneform.rendering.LightProbe)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer indices16InByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.RecordingConfig: void finalize()
com.google.ar.schemas.lull.BlendShape: int vertexData(int)
com.google.android.filament.android.UiHelper$TextureViewHandler: void detach()
com.google.ar.sceneform.rendering.MaterialFactory: com.google.ar.sceneform.rendering.Material lambda$makeOpaqueWithTexture$2(com.google.ar.sceneform.rendering.Texture,com.google.ar.sceneform.rendering.Material)
com.google.android.filament.MaterialInstance$BooleanElement: com.google.android.filament.MaterialInstance$BooleanElement valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: java.nio.ByteBuffer attributesAsByteBuffer()
com.google.android.filament.LightManager: void nSetIntensity(long,int,float,float)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 up()
com.google.ar.schemas.lull.KeyVariantPairDef: int createKeyVariantPairDef(com.google.flatbuffers.FlatBufferBuilder,int,long,byte,int)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.Fence createFence(com.google.android.filament.Fence$Type)
com.google.ar.sceneform.collision.RayHit: void setPoint(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.ux.BaseArFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.ar.sceneform.AnchorNode: void onUpdate(com.google.ar.sceneform.FrameTime)
com.google.android.filament.Renderer: void render(com.google.android.filament.View)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.google.ar.sceneform.math.Vector3Evaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.google.ar.sceneform.rendering.LightProbe: com.google.ar.sceneform.math.Quaternion getRotation()
com.google.ar.core.CameraConfig$StereoCameraUsage: com.google.ar.core.CameraConfig$StereoCameraUsage[] $values()
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineImportDef sources(com.google.ar.schemas.lull.ModelPipelineImportDef,int)
com.google.ar.sceneform.rendering.LightProbe: void setLightEstimate(com.google.ar.sceneform.rendering.Color,float)
com.google.android.filament.Box: void setCenter(float,float,float)
com.google.ar.schemas.sceneform.DoubleInit: double value()
com.google.ar.core.Session: boolean isDepthModeSupported(com.google.ar.core.Config$DepthMode)
com.google.android.filament.MaterialInstance$BooleanElement: com.google.android.filament.MaterialInstance$BooleanElement[] values()
com.google.android.filament.LightManager: void nBuilderDirection(long,float,float,float)
com.google.ar.sceneform.Node: com.google.ar.sceneform.rendering.Renderer getRendererOrDie()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.RuntimeAssetDef runtime()
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.TextureDef textures(int)
com.google.ar.sceneform.lullmodel.BlendShape: void startVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Track: Track(com.google.ar.core.Session)
com.google.android.filament.Texture: int nGetWidth(long,int)
com.google.ar.sceneform.AnchorNode: void setAnchor(com.google.ar.core.Anchor)
com.google.android.filament.Stream: void access$200(long,long)
com.google.ar.sceneform.rendering.ModelRenderable: int getBoneParentIndex(int)
com.google.android.filament.LightManager: void access$700(long,float)
com.google.ar.sceneform.math.Quaternion: Quaternion(com.google.ar.sceneform.math.Vector3)
com.google.android.filament.Camera: float[] getUpVector(float[])
com.google.ar.core.AugmentedFace$RegionType: com.google.ar.core.AugmentedFace$RegionType valueOf(java.lang.String)
com.google.ar.sceneform.collision.Box: void setSize(com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.SubmeshAabb aabbs(com.google.ar.schemas.lull.SubmeshAabb,int)
com.google.ar.schemas.lull.Vec3: int createVec3(com.google.flatbuffers.FlatBufferBuilder,float,float,float)
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Color access$300(com.google.ar.sceneform.rendering.Vertex$Builder)
com.google.android.filament.RenderableManager: void access$800(long,int)
com.google.android.filament.RenderableManager: int nSetBonesAsMatrices(long,int,java.nio.Buffer,int,int,int)
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder width(int)
com.google.ar.sceneform.rendering.Light$Builder: boolean access$300(com.google.ar.sceneform.rendering.Light$Builder)
com.google.ar.sceneform.rendering.EngineInstance: void enableHeadlessEngine()
com.google.android.filament.TextureSampler$WrapMode: com.google.android.filament.TextureSampler$WrapMode[] values()
com.google.ar.core.Camera: int nativeGetTrackingState(long,long)
com.google.ar.sceneform.SkeletonNode: void applyBoneTransformToNode(int,com.google.ar.sceneform.SkeletonNode$NodeBinding)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: com.google.ar.sceneform.lullmodel.MaterialTextureDef getRootAsMaterialTextureDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.MaterialTextureDef)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyCamera(com.google.android.filament.Camera)
com.google.ar.schemas.sceneform.TransformDef: com.google.ar.schemas.sceneform.TransformDef getRootAsTransformDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.TransformDef)
com.google.ar.sceneform.lullmodel.SkeletonDef: com.google.ar.sceneform.lullmodel.Mat4x3 boneTransforms(com.google.ar.sceneform.lullmodel.Mat4x3,int)
com.google.ar.sceneform.lullmodel.VariantArrayDef: com.google.ar.sceneform.lullmodel.VariantArrayDef __assign(int,java.nio.ByteBuffer)
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer$Builder attribute(com.google.android.filament.VertexBuffer$VertexAttribute,int,com.google.android.filament.VertexBuffer$AttributeType)
com.google.ar.sceneform.ux.DragGesture: void onFinish()
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode forNumber(int)
com.google.ar.core.DepthPoint: DepthPoint(long,com.google.ar.core.Session)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight$Builder intensity(float)
com.google.android.filament.Engine: com.google.android.filament.Engine create()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.ar.core.CameraConfig: int nativeGetStereoCameraUsage(long,long)
com.google.ar.schemas.sceneform.CompiledMaterialDef: int compiledMaterialLength()
com.google.android.filament.View: void setAmbientOcclusion(com.google.android.filament.View$AmbientOcclusion)
com.google.ar.sceneform.ux.FootprintSelectionVisualizer: com.google.ar.sceneform.rendering.ModelRenderable getFootprintRenderable()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$MinFilter getMinFilter()
com.google.ar.sceneform.assets.RenderableSource$SourceType: com.google.ar.sceneform.assets.RenderableSource$SourceType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.ar.sceneform.lullmodel.DataVec3: com.google.ar.sceneform.lullmodel.DataVec3 getRootAsDataVec3(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.VersionDef: void addMinorVersion(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.BaseGesture: BaseGesture(com.google.ar.sceneform.ux.GesturePointersUtility)
com.google.android.filament.Material: java.lang.String getName()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode forNumber(int)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.android.filament.android.UiHelper$2: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.google.ar.schemas.lull.Mat4x3: com.google.ar.schemas.lull.Vec4 c2(com.google.ar.schemas.lull.Vec4)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.google.ar.schemas.sceneform.DoubleInit: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Node: void dispatchUpdate(com.google.ar.sceneform.FrameTime)
com.google.ar.sceneform.rendering.ViewRenderable: void setHorizontalAlignment(com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment)
com.google.ar.schemas.sceneform.SceneformBundleDef: void startAnimationsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelInstanceDef: int createBlendShapesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.ux.BaseTransformableNode: void removeTransformationController(com.google.ar.sceneform.ux.BaseTransformationController)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.google.ar.schemas.sceneform.IntVec2Init: com.google.ar.schemas.sceneform.IntVec2Init __assign(int,java.nio.ByteBuffer)
com.google.ar.core.exceptions.SessionPausedException: SessionPausedException()
com.google.ar.sceneform.lullmodel.TextureDef: void startDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.VersionDef: int createVersionDef(com.google.flatbuffers.FlatBufferBuilder,float,int)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda0: void run()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineImportDef sources(int)
com.google.ar.sceneform.Node: void onDeactivate()
com.google.ar.schemas.lull.ModelInstanceDef: void startBlendShapesVector(com.google.flatbuffers.FlatBufferBuilder,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.ar.sceneform.NodeParent: void removeChild(com.google.ar.sceneform.Node)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: java.lang.String source()
com.google.ar.sceneform.rendering.Renderable$Builder: java.lang.Boolean hasSource()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
com.google.ar.core.TrackData: void close()
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer tangentDataInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.TextureSampler$WrapMode: TextureSampler$WrapMode(java.lang.String,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: void setName(java.lang.String)
com.google.ar.schemas.sceneform.SamplerInit: void startSamplerInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.MaterialInstance: void nSetPolygonOffset(long,float,float)
com.google.ar.sceneform.SceneView: long getImpHandle()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
com.google.ar.sceneform.lullmodel.DataInt: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.nio.ByteBuffer sha1sumInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.TransformManager: int create(int,int,float[])
com.google.android.filament.RenderTarget: int nGetFace(long,int)
com.google.android.filament.Texture$Usage: Texture$Usage()
com.google.android.filament.IndexBuffer: void access$500(long)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.ar.sceneform.rendering.Material: void setBoolean2(java.lang.String,boolean,boolean)
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder height(int)
com.google.android.filament.Material: float nGetMaskThreshold(long)
com.google.ar.sceneform.rendering.ThreadPools: java.util.concurrent.Executor getThreadPoolExecutor()
com.google.ar.schemas.lull.VertexAttribute: com.google.ar.schemas.lull.VertexAttribute __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.InputDef: java.nio.ByteBuffer pathAsByteBuffer()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.AnimationDef animations(com.google.ar.schemas.sceneform.AnimationDef,int)
com.google.ar.schemas.lull.DataBool: int endDataBool(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.ArFragment: ArFragment()
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: void startSuggestedCollisionShapeDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.RecordingConfig: boolean nativeGetAutoStopOnPause(long,long)
com.google.android.filament.Colors$RgbaType: com.google.android.filament.Colors$RgbaType[] values()
com.google.ar.core.TrackableBase: long nativeCreateAnchor(long,long,com.google.ar.core.Pose)
com.google.ar.core.dependencies.g: com.google.ar.core.dependencies.h b(android.os.IBinder)
com.google.ar.schemas.lull.TextureDef: int createDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.lullmodel.DeviceType: DeviceType()
com.google.ar.sceneform.lullmodel.DataBytes: int value(int)
com.google.ar.sceneform.rendering.LightProbe: boolean isReady()
com.google.ar.core.Config$UpdateMode: Config$UpdateMode(java.lang.String,int,int)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.flatbuffers.FlatBufferBuilder: void addOffset(int)
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean checkAndroidApiAvailable()
com.google.android.filament.View: void clearNativeObject()
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.PinchGestureRecognizer getPinchRecognizer()
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
com.google.ar.schemas.sceneform.IntVec3Init: com.google.ar.schemas.sceneform.IntVec3Init getRootAsIntVec3Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.IntVec3Init)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.ar.sceneform.ux.GesturePointersUtility: float inchesToPixels(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
com.google.android.filament.Engine: void nDestroyMaterial(long,long)
com.google.android.filament.android.UiHelper$RenderSurface: void resize(int,int)
com.google.ar.schemas.sceneform.SamplerCompareFunc: SamplerCompareFunc()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.ar.core.RecordingConfig: void nativeSetRecordingRotation(long,long,int)
com.google.android.filament.IndexBuffer: void setBuffer(com.google.android.filament.Engine,java.nio.Buffer,int,int,java.lang.Object,java.lang.Runnable)
com.google.ar.schemas.lull.BlendShape: void startTangentIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.DataFloat: int endDataFloat(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.AabbDef: com.google.ar.sceneform.lullmodel.Vec3 max()
com.google.ar.schemas.lull.ArcDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.VertexAttribute vertexAttributes(com.google.ar.schemas.lull.VertexAttribute,int)
com.google.android.filament.Fence$Mode: com.google.android.filament.Fence$Mode[] values()
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
com.google.ar.sceneform.math.Matrix: void makeScale(float)
com.google.ar.schemas.lull.ModelPipelineImportDef: boolean recenter()
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material$Builder setSource(android.content.Context,int)
com.google.ar.sceneform.ux.BaseGesture: boolean hasStarted()
com.google.ar.schemas.lull.Vec2i: com.google.ar.schemas.lull.Vec2i __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.R$integer: R$integer()
com.google.ar.core.TrackableBase: void finalize()
com.google.android.filament.Material: boolean isDoubleSided()
com.google.ar.schemas.sceneform.InputDef: void addPath(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.SamplerDef samplers(com.google.ar.schemas.sceneform.SamplerDef,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.google.ar.core.RecordingConfig: com.google.ar.core.RecordingConfig setMp4DatasetUri(android.net.Uri)
com.google.ar.core.Plane: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
com.google.ar.sceneform.lullmodel.TextureDef: int magFilter()
com.google.ar.schemas.sceneform.BoolVec4Init: void addW(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.R$drawable: R$drawable()
com.google.ar.schemas.lull.SkeletonDef: SkeletonDef()
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer vertexIndices32InByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.lull.Color: Color()
com.google.android.filament.IndexBuffer: void nBuilderIndexCount(long,int)
com.google.ar.schemas.lull.TextureDef: int wrapS()
com.google.ar.sceneform.lullmodel.ModelDef: int version()
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
com.google.flatbuffers.Utf8: java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.google.android.filament.IndirectLight: void nGetColorEstimate(long,float[],float,float,float)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
com.google.ar.sceneform.lullmodel.MaterialDef: void startMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.Vec3Init: float x()
com.google.ar.schemas.lull.MaterialTextureDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Camera: float nGetCullingFar(long)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: KeyVariantPairDef()
com.google.ar.schemas.sceneform.BoolVec4Init: boolean y()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.ar.sceneform.math.Matrix: void set(com.google.ar.sceneform.math.Matrix)
com.google.android.filament.Engine: long nCreateFence(long,int)
com.google.ar.core.LightEstimate: float[] getEnvironmentalHdrMainLightIntensity()
com.google.ar.core.exceptions.FatalException: FatalException()
com.google.android.filament.Platform: long getSharedContextNativeHandle(java.lang.Object)
com.google.ar.core.LightEstimate: void nativeGetColorCorrection(long,long,float[],int)
com.google.ar.sceneform.lullmodel.Vec4: Vec4()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.ar.core.CameraConfigFilter: java.util.EnumSet getTargetFps()
com.google.ar.sceneform.rendering.CleanupRegistry: void destroyAllResources()
com.google.ar.core.Session: com.google.ar.core.CameraConfig getCameraConfig()
androidx.window.core.Version: int hashCode()
com.google.android.filament.VertexBuffer$QuatType: com.google.android.filament.VertexBuffer$QuatType[] values()
com.google.ar.schemas.lull.DataHashValue: com.google.ar.schemas.lull.DataHashValue getRootAsDataHashValue(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataHashValue)
com.google.android.filament.MaterialInstance: void unsetScissor()
com.google.android.filament.IndirectLight: long access$700(long,long)
com.google.ar.core.exceptions.RecordingFailedException: RecordingFailedException(java.lang.String)
com.google.ar.core.Session: Session(long)
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.rendering.LightProbe$Builder setSource(java.util.concurrent.Callable)
com.google.ar.sceneform.ux.ScaleController: boolean canStartTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.schemas.sceneform.Vec2Init: void addY(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.flatbuffers.Utf8: void encodeUtf8(java.lang.CharSequence,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.LullModel: com.google.android.filament.TextureSampler$MagFilter fromLullToMagFilter(com.google.ar.schemas.lull.TextureDef)
com.google.ar.schemas.sceneform.SceneformBundleDef: int compiledMaterialsLength()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.ar.core.exceptions.TextureNotSetException: TextureNotSetException(java.lang.String)
com.google.ar.sceneform.ux.ScaleController: float getMinScale()
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion identity()
com.google.ar.core.Point: com.google.ar.core.Point$OrientationMode getOrientationMode()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: int attributesLength()
com.google.ar.schemas.lull.SubmeshAabb: com.google.ar.schemas.lull.Vec3 minPosition()
com.google.ar.core.PointCloud: long nativeGetTimestamp(long,long)
com.google.flatbuffers.Table: int __vector_len(int)
com.google.android.filament.Stream: void access$400(long,int)
com.google.ar.core.Anchor$CloudAnchorState: boolean isError()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.ar.sceneform.lullmodel.LayoutFillOrder: java.lang.String name(int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.Scene getScene()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: com.google.ar.sceneform.rendering.RenderableDefinition$Builder setVertices(java.util.List)
com.google.ar.core.Track: void nativeSetMetadata(long,long,byte[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,com.google.android.filament.MaterialInstance$IntElement,int[],int,int)
com.google.ar.core.dependencies.i: i()
androidx.fragment.app.Fragment: boolean isAdded()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
com.google.android.filament.Material: long nGetDefaultInstance(long)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: int endLightingCubeFaceDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.ArImage: int nativeGetWidth(long,long)
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type[] $values()
com.google.android.filament.IndexBuffer: int nSetBuffer(long,long,java.nio.Buffer,int,int,int,java.lang.Object,java.lang.Runnable)
com.google.ar.schemas.sceneform.BoolVec3Init: boolean x()
com.google.ar.sceneform.collision.CollisionShape: com.google.ar.sceneform.collision.CollisionShape makeCopy()
com.google.android.filament.View: void nSetAntiAliasing(long,int)
com.google.android.filament.AndroidPlatform: void warn(java.lang.String)
com.google.ar.core.Frame: com.google.ar.core.LightEstimate getLightEstimate()
com.google.android.filament.LightManager: float[] getDirection(int,float[])
com.google.ar.schemas.lull.VariantArrayDefImpl: com.google.flatbuffers.Table value(com.google.flatbuffers.Table)
com.google.ar.sceneform.lullmodel.ModelDef: int texturesLength()
com.google.android.filament.Material$VertexDomain: com.google.android.filament.Material$VertexDomain[] values()
com.google.ar.sceneform.FrameTime: FrameTime()
com.google.ar.sceneform.lullmodel.Vec4: float x()
com.google.ar.sceneform.rendering.Light: Light(com.google.ar.sceneform.rendering.Light$Builder)
com.google.ar.sceneform.math.Matrix: boolean equals(com.google.ar.sceneform.math.Matrix,com.google.ar.sceneform.math.Matrix)
com.google.ar.core.Frame: void transformCoordinates2d(com.google.ar.core.Coordinates2d,java.nio.FloatBuffer,com.google.ar.core.Coordinates2d,java.nio.FloatBuffer)
com.google.ar.core.Config: com.google.ar.core.Config$GeospatialMode getGeospatialMode()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.google.ar.sceneform.Scene: void lambda$hitTestAll$0$Scene(com.google.ar.sceneform.HitTestResult,com.google.ar.sceneform.collision.Collider)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: java.nio.ByteBuffer matSha1sumInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.BaseTransformationController: void disconnectFromRecognizer()
com.google.ar.sceneform.lullmodel.BlendShape: int tangentIndices16(int)
com.google.ar.sceneform.lullmodel.DataInt: com.google.ar.sceneform.lullmodel.DataInt __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.collision.RayHit: com.google.ar.sceneform.math.Vector3 getPoint()
com.google.ar.sceneform.rendering.Renderer: void dispose()
com.google.android.filament.EntityManager: int[] create(int)
com.google.android.filament.View$DepthPrepass: com.google.android.filament.View$DepthPrepass valueOf(java.lang.String)
com.google.android.filament.Camera: void setExposure(float,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.google.ar.schemas.lull.MaterialTextureDef: java.nio.ByteBuffer usagePerChannelAsByteBuffer()
com.google.ar.schemas.lull.Vec2: Vec2()
com.google.ar.schemas.sceneform.TransformDef: com.google.ar.schemas.lull.Vec3 offset(com.google.ar.schemas.lull.Vec3)
com.google.android.filament.RenderableManager: void nBuilderBoundingBox(long,float,float,float,float,float,float)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
com.google.ar.sceneform.rendering.R$id: R$id()
com.google.ar.schemas.lull.SubmeshAabb: com.google.ar.schemas.lull.Vec3 maxPosition(com.google.ar.schemas.lull.Vec3)
com.google.ar.schemas.lull.DataString: DataString()
com.google.android.filament.IndirectLight: void nRadiance(long,int,float[])
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.core.Session createSession()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.filament.NioUtils: java.lang.Object getBaseArray(java.nio.Buffer)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.ar.sceneform.rendering.Color: Color(int)
com.google.ar.sceneform.rendering.TextureInternalData: com.google.android.filament.Texture getFilamentTexture()
com.google.ar.schemas.lull.ModelInstanceDef: boolean interleaved()
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.ar.sceneform.rendering.Material: void setBoolean(java.lang.String,boolean)
com.google.ar.schemas.sceneform.SceneformBundleDef: int lightingDefsLength()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.ar.core.LightEstimate: void nativeGetEnvironmentalHdrMainLightDirection(long,long,float[])
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
com.google.ar.sceneform.rendering.Material: void updateGltfMaterialInstance(com.google.android.filament.MaterialInstance)
com.google.ar.sceneform.utilities.LoadHelper: java.util.concurrent.Callable remoteUriToInputStreamCreator(android.net.Uri,java.util.Map)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.ar.sceneform.lullmodel.TextureDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.exceptions.MissingGlContextException: MissingGlContextException(java.lang.String)
com.google.android.filament.RenderTarget: long access$400(long,int,int)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void startModelPipelineImportDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.DataFloat: com.google.ar.sceneform.lullmodel.DataFloat __assign(int,java.nio.ByteBuffer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.ar.core.Anchor: boolean equals(java.lang.Object)
com.google.ar.sceneform.rendering.MaterialFactory: MaterialFactory()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.ar.core.Coordinates2d: Coordinates2d(java.lang.String,int,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.ar.sceneform.rendering.CameraStream: void initializeTexture(com.google.ar.core.Frame)
com.google.ar.core.ArCoreApk$InstallStatus: com.google.ar.core.ArCoreApk$InstallStatus forNumber(int)
com.google.ar.schemas.lull.SubmeshAabb: com.google.ar.schemas.lull.SubmeshAabb __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource$SourceType access$200(com.google.ar.sceneform.assets.RenderableSource$Builder)
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float[] getSphericalHarmonics()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
com.google.android.filament.RenderableManager: void access$200(long,int,int,long,long,int,int)
com.google.ar.sceneform.lullmodel.Color: float b()
com.google.flatbuffers.Table: void sortTables(int[],java.nio.ByteBuffer)
com.google.ar.core.CameraConfigFilter: com.google.ar.core.CameraConfigFilter setStereoCameraUsage(java.util.EnumSet)
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.RenderableManager getRenderableManager()
com.google.ar.schemas.lull.DataFloat: com.google.ar.schemas.lull.DataFloat __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Texture: void nBuilderSampler(long,int)
com.google.android.filament.Renderer: void nEndFrame(long)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addCompareMode(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Renderer: void mirrorFrame(com.google.android.filament.SwapChain,com.google.android.filament.Viewport,com.google.android.filament.Viewport,int)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.google.flatbuffers.FlatBufferBuilder: void addLong(int,long,long)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: com.google.ar.schemas.sceneform.CompiledMaterialDeclDef __assign(int,java.nio.ByteBuffer)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: com.google.ar.schemas.lull.ModelPipelineMaterialDef materials(com.google.ar.schemas.lull.ModelPipelineMaterialDef,int)
com.google.ar.sceneform.ux.PinchGesture: float getGap()
com.google.android.filament.Scene: int nGetLightCount(long)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.sceneform.rendering.ExternalTexture: ExternalTexture(int,int,int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getDown()
com.google.flatbuffers.FlatBufferBuilder: void addDouble(int,double,double)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int vertexData(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.ar.schemas.sceneform.SamplerDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.SamplerCompareMode: java.lang.String name(int)
com.google.ar.core.AugmentedFace: java.nio.ShortBuffer getMeshTriangleIndices()
com.google.android.filament.View$RenderQuality: View$RenderQuality()
com.google.flatbuffers.FlatBufferBuilder: void putBoolean(boolean)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.google.android.filament.android.UiHelper: void attachTo(android.view.SurfaceView)
com.google.ar.schemas.sceneform.RuntimeAssetDef: void startRuntimeAssetDef(com.google.flatbuffers.FlatBufferBuilder)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.ar.sceneform.lullmodel.BlendShape: void startTangentDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Engine: void destroyFence(com.google.android.filament.Fence)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: void startModelPipelineSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.assets.RenderableSource: java.io.InputStream call()
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode access$600(com.google.ar.sceneform.rendering.Texture$Sampler$Builder)
com.google.ar.core.Config: com.google.ar.core.Config$LightEstimationMode getLightEstimationMode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: java.lang.String source()
com.google.ar.sceneform.rendering.IEngine: void destroy()
com.google.android.filament.LightManager: void access$1500(long)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter getMinFilter()
com.google.ar.sceneform.collision.CollisionShape: com.google.ar.sceneform.collision.CollisionShape transform(com.google.ar.sceneform.common.TransformProvider)
com.google.ar.core.SharedCamera: android.graphics.SurfaceTexture getSurfaceTexture()
com.google.android.filament.View: void setDithering(com.google.android.filament.View$Dithering)
com.google.ar.schemas.sceneform.IntInit: int value()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.google.android.filament.Material: int getRequiredAttributesAsInt()
com.google.flatbuffers.Table: int __offset(int)
com.google.ar.core.Config: int nativeGetLightEstimationMode(long,long)
com.google.ar.core.AugmentedFace: boolean equals(java.lang.Object)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
com.google.ar.sceneform.ux.ScaleController: float getScaleDelta()
com.google.ar.sceneform.lullmodel.MaterialDef: com.google.ar.sceneform.lullmodel.VariantMapDef properties()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.ar.sceneform.rendering.ResourceManager: void addViewRenderableRegistry()
com.google.ar.schemas.sceneform.MaterialDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.ar.core.CameraConfigFilter: int nativeGetDepthSensorUsage(long,long)
com.google.android.filament.RenderTarget: RenderTarget(long,com.google.android.filament.RenderTarget$Builder)
com.google.flatbuffers.FlatBufferBuilder: int dataStart()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.google.ar.sceneform.ArSceneView: void pause()
com.google.ar.core.TrackingState: com.google.ar.core.TrackingState valueOf(java.lang.String)
com.google.android.filament.Texture$Builder$BuilderFinalizer: void finalize()
androidx.window.core.Bounds: int getWidth()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$Builder setVerticalAlignment(com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.ar.core.RecordingConfig: void nativeSetMp4DatasetFilePath(long,long,java.lang.String)
com.google.android.filament.TextureSampler: void setWrapModeR(com.google.android.filament.TextureSampler$WrapMode)
com.google.android.filament.Stream: void nDestroyBuilder(long)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry getMaterialCleanupRegistry()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: android.view.View inflateViewFromResourceId()
com.google.ar.sceneform.rendering.RenderableDefinition: void applyDefinitionToDataVertexBuffer(com.google.ar.sceneform.rendering.IRenderableInternalData)
com.google.ar.sceneform.Node: boolean isTopLevel()
com.google.ar.sceneform.lullmodel.BlendShape: int createVertexIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,short[])
com.google.ar.schemas.sceneform.MaterialDef: void startMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.IEngine: void destroyScene(com.google.android.filament.Scene)
com.google.android.filament.View$ToneMapping: com.google.android.filament.View$ToneMapping valueOf(java.lang.String)
com.google.ar.schemas.lull.DataVec3: com.google.ar.schemas.lull.Vec3 value(com.google.ar.schemas.lull.Vec3)
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer tangentIndices32AsByteBuffer()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: ViewRenderable$Builder()
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion add(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion)
com.google.android.filament.Engine: long nCreateSwapChainFromRawPointer(long,long,long)
androidx.fragment.app.Fragment: java.lang.Object getHost()
com.google.ar.sceneform.lullmodel.DataString: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.android.TextureHelper: void nSetBitmap(long,long,int,int,int,int,int,android.graphics.Bitmap,int)
com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment: java.lang.String name(int)
com.google.ar.sceneform.lullmodel.DataQuat: com.google.ar.sceneform.lullmodel.DataQuat getRootAsDataQuat(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.TextureFiltering: TextureFiltering()
com.google.ar.sceneform.NodeParent: java.util.ArrayList getIterableChildren()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
com.google.ar.sceneform.lullmodel.MaterialTextureDef: void addUsagePerChannel(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 localToWorldPoint(com.google.ar.sceneform.math.Vector3)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.filament.RenderTarget: long nDestroyBuilder(long)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.google.ar.sceneform.rendering.AnimationData: long getDurationMs()
com.google.ar.core.ImageMetadata: void getMetdataEntry(int,com.google.ar.core.n)
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.Material getFaceMeshMaterialOverride()
com.google.ar.schemas.sceneform.LightingCubeFaceDef: void addData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.DataHashValue: DataHashValue()
com.google.android.filament.AndroidPlatform: AndroidPlatform()
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.collision.CollisionShape makeCopy()
com.google.ar.sceneform.TouchEventSystem: void removeOnPeekTouchListener(com.google.ar.sceneform.Scene$OnPeekTouchListener)
com.google.ar.sceneform.rendering.Renderer: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters getEnvironmentalHdrParameters()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
com.google.ar.sceneform.lullmodel.VariantMapDef: com.google.ar.sceneform.lullmodel.KeyVariantPairDef values(int)
com.google.android.filament.IndirectLight: void access$500(long,float)
com.google.ar.core.SharedCamera: void close()
com.google.ar.schemas.sceneform.ExternalSamplerInit: java.nio.ByteBuffer pathAsByteBuffer()
com.google.ar.sceneform.ux.AugmentedFaceNode: void setFaceMeshMaterialOverride(com.google.ar.sceneform.rendering.Material)
com.google.ar.sceneform.rendering.AnimationData: void setFactory(com.google.ar.sceneform.rendering.AnimationData$Factory)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: void startAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.fragment.app.Fragment: void performLowMemory()
com.google.android.filament.SwapChain: java.lang.Object getNativeWindow()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.google.ar.core.dependencies.f: f(android.os.IBinder)
com.google.ar.sceneform.rendering.Material: void setFloat3(java.lang.String,com.google.ar.sceneform.rendering.Color)
com.google.ar.sceneform.rendering.R$raw: R$raw()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
com.google.android.filament.VertexBuffer: void nBuilderNormalized(long,int,boolean)
com.google.ar.sceneform.lullmodel.DataHashValue: com.google.ar.sceneform.lullmodel.DataHashValue getRootAsDataHashValue(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataHashValue)
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat valueOf(java.lang.String)
com.google.ar.core.Earth: com.google.ar.core.Anchor resolveAnchorOnTerrain(double,double,double,float,float,float,float)
com.google.ar.sceneform.math.Quaternion: Quaternion(com.google.ar.sceneform.math.Vector3,float)
com.google.ar.schemas.sceneform.SamplerMagFilter: java.lang.String name(int)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode access$800(com.google.ar.sceneform.rendering.Texture$Sampler$Builder)
com.google.ar.sceneform.assets.RenderableSource: RenderableSource(com.google.ar.sceneform.assets.RenderableSource$Builder)
com.google.ar.schemas.lull.ModelPipelineDef: void addSkeleton(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.LightEstimate: long nativeGetTimestamp(long,long)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: int endModelPipelineImportDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.MaterialDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getWorldPosition()
com.google.ar.sceneform.Camera: com.google.ar.sceneform.math.Vector3 worldToScreenPoint(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.math.Matrix: Matrix(float[])
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: java.nio.ByteBuffer attributesInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.SamplerDef: void startDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
com.google.ar.sceneform.ux.TwistGesture: void debugLog(java.lang.String)
com.google.ar.schemas.sceneform.VersionDef: com.google.ar.schemas.sceneform.VersionDef getRootAsVersionDef(java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder: void finish(int)
com.google.ar.sceneform.utilities.SceneformBufferUtils: int copy(java.io.InputStream,java.io.OutputStream)
com.google.android.filament.RenderableManager: void access$1600(long)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry getCameraStreamCleanupRegistry()
com.google.android.filament.Texture: int nSetImageCompressed(long,long,int,int,int,int,int,java.nio.Buffer,int,int,int,int,int,int,int,java.lang.Object,java.lang.Runnable)
com.google.android.filament.IndexBuffer: long nCreateBuilder()
com.google.ar.core.Earth: java.util.Collection getAnchors()
com.google.ar.sceneform.rendering.Renderer: void addModelInstanceInternal(com.google.ar.sceneform.rendering.RenderableInstance)
com.google.ar.sceneform.ux.TransformationSystem: boolean deselectNode()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: boolean flipTextureCoordinates()
com.google.android.filament.Texture$Type: com.google.android.filament.Texture$Type[] values()
com.google.flatbuffers.Table: java.lang.String __string(int)
com.google.ar.sceneform.lullmodel.DataVec4: com.google.ar.sceneform.lullmodel.Vec4 value()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.ar.schemas.sceneform.VersionDef: void addMajorVersion(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.schemas.sceneform.BoolVec3Init: void startBoolVec3Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.dependencies.h: void d(java.lang.String,android.os.Bundle,com.google.ar.core.dependencies.j)
com.google.ar.sceneform.Node: com.google.ar.sceneform.rendering.RenderableInstance getRenderableInstance()
com.google.ar.sceneform.lullmodel.DataFloat: com.google.ar.sceneform.lullmodel.DataFloat getRootAsDataFloat(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataFloat)
com.google.ar.schemas.lull.ModelPipelineImportDef: com.google.ar.schemas.lull.ModelPipelineImportDef getRootAsModelPipelineImportDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelPipelineImportDef)
com.google.android.filament.android.UiHelper$SurfaceViewHandler: void resize(int,int)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.ar.schemas.sceneform.BoolVec3Init: com.google.ar.schemas.sceneform.BoolVec3Init getRootAsBoolVec3Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.BoolVec3Init)
com.google.flatbuffers.FlatBufferBuilder: boolean isFieldPresent(com.google.flatbuffers.Table,int)
com.google.ar.core.exceptions.FatalException: FatalException(java.lang.String)
com.google.android.filament.TransformManager: int nCreate(long,int)
com.google.ar.schemas.lull.MaterialDef: void startMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.Node: void setWorldScale(com.google.ar.sceneform.math.Vector3)
com.google.android.filament.VertexBuffer$Builder: VertexBuffer$Builder()
com.google.android.filament.IndexBuffer: long access$000()
com.google.ar.sceneform.collision.Ray: Ray()
com.google.ar.sceneform.ux.BaseTransformableNode: boolean isTransforming()
com.google.android.filament.Material: com.google.android.filament.Material$VertexDomain getVertexDomain()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
com.google.ar.sceneform.Scene: void setEnvironmentalHdrLightEstimate(float[],float[],com.google.ar.sceneform.rendering.Color,float,android.media.Image[])
com.google.ar.sceneform.ux.BaseArFragment: void onUpdate(com.google.ar.sceneform.FrameTime)
com.google.ar.sceneform.lullmodel.VariantDef: java.lang.String name(int)
com.google.ar.sceneform.SkeletonNode: java.util.HashMap access$200(com.google.ar.sceneform.SkeletonNode)
com.google.android.filament.TextureSampler: int nSetWrapModeS(int,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode getWrapModeR()
com.google.ar.core.AugmentedImage: int getIndex()
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda2: SharedCamera$2$$ExternalSyntheticLambda2(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addFlipTextureCoordinates(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.android.filament.IndirectLight: long access$000()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.google.ar.schemas.sceneform.BoolInit: void addValue(com.google.flatbuffers.FlatBufferBuilder,boolean)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.google.ar.schemas.sceneform.Vec3Init: void addY(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.android.filament.Material: java.util.List getParameters()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.google.android.filament.View: com.google.android.filament.View$AmbientOcclusionOptions getAmbientOcclusionOptions()
com.google.ar.core.exceptions.CloudAnchorsNotConfiguredException: CloudAnchorsNotConfiguredException(java.lang.String)
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda4: SharedCamera$2$$ExternalSyntheticLambda4(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.ArSceneView: ArSceneView(android.content.Context)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: float cmPerUnit()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.google.android.filament.RenderTarget$Builder: RenderTarget$Builder()
com.google.ar.core.Pose: float qx()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addReportErrorsToStdout(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.schemas.sceneform.DoubleVec4Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality valueOf(java.lang.String)
com.google.ar.schemas.sceneform.Vec2Init: void addX(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.sceneform.rendering.Light: float getFalloffRadius()
com.google.ar.core.CameraConfig: android.util.Size getTextureSize()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addEnsureVertexOrientationWNotZero(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.SceneView: void setAnimationTimeTransformer(com.google.ar.sceneform.SceneView$AnimationTimeTransformer)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
com.google.ar.core.HitResult: float getDistance()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.vr.dynamite.client.DynamiteClient: long loadNativeRemoteLibrary(android.content.Context,java.lang.String,java.lang.String)
com.google.ar.core.Anchor: com.google.ar.core.Anchor$TerrainAnchorState getTerrainAnchorState()
com.google.ar.sceneform.rendering.LightProbe: com.google.android.filament.Texture loadReflectCubemapFromLightingDef(com.google.ar.schemas.sceneform.LightingDef)
com.google.ar.schemas.sceneform.DoubleVec4Init: int createDoubleVec4Init(com.google.flatbuffers.FlatBufferBuilder,double,double,double,double)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.google.ar.schemas.lull.ArcDef: float startAngle()
com.google.ar.core.Session: com.google.ar.core.SharedCamera getSharedCamera()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod forNumber(int)
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState valueOf(java.lang.String)
com.google.android.filament.Colors: float[] toLinear(com.google.android.filament.Colors$RgbaType,float,float,float,float)
com.google.ar.sceneform.collision.CollisionSystem: int raycastAll(com.google.ar.sceneform.collision.Ray,java.util.ArrayList,java.util.function.BiConsumer,java.util.function.Supplier)
com.google.android.filament.LightManager: com.google.android.filament.LightManager$Type getType(int)
androidx.fragment.app.Fragment: void setNextAnim(int)
com.google.ar.schemas.sceneform.BoolVec4Init: void addX(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Builder setOuterConeAngle(float)
com.google.ar.sceneform.rendering.Texture$Builder: android.graphics.Bitmap lambda$makeBitmap$1(boolean,java.util.concurrent.Callable)
com.google.android.filament.Camera: float nGetShutterSpeed(long)
com.google.ar.schemas.lull.ModelInstanceDef: ModelInstanceDef()
com.google.ar.core.Anchor: int nativeGetCloudAnchorState(long,long)
com.google.ar.sceneform.lullmodel.DataVec4: com.google.ar.sceneform.lullmodel.DataVec4 getRootAsDataVec4(java.nio.ByteBuffer)
com.google.android.filament.VertexBuffer: void clearNativeObject()
com.google.ar.core.Anchor: Anchor(long,com.google.ar.core.Session)
com.google.android.filament.TextureSampler: int nSetWrapModeR(int,int)
com.google.ar.core.ArImage: int nativeGetFormat(long,long)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
com.google.ar.core.Config: void nativeSetUpdateMode(long,long,int)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: java.util.concurrent.CompletableFuture build()
com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory: java.nio.ByteBuffer newByteBuffer(int)
com.google.ar.sceneform.ux.BaseGestureRecognizer: void removeOnGestureStartedListener(com.google.ar.sceneform.ux.BaseGestureRecognizer$OnGestureStartedListener)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int vertexAttributesLength()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.google.ar.schemas.lull.TextureDef: java.nio.ByteBuffer fileInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.VersionDef: int minorVersion()
com.google.ar.sceneform.ux.AugmentedFaceNode: void updateFaceMesh()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.google.ar.sceneform.SkeletonNode: boolean access$002(com.google.ar.sceneform.SkeletonNode,boolean)
com.google.ar.schemas.lull.ModelInstanceDef: int blendShapesLength()
com.google.ar.schemas.lull.ArcDef: int createArcDef(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addBlendAttributes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Frame: void nativeTransformDisplayUvCoords(long,long,java.nio.FloatBuffer,java.nio.FloatBuffer)
com.google.ar.sceneform.math.MathHelper: float clamp(float,float,float)
com.google.android.filament.View: boolean isPostProcessingEnabled()
com.google.android.filament.View: void nSetPostProcessingEnabled(long,boolean)
com.google.ar.sceneform.Node: void updateActiveStatusRecursively()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.ar.core.Track: void nativeSetId(long,long,byte[])
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.filament.View: boolean nIsFrontFaceWindingInverted(long)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.fragment.app.Fragment: int getNextAnim()
com.google.ar.sceneform.utilities.TimeAccumulator: void beginSample()
com.google.android.filament.Material: com.google.android.filament.Material$Shading getShading()
com.google.ar.core.InstantPlacementPoint: com.google.ar.core.TrackingState getTrackingState()
com.google.ar.sceneform.utilities.LoadHelper: void enableCaching(long,java.io.File,java.lang.String)
com.google.ar.schemas.sceneform.LightingDef: int shCoefficientsLength()
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.math.Vector3 access$500(com.google.ar.sceneform.rendering.Light$Builder)
com.google.ar.sceneform.rendering.Color: Color()
com.google.android.filament.View: void setAntiAliasing(com.google.android.filament.View$AntiAliasing)
com.google.ar.sceneform.rendering.ModelRenderable: void setAnimationData(java.util.ArrayList)
com.google.ar.core.CameraConfig: void nativeGetFpsRange(long,long,int[])
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int blendShapesLength()
com.google.ar.core.Frame: long nativeAcquireRawDepthConfidenceImage(long,long)
com.google.ar.sceneform.utilities.LoadHelper: java.util.concurrent.Callable fromResource(android.content.Context,int)
com.google.android.filament.RenderTarget: long access$200(long,int,long)
com.google.ar.core.dependencies.f: void d(java.lang.String,android.os.Bundle,com.google.ar.core.dependencies.j)
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: com.google.ar.sceneform.rendering.RenderableDefinition build()
com.google.android.filament.View: void setShadowsEnabled(boolean)
com.google.ar.core.CameraConfigFilter: com.google.ar.core.CameraConfigFilter setFacingDirection(com.google.ar.core.CameraConfig$FacingDirection)
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode valueOf(java.lang.String)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.AnimationDef animations(int)
com.google.android.filament.TransformManager: int create(int)
com.google.ar.schemas.lull.ModelPipelineDef: int createModelPipelineDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int,int)
com.google.android.filament.NioUtils$BufferType: NioUtils$BufferType(java.lang.String,int)
com.google.android.filament.TextureSampler: TextureSampler(com.google.android.filament.TextureSampler$CompareMode,com.google.android.filament.TextureSampler$CompareFunction)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.google.android.filament.Material: boolean nHasParameter(long,java.lang.String)
com.google.ar.schemas.lull.BlendShape: com.google.ar.schemas.lull.BlendShape getRootAsBlendShape(java.nio.ByteBuffer,com.google.ar.schemas.lull.BlendShape)
com.google.android.filament.View: int nGetToneMapping(long)
com.google.ar.core.SharedCamera: void onCaptureSessionConfigured(android.hardware.camera2.CameraCaptureSession)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.ar.core.exceptions.UnavailableSdkTooOldException: UnavailableSdkTooOldException()
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.DragGestureRecognizer getDragRecognizer()
com.google.ar.schemas.sceneform.ParameterDef: void startParameterDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.ParameterDef: void addId(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.MaterialTextureDef: void __init(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: boolean isMenuVisible()
com.google.ar.schemas.sceneform.AnimationDef: AnimationDef()
com.google.android.filament.Asserts: Asserts()
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setRegistryId(java.lang.Object)
androidx.window.embedding.SplitController: SplitController()
com.google.ar.sceneform.Node: void setOnTouchListener(com.google.ar.sceneform.Node$OnTouchListener)
com.google.ar.schemas.sceneform.BoolInit: com.google.ar.schemas.sceneform.BoolInit getRootAsBoolInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.BoolInit)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.google.android.filament.Engine: void nDestroyFence(long,long)
com.google.ar.sceneform.math.Matrix: void multiply(com.google.ar.sceneform.math.Matrix,com.google.ar.sceneform.math.Matrix,com.google.ar.sceneform.math.Matrix)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.ar.schemas.sceneform.SamplerInit: java.nio.ByteBuffer pathAsByteBuffer()
com.google.ar.sceneform.ux.PinchGesture: void onCancel()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.sceneform.rendering.Renderer: void startMirroring(android.view.Surface,int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.rendering.Renderable getRenderable()
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.ar.schemas.sceneform.SamplerDef: void addParams(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.BlendShape: void addTangentIndices32(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Builder setShadowCastingEnabled(boolean)
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder castLight(boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.ar.sceneform.lullmodel.TextureDef: void addMinFilter(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.DataVec2: com.google.ar.sceneform.lullmodel.DataVec2 __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Node: void setLight(com.google.ar.sceneform.rendering.Light)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: boolean isHidden()
com.google.ar.sceneform.rendering.RenderableDefinition: com.google.android.filament.VertexBuffer createVertexBuffer(int,java.util.EnumSet)
androidx.fragment.app.Fragment: Fragment(int)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.google.android.filament.RenderableManager: boolean hasComponent(int)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: float access$200(com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder)
com.google.ar.core.CameraConfig$TargetFps: com.google.ar.core.CameraConfig$TargetFps[] $values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder blendOrder(int,int)
com.google.ar.sceneform.collision.Plane: Plane(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.core.Config$CloudAnchorMode: com.google.ar.core.Config$CloudAnchorMode[] $values()
com.google.ar.sceneform.rendering.Renderer: void onNativeWindowChanged(android.view.Surface)
com.google.ar.schemas.sceneform.SamplerWrapMode: java.lang.String name(int)
com.google.android.filament.RenderableManager: boolean nIsShadowCaster(long,int)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef collidable()
com.google.ar.core.Session: long nativeCreateSessionWrapperFromHandle(long,long)
com.google.android.filament.TransformManager: boolean hasComponent(int)
com.google.android.filament.TextureSampler: int nSetWrapModeT(int,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addRanges(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.SkeletonRig: int getMaterialBoneIndex(int)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,float,float,float,float)
com.google.ar.schemas.lull.TextureDef: com.google.ar.schemas.lull.TextureDef getRootAsTextureDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.TextureDef)
androidx.window.core.Bounds: java.lang.String toString()
com.google.ar.sceneform.lullmodel.SubmeshAabb: com.google.ar.sceneform.lullmodel.Vec3 maxPosition(com.google.ar.sceneform.lullmodel.Vec3)
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer vertexIndices32InByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.Pose: com.google.ar.core.Pose makeTranslation(float,float,float)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: int endModelPipelineSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Session: boolean isGeospatialModeSupported(com.google.ar.core.Config$GeospatialMode)
com.google.ar.schemas.sceneform.LightingCubeDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.DoubleVec3Init: void startDoubleVec3Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.Texture: int nGetInternalFormat(long)
com.google.ar.schemas.lull.DataVec2: DataVec2()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.ar.sceneform.rendering.LightInstance: void lambda$finalize$0()
com.google.ar.schemas.lull.ModelPipelineImportDef: boolean flattenHierarchyAndTransformVerticesToRootSpace()
com.google.ar.schemas.sceneform.InputDef: com.google.ar.schemas.sceneform.InputDef getRootAsInputDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.InputDef)
com.google.android.filament.RenderableManager: void nDestroy(long,int)
com.google.ar.sceneform.rendering.MaterialFactory: java.util.concurrent.CompletableFuture makeTransparentWithColor(android.content.Context,com.google.ar.sceneform.rendering.Color)
com.google.ar.sceneform.ArSceneView: void setCameraStreamRenderPriority(int)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
com.google.ar.core.Config$FocusMode: com.google.ar.core.Config$FocusMode valueOf(java.lang.String)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 scaled(float)
com.google.android.filament.Camera: void lookAt(double,double,double,double,double,double,double,double,double)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion axisAngle(com.google.ar.sceneform.math.Vector3,float)
com.google.ar.schemas.sceneform.BoolInit: int endBoolInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.FixedHeightViewSizer: FixedHeightViewSizer(float)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.google.ar.schemas.lull.ModelPipelineImportDef: void startModelPipelineImportDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.InstallActivity: void onDestroy()
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d[] $values()
com.google.ar.schemas.lull.ModelInstanceDef: int createAabbsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.core.Session: int nativeGetPlaybackStatus(long)
com.google.ar.core.GeospatialPose: double nativeGetAltitude(long,long)
com.google.ar.sceneform.utilities.ArCoreVersion: ArCoreVersion()
com.google.ar.sceneform.rendering.DpToMetersViewSizer: int getDpPerMeters()
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d[] values()
com.google.ar.schemas.lull.SubmeshAabb: com.google.ar.schemas.lull.SubmeshAabb getRootAsSubmeshAabb(java.nio.ByteBuffer)
com.google.ar.core.CameraIntrinsics: CameraIntrinsics()
com.google.android.filament.LightManager: void access$1300(long,float)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.ar.sceneform.collision.Sphere: boolean shapeIntersection(com.google.ar.sceneform.collision.CollisionShape)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.MaterialDef materials(int)
com.google.android.filament.Stream: boolean nIsNative(long)
com.google.android.filament.Asserts: float[] assertFloat3(float[])
com.google.ar.schemas.lull.ModelPipelineDef: int sourcesLength()
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: java.nio.ByteBuffer sourceInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.DragGesture: com.google.ar.sceneform.ux.DragGesture getSelf()
com.google.ar.sceneform.ux.SelectionVisualizer: void applySelectionVisual(com.google.ar.sceneform.ux.BaseTransformableNode)
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer$Builder normalized(com.google.android.filament.VertexBuffer$VertexAttribute)
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.rendering.Light$Type getType()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.schemas.sceneform.ScalarInit: com.google.ar.schemas.sceneform.ScalarInit getRootAsScalarInit(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.filament.LightManager: void nBuilderColor(long,float,float,float)
com.google.ar.sceneform.lullmodel.SkeletonDef: int createBoneParentsVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.core.Session: java.util.Collection convertNativeTrackablesToCollection(java.lang.Class,long[])
com.google.ar.core.Camera: com.google.ar.core.Pose getDisplayOrientedPose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.google.ar.sceneform.ux.BaseGesture: void onTouch(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.core.Anchor: com.google.ar.core.TrackingState getTrackingState()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.ar.sceneform.ux.BaseArFragment: void onPeekTouch(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef renderables(int)
com.google.ar.core.exceptions.DataInvalidFormatException: DataInvalidFormatException(java.lang.String)
com.google.android.filament.LightManager: float getFalloff(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.ar.sceneform.lullmodel.TextureDef: void addPremultiplyAlpha(com.google.flatbuffers.FlatBufferBuilder,boolean)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
com.google.ar.schemas.lull.ModelInstanceDef: void addNumVertices(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.ar.schemas.lull.ModelPipelineDef: ModelPipelineDef()
com.google.ar.schemas.lull.BlendShape: int createVertexIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,short[])
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
com.google.android.filament.View: java.lang.String getName()
com.google.ar.schemas.lull.SkeletonDef: com.google.ar.schemas.lull.Mat4x3 boneTransforms(com.google.ar.schemas.lull.Mat4x3,int)
com.google.ar.schemas.lull.BlendShape: int createTangentDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.lullmodel.SubmeshAabb: com.google.ar.sceneform.lullmodel.SubmeshAabb __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.AnimatorImpl: java.lang.String getName()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,java.util.concurrent.Callable)
com.google.ar.schemas.sceneform.DoubleVec4Init: double z()
com.google.android.filament.AndroidPlatform: void log(java.lang.String)
com.google.ar.core.GeospatialPose: double getVerticalAccuracy()
com.google.ar.sceneform.lullmodel.MaterialTextureDef: java.nio.ByteBuffer usagePerChannelAsByteBuffer()
com.google.ar.sceneform.rendering.AnimatorImpl: com.google.ar.sceneform.rendering.AnimatorImpl createInstance(com.google.ar.sceneform.rendering.AnimationData,com.google.ar.sceneform.rendering.ModelRenderable)
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.RenderTarget$Builder texture(com.google.android.filament.RenderTarget$AttachmentPoint,com.google.android.filament.Texture)
com.google.android.filament.MaterialInstance: void nSetSpecularAntiAliasingVariance(long,float)
com.google.ar.sceneform.rendering.RenderableDefinition: void addColorToBuffer(com.google.ar.sceneform.rendering.Color,java.nio.FloatBuffer)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.google.ar.sceneform.ux.BaseArFragment: void start()
com.google.ar.core.ImageMetadata: void nativeReleaseImageMetadata(long,long)
com.google.ar.sceneform.SceneView: void enableDebug(boolean)
com.google.android.filament.IndirectLight: void setIntensity(float)
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material$Builder setSource(java.nio.ByteBuffer)
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource build()
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: int endMaterialTextureDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.CubemapSamplerInit: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.TextureDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelInstanceDef: int indices16(int)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$Builder setMinFilter(com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter)
com.google.android.filament.android.UiHelper: com.google.android.filament.android.UiHelper$RenderSurface access$500(com.google.android.filament.android.UiHelper)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.google.ar.core.Point: java.util.Collection getAnchors()
com.google.android.filament.IndexBuffer: long nBuilderBuild(long,long)
com.google.ar.sceneform.utilities.ChangeId: boolean isEmpty()
com.google.ar.sceneform.lullmodel.ModelIndexRange: long end()
com.google.ar.sceneform.SceneView: void destroyAllResources()
com.google.ar.schemas.sceneform.SamplerDef: com.google.ar.schemas.sceneform.SamplerParamsDef params()
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.rendering.LightProbe$Builder setSource(android.content.Context,android.net.Uri)
com.google.ar.schemas.sceneform.ParameterDef: com.google.ar.schemas.sceneform.ParameterDef getRootAsParameterDef(java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelInstanceDef: long indices32(int)
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus[] $values()
com.google.ar.sceneform.math.Vector3: void setOne()
com.google.ar.core.dependencies.e: void b(android.os.Parcel)
com.google.ar.schemas.lull.BlendShape: com.google.ar.schemas.lull.BlendShape getRootAsBlendShape(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.TransformManager getTransformManager()
com.google.android.filament.RenderableManager: void access$1000(long,boolean)
com.google.android.filament.Platform$UnknownPlatform: void log(java.lang.String)
com.google.ar.sceneform.Node: void setEnabled(boolean)
com.google.android.filament.LightManager: void nBuilderShadowOptions(long,int,float,float,float,float,float,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
com.google.ar.sceneform.utilities.LoadHelper: android.net.Uri resolve(android.net.Uri,android.net.Uri)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
com.google.ar.schemas.sceneform.Vec4Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.schemas.lull.TextureDef: int wrapR()
com.google.ar.sceneform.lullmodel.SubmeshAabb: void addMinPosition(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.Quat: float x()
com.google.android.filament.Engine$Backend: com.google.android.filament.Engine$Backend[] values()
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.RenderTarget build(com.google.android.filament.Engine)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: java.nio.ByteBuffer sourceAsByteBuffer()
com.google.android.filament.Engine: long nCreateSwapChain(long,java.lang.Object,long)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: int createModelPipelineCollidableDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.IEngine: void destroySkybox(com.google.android.filament.Skybox)
com.google.ar.schemas.sceneform.CollisionShapeType: java.lang.String name(int)
com.google.ar.schemas.sceneform.DoubleVec4Init: void addY(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.android.filament.LightManager: void setIntensity(int,float,float)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.ar.sceneform.lullmodel.DataVec2: void startDataVec2(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Earth: int hashCode()
com.google.ar.sceneform.ux.ArFragment: boolean isArRequired()
com.google.android.filament.android.UiHelper: void access$200(com.google.android.filament.android.UiHelper)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int aabbsLength()
com.google.ar.core.Session: java.nio.ByteBuffer directByteBufferOrDefault(java.nio.ByteBuffer)
com.google.android.filament.LightManager: void setPosition(int,float,float,float)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.flatbuffers.FlatBufferBuilder: void prep(int,int)
com.google.android.filament.RenderableManager: void setBonesAsMatrices(int,java.nio.Buffer,int,int)
com.google.ar.schemas.lull.ModelPipelineDef: int createSourcesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.ArSceneView: java.util.concurrent.CompletableFuture pauseAsync(java.util.concurrent.Executor)
com.google.android.filament.MaterialInstance: void nSetParameterBool4(long,java.lang.String,boolean,boolean,boolean,boolean)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addFile(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason forNumber(int)
com.google.ar.core.Frame: long[] nativeAcquireUpdatedTrackables(long,long,int)
com.google.android.filament.Camera$Fov: Camera$Fov(java.lang.String,int)
com.google.android.filament.Material: int nGetVertexDomain(long)
com.google.ar.sceneform.lullmodel.Color: int createColor(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.ar.sceneform.Scene: com.google.ar.sceneform.HitTestResult lambda$hitTestAll$1$Scene()
com.google.ar.sceneform.lullmodel.DataVec3: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.LightManager: boolean hasComponent(int)
com.google.ar.core.Frame: java.util.List hitTest(float,float)
com.google.ar.sceneform.ux.BaseTransformationController: void connectToRecognizer()
com.google.ar.schemas.sceneform.SceneformBundleDef: int materialsLength()
com.google.android.filament.Texture: com.google.android.filament.Texture$InternalFormat getFormat()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startVertexAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.sceneform.math.Matrix: void setTranslation(com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.lull.VariantArrayDefImpl: byte valueType()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.ar.schemas.sceneform.DoubleVec3Init: com.google.ar.schemas.sceneform.DoubleVec3Init getRootAsDoubleVec3Init(java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: com.google.ar.schemas.lull.ModelPipelineSkeletonDef getRootAsModelPipelineSkeletonDef(java.nio.ByteBuffer)
com.google.ar.core.Config: com.google.ar.core.AugmentedImageDatabase getAugmentedImageDatabase()
com.google.ar.sceneform.lullmodel.DataBytes: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.RecordingConfig: int getRecordingRotation()
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: VertexAttributeUsage()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.ar.sceneform.rendering.ViewRenderable: void finalize()
com.google.android.filament.Skybox$Builder$BuilderFinalizer: Skybox$Builder$BuilderFinalizer(long)
com.google.ar.sceneform.rendering.Light: float getOuterConeAngle()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
com.google.ar.schemas.lull.VariantMapDef: int createVariantMapDef(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.google.ar.sceneform.ux.BaseTransformableNode: com.google.ar.sceneform.ux.TransformationSystem getTransformationSystem()
com.google.android.filament.Stream: void nBuilderStream(long,long)
com.google.ar.sceneform.collision.Collider: com.google.ar.sceneform.collision.CollisionShape getTransformedShape()
com.google.ar.schemas.lull.TextureDef: com.google.ar.schemas.lull.TextureDef getRootAsTextureDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.ModelRenderable: void setSkeletonRig(com.google.ar.sceneform.rendering.SkeletonRig)
com.google.android.filament.Texture$PrefilterOptions: Texture$PrefilterOptions()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.google.ar.core.Config$LightEstimationMode: Config$LightEstimationMode(java.lang.String,int,int)
com.google.ar.sceneform.SceneView: void pause()
com.google.android.filament.TextureSampler$WrapMode: com.google.android.filament.TextureSampler$WrapMode valueOf(java.lang.String)
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight build(com.google.android.filament.Engine)
com.google.ar.schemas.lull.BlendShape: int tangentIndices16Length()
com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment: java.lang.String name(int)
com.google.ar.core.CameraConfigFilter: void nativeSetStereoCameraUsage(long,long,int)
com.google.ar.sceneform.ux.RotationController: boolean canStartTransformation(com.google.ar.sceneform.ux.TwistGesture)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: java.nio.ByteBuffer sourceInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.VertexAttributeUsage: java.lang.String name(int)
com.google.ar.sceneform.Scene: void addOnPeekTouchListener(com.google.ar.sceneform.Scene$OnPeekTouchListener)
com.google.ar.schemas.sceneform.ParameterInitDef: int endParameterInitDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.ar.core.PointCloud: java.nio.ByteBuffer nativeGetData(long,long)
com.google.android.filament.EntityManager: EntityManager(com.google.android.filament.EntityManager$1)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.ar.sceneform.ux.BaseArFragment: void setCanRequestDangerousPermissions(java.lang.Boolean)
com.google.ar.sceneform.rendering.Renderable$Builder: void setCachingEnabled(android.content.Context)
com.google.android.filament.View: void setClearColor(float,float,float,float)
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.ModelDef getRootAsModelDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelDef)
com.google.ar.schemas.sceneform.Vec4Init: float w()
com.google.ar.sceneform.rendering.Material$Builder: java.nio.ByteBuffer lambda$build$1(java.util.concurrent.Callable)
com.google.ar.sceneform.Node: boolean onTouchEvent(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
com.google.ar.core.Frame: int getCameraTextureName()
com.google.ar.schemas.sceneform.LightingDef: com.google.ar.schemas.sceneform.LightingDef getRootAsLightingDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.LightingDef)
com.google.ar.schemas.sceneform.IntInit: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Plane: com.google.ar.core.TrackingState getTrackingState()
com.google.ar.schemas.sceneform.IntVec3Init: void addX(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Session: long nativeHostCloudAnchor(long,long)
com.google.ar.sceneform.math.Quaternion: Quaternion(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.ux.TransformableNode: TransformableNode(com.google.ar.sceneform.ux.TransformationSystem)
com.google.ar.schemas.sceneform.BoolVec2Init: com.google.ar.schemas.sceneform.BoolVec2Init getRootAsBoolVec2Init(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.ViewRenderable: void dispose()
com.google.ar.schemas.lull.DataInt: int value()
com.google.ar.sceneform.lullmodel.DataInt: void startDataInt(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.rendering.LightProbe$Builder setRotation(com.google.ar.sceneform.math.Quaternion)
com.google.android.filament.Engine: com.google.android.filament.Camera createCamera(int)
com.google.ar.sceneform.lullmodel.TextureDef: boolean premultiplyAlpha()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.google.ar.core.Session: void setPlaybackDatasetUri(android.net.Uri)
com.google.ar.sceneform.ux.R$drawable: R$drawable()
com.google.ar.core.HitResult: HitResult(long,com.google.ar.core.Session)
com.google.ar.core.dependencies.c: c(android.os.IBinder,java.lang.String)
com.google.ar.schemas.sceneform.LightingDef: com.google.ar.schemas.lull.Vec3 shCoefficients(int)
com.google.ar.core.TrackableBase: long[] nativeGetAnchors(long,long)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.ar.sceneform.rendering.ShapeFactory: com.google.ar.sceneform.rendering.ModelRenderable makeCube(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.rendering.Material)
com.google.ar.core.ImageMetadata: int nativeGetMetadataEntryValueType(long,long)
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod[] values()
com.google.ar.schemas.sceneform.IntVec3Init: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.VariantDef: java.lang.String name(int)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
com.google.ar.sceneform.lullmodel.BlendShape: BlendShape()
com.google.ar.core.Track: com.google.ar.core.Track setMimeType(java.lang.String)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
com.google.ar.schemas.lull.TextureDef: java.nio.ByteBuffer dataAsByteBuffer()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable lambda$build$1(com.google.ar.sceneform.rendering.Renderable)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: ModelPipelineRenderableDef()
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder sunHaloSize(float)
com.google.android.filament.Engine: void nDestroyVertexBuffer(long,long)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
com.google.ar.schemas.lull.BlendShape: int tangentData(int)
com.google.ar.schemas.lull.DataVec2: com.google.ar.schemas.lull.Vec2 value(com.google.ar.schemas.lull.Vec2)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: int createModelPipelineImportDef(com.google.flatbuffers.FlatBufferBuilder,int,int,boolean,float,int,float,int,boolean,boolean,boolean,boolean,boolean,boolean,float,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.ar.sceneform.Node$OnTouchListener: boolean onTouch(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.rendering.AnimatorImpl: long getDurationMs()
com.google.vr.dynamite.client.ILoadedInstanceCreator: com.google.vr.dynamite.client.INativeLibraryLoader newNativeLibraryLoader(com.google.vr.dynamite.client.IObjectWrapper,com.google.vr.dynamite.client.IObjectWrapper)
com.google.ar.schemas.lull.MaterialDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.ar.sceneform.utilities.SceneformBufferUtils: SceneformBufferUtils()
com.google.ar.sceneform.lullmodel.DataBool: void __init(int,java.nio.ByteBuffer)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.google.android.filament.View: com.google.android.filament.View$AmbientOcclusion getAmbientOcclusion()
com.google.ar.core.Config: com.google.ar.core.Config$UpdateMode getUpdateMode()
com.google.ar.sceneform.rendering.ViewRenderable: void setVerticalAlignment(com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment)
com.google.ar.sceneform.collision.CollisionShape: CollisionShape()
com.google.ar.schemas.sceneform.DoubleInit: int createDoubleInit(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.ar.core.Config$AugmentedFaceMode: Config$AugmentedFaceMode(java.lang.String,int,int)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: boolean recenter()
com.google.ar.core.Point: com.google.ar.core.Pose getPose()
com.google.ar.schemas.lull.DataQuat: DataQuat()
com.google.ar.sceneform.lullmodel.BlendShape: int vertexIndices16Length()
com.google.android.filament.TextureSampler: void setMinFilter(com.google.android.filament.TextureSampler$MinFilter)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.google.ar.core.CameraConfigFilter: java.util.EnumSet getStereoCameraUsage()
com.google.android.filament.Skybox: int nGetLayerMask(long)
com.google.ar.sceneform.rendering.Light: Light(com.google.ar.sceneform.rendering.Light$Builder,com.google.ar.sceneform.rendering.Light$1)
com.google.ar.core.InstallActivity: void showEducationDialog()
com.google.ar.sceneform.lullmodel.SkeletonDef: int boneParentsLength()
com.google.android.filament.LightManager: void nSetSunAngularRadius(long,int,float)
com.google.ar.schemas.lull.VariantMapDef: com.google.ar.schemas.lull.KeyVariantPairDef values(com.google.ar.schemas.lull.KeyVariantPairDef,int)
com.google.android.filament.Texture$Builder$BuilderFinalizer: Texture$Builder$BuilderFinalizer(long)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.ar.sceneform.lullmodel.DataQuat: com.google.ar.sceneform.lullmodel.DataQuat __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.ViewRenderable: android.view.View getView()
com.google.ar.schemas.sceneform.Vec4Init: float x()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addRecenter(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: com.google.ar.schemas.lull.Vec3 center(com.google.ar.schemas.lull.Vec3)
com.google.android.filament.android.UiHelper$1: void surfaceDestroyed(android.view.SurfaceHolder)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef getRootAsModelPipelineMaterialDef(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.AugmentedFaceNode: void setAugmentedFace(com.google.ar.core.AugmentedFace)
com.google.ar.schemas.sceneform.SceneformBundleDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.CompiledMaterialDef: CompiledMaterialDef()
com.google.ar.schemas.lull.ModelInstanceDef: int createIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.android.filament.Scene: void removeEntity(int)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.MaterialDef materials(com.google.ar.schemas.lull.MaterialDef,int)
com.google.ar.sceneform.collision.Plane: com.google.ar.sceneform.math.Vector3 getCenter()
com.google.android.filament.VertexBuffer$Builder$BuilderFinalizer: void finalize()
com.google.ar.sceneform.lullmodel.Vec4: float y()
com.google.ar.schemas.lull.TextureDef: TextureDef()
com.google.ar.schemas.sceneform.DoubleVec3Init: com.google.ar.schemas.sceneform.DoubleVec3Init getRootAsDoubleVec3Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.DoubleVec3Init)
com.google.android.filament.View: View(long)
com.google.flatbuffers.Utf8Safe: java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int)
com.google.android.filament.View: com.google.android.filament.Camera getCamera()
com.google.ar.schemas.lull.VariantArrayDef: void startVariantArrayDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.android.UiHelper: com.google.android.filament.android.UiHelper$RendererCallback getRenderCallback()
com.google.ar.schemas.lull.AabbDef: com.google.ar.schemas.lull.Vec3 max(com.google.ar.schemas.lull.Vec3)
com.google.ar.sceneform.SkeletonNode: SkeletonNode()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.google.android.filament.View$DepthPrepass: com.google.android.filament.View$DepthPrepass[] values()
com.google.ar.sceneform.Scene: Scene()
com.google.ar.schemas.sceneform.ExternalSamplerInit: ExternalSamplerInit()
com.google.ar.sceneform.math.Vector3: void setUp()
com.google.ar.schemas.lull.DataQuat: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.SkeletonDef: java.nio.ByteBuffer boneParentsAsByteBuffer()
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ux.PlaneDiscoveryController getPlaneDiscoveryController()
com.google.ar.core.GeospatialPose: double nativeGetHorizontalAccuracy(long,long)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addUsageType(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Fence$FenceStatus: com.google.android.filament.Fence$FenceStatus valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.google.ar.schemas.lull.ModelInstanceDef: void addMaterials(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelPipelineImportDef: int endModelPipelineImportDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.MaterialDef: com.google.ar.schemas.sceneform.MaterialDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.ux.PinchGesture: void onStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.schemas.sceneform.SceneformBundleDef: int animationsLength()
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat[] values()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.ar.sceneform.lullmodel.BlendShape: void addVertexData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.SharedCamera: android.graphics.SurfaceTexture nativeSharedCameraGetSurfaceTexture(long,android.hardware.camera2.CameraDevice)
com.google.android.filament.android.UiHelper$RendererCallback: void onNativeWindowChanged(android.view.Surface)
com.google.ar.sceneform.ux.DragGesture: DragGesture(com.google.ar.sceneform.ux.GesturePointersUtility,com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.ux.TwistGesture: boolean updateGesture(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.Camera createCamera()
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.rendering.LightProbe lambda$build$0(com.google.ar.sceneform.rendering.LightProbe,com.google.ar.schemas.sceneform.LightingDef)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
com.google.ar.core.SharedCamera: void -$$Nest$mclose(com.google.ar.core.SharedCamera)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
com.google.ar.sceneform.Camera: void setLocalRotation(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.lullmodel.DataVec4: com.google.ar.sceneform.lullmodel.Vec4 value(com.google.ar.sceneform.lullmodel.Vec4)
com.google.ar.schemas.sceneform.VersionDef: VersionDef()
com.google.ar.schemas.lull.DataString: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.HitResult: boolean equals(java.lang.Object)
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ArSceneView getArSceneView()
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.SkeletonDef skeleton(com.google.ar.schemas.lull.SkeletonDef)
com.google.ar.core.InstantPlacementPoint: java.util.Collection getAnchors()
com.google.ar.schemas.sceneform.BoolVec3Init: int endBoolVec3Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.ModelRenderable getFaceRegionsRenderable()
com.google.ar.sceneform.lullmodel.TextureDef: void startTextureDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.HitTestResult: void set(com.google.ar.sceneform.HitTestResult)
com.google.android.filament.RenderableManager: void setGeometryAt(int,int,com.google.android.filament.RenderableManager$PrimitiveType,com.google.android.filament.VertexBuffer,com.google.android.filament.IndexBuffer)
com.google.ar.sceneform.rendering.GLHelper: GLHelper()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.google.ar.schemas.sceneform.IntVec3Init: com.google.ar.schemas.sceneform.IntVec3Init __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.EngineInstance: boolean isHeadlessMode()
com.google.ar.core.Session: void setCameraTextureNames(int[])
com.google.ar.sceneform.lullmodel.BlendShape: long vertexIndices32(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.ar.sceneform.lullmodel.TextureDef: com.google.ar.sceneform.lullmodel.TextureDef getRootAsTextureDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.TextureDef)
com.google.ar.sceneform.lullmodel.ModelDef: void addVersion(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter[] values()
com.google.android.filament.EntityManager: void destroy(int[])
com.google.ar.core.DepthPoint: boolean equals(java.lang.Object)
com.google.android.filament.Engine: void destroyStream(com.google.android.filament.Stream)
com.google.android.filament.IndirectLight: float[] getDirectionEstimate(float[])
com.google.ar.schemas.lull.VariantArrayDefImpl: int endVariantArrayDefImpl(com.google.flatbuffers.FlatBufferBuilder)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda1: void run()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.android.filament.proguard.UsedByNative: java.lang.String value()
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: int createModelPipelineMaterialDef(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.sceneform.ux.BaseGesture: boolean justStarted()
com.google.android.filament.Engine: com.google.android.filament.Scene createScene()
com.google.ar.core.SharedCamera: java.util.List getArCoreSurfaces()
com.google.ar.sceneform.lullmodel.SubmeshAabb: int endSubmeshAabb(com.google.flatbuffers.FlatBufferBuilder)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.ar.schemas.sceneform.AnimationDef: com.google.ar.schemas.sceneform.AnimationDef getRootAsAnimationDef(java.nio.ByteBuffer)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.filament.TextureSampler: void setAnisotropy(float)
com.google.ar.sceneform.rendering.PlaneRenderer: void update(com.google.ar.core.Frame,int,int)
com.google.android.filament.android.UiHelper: void attachTo(android.view.TextureView)
com.google.android.filament.Engine: long nCreateCamera(long)
com.google.ar.core.Session: java.util.List getSupportedCameraConfigs(com.google.ar.core.CameraConfigFilter)
androidx.fragment.app.Fragment: android.content.Context requireContext()
com.google.ar.sceneform.ux.TranslationController: com.google.ar.sceneform.AnchorNode getAnchorNodeOrDie()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
com.google.ar.schemas.lull.Rect: int createRect(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.ar.sceneform.lullmodel.BlendShape: int createBlendShape(com.google.flatbuffers.FlatBufferBuilder,long,int,int,int,int,int,int)
com.google.ar.sceneform.ux.AugmentedFaceNode: boolean isTracking()
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.RenderTarget$Builder layer(com.google.android.filament.RenderTarget$AttachmentPoint,int)
com.google.ar.schemas.lull.ArcDef: float angleSize()
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder shadowOptions(com.google.android.filament.LightManager$ShadowOptions)
com.google.android.filament.Engine: void flushAndWait()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroySwapChain(com.google.android.filament.SwapChain)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.ar.schemas.sceneform.Vec2Init: com.google.ar.schemas.sceneform.Vec2Init __assign(int,java.nio.ByteBuffer)
com.google.ar.core.AugmentedImage$TrackingMethod: AugmentedImage$TrackingMethod(java.lang.String,int,int)
com.google.ar.schemas.lull.BlendShape: com.google.ar.schemas.lull.BlendShape __assign(int,java.nio.ByteBuffer)
com.google.android.filament.RenderableManager: void setAxisAlignedBoundingBox(int,com.google.android.filament.Box)
com.google.ar.sceneform.rendering.Light$Builder: float access$1000(com.google.ar.sceneform.rendering.Light$Builder)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.InputDef inputs(int)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder skinning(int)
com.google.ar.schemas.lull.DataVec2: int endDataVec2(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean isUnderTesting()
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
com.google.ar.sceneform.lullmodel.SubmeshAabb: void startSubmeshAabb(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.MaterialDef materials(com.google.ar.sceneform.lullmodel.MaterialDef,int)
com.google.ar.schemas.sceneform.Vec2Init: float x()
com.google.ar.schemas.sceneform.LightingDef: com.google.ar.schemas.sceneform.LightingCubeDef cubeLevels(int)
com.google.ar.core.Session: com.google.ar.core.Earth getEarth()
com.google.vr.dynamite.client.DynamiteClient: com.google.vr.dynamite.client.e getRemoteLibraryLoaderFromInfo(com.google.vr.dynamite.client.g)
com.google.ar.schemas.lull.ModelPipelineImportDef: boolean fixInfacingNormals()
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
com.google.android.filament.EntityManager: boolean isAlive(int)
com.google.ar.sceneform.ux.RotationController: void onEndTransformation(com.google.ar.sceneform.ux.TwistGesture)
com.google.flatbuffers.FlatBufferBuilder: void finish(int,java.lang.String)
com.google.ar.sceneform.ux.PinchGesture: float gapInches()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
com.google.ar.core.Config: Config(com.google.ar.core.Session)
com.google.ar.sceneform.rendering.ExternalTexture: com.google.android.filament.Stream getFilamentStream()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer indices16InByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.IntVec4Init: int endIntVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.TextureDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder: void putShort(short)
com.google.ar.sceneform.rendering.SkeletonRig: void setFactory(com.google.ar.sceneform.rendering.SkeletonRig$Factory)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addIndices16(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.DataHashValue: void __init(int,java.nio.ByteBuffer)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.flatbuffers.FlatBufferBuilder: int createString(java.lang.CharSequence)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int indices16(int)
com.google.ar.schemas.sceneform.CubemapSamplerInit: int endCubemapSamplerInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Renderable$Builder: void checkPreconditions()
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer shaderToMeshBonesInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.android.UiHelper: int getDesiredHeight()
com.google.ar.core.Pose: void transformPoint(float[],int,float[],int)
com.google.ar.core.Earth: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.fragment.app.Fragment: int hashCode()
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: void setTriangleIndices(java.util.List)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.VertexAttribute blendAttributes(com.google.ar.sceneform.lullmodel.VertexAttribute,int)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,int,int,int)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: java.lang.Class getRenderableClass()
com.google.ar.sceneform.ux.RotationController: void setRotationRateDegrees(float)
com.google.ar.core.ArCoreApk$UserMessageType: ArCoreApk$UserMessageType(java.lang.String,int,int)
com.google.ar.schemas.sceneform.ExternalSamplerInit: void addUsage(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.ar.sceneform.lullmodel.SkeletonDef: SkeletonDef()
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode valueOf(java.lang.String)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,com.google.android.filament.Colors$RgbaType,float,float,float,float)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: ModelPipelineRenderableDef()
com.google.ar.sceneform.Node$OnTapListener: void onTap(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.rendering.Color: void set(float,float,float)
com.google.ar.sceneform.utilities.ChangeId: int get()
com.google.ar.schemas.sceneform.MaterialDef: int endMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.ar.sceneform.assets.RenderableSource: void downloadUri(android.net.Uri,java.io.File)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.ar.core.RecordingConfig: com.google.ar.core.RecordingConfig setRecordingRotation(int)
com.google.ar.core.CameraConfigFilter: int nativeGetFacingDirection(long,long)
com.google.ar.sceneform.rendering.ViewRenderable: void lambda$new$0(int,int)
com.google.ar.schemas.sceneform.DoubleVec3Init: void addY(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.ar.sceneform.lullmodel.Mat4x3: com.google.ar.sceneform.lullmodel.Vec4 c1(com.google.ar.sceneform.lullmodel.Vec4)
com.google.ar.schemas.lull.OptionalBool: java.lang.String name(int)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder getSelf()
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.collision.CollisionShape getCollisionShape()
com.google.ar.schemas.lull.DataVec4: void __init(int,java.nio.ByteBuffer)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.google.ar.sceneform.rendering.SkeletonRig: com.google.ar.sceneform.rendering.SkeletonRig$Factory makeDefaultFactory()
com.google.android.filament.MaterialInstance$FloatElement: MaterialInstance$FloatElement(java.lang.String,int)
com.google.ar.schemas.lull.ModelInstanceDef: long numVertices()
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: int axisSystem()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.ar.sceneform.ux.PinchGestureRecognizer: void tryCreateGestures(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.google.ar.schemas.sceneform.AnimationDef: void addSize(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.SceneView: void doRender()
com.google.ar.core.Camera: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.google.ar.sceneform.lullmodel.DataFloat: DataFloat()
com.google.ar.core.AugmentedFace: int hashCode()
com.google.ar.core.Session: void close()
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.rendering.Color getColor()
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: float access$100(com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
com.google.ar.schemas.lull.Mat4x3: com.google.ar.schemas.lull.Vec4 c2()
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Vertex$UvCoordinate access$200(com.google.ar.sceneform.rendering.Vertex$Builder)
com.google.ar.schemas.lull.VertexAttribute: VertexAttribute()
androidx.window.core.Bounds: int getBottom()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: java.lang.Boolean hasSource()
com.google.ar.sceneform.Node: void setLocalPosition(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.ModelInstanceDef getRootAsModelInstanceDef(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.TextureDef textures(com.google.ar.sceneform.lullmodel.TextureDef,int)
com.google.ar.sceneform.rendering.AnimatorImpl: void setStartDelayMs(long)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: void setMaterial(com.google.ar.sceneform.rendering.Material)
com.google.ar.schemas.sceneform.SceneformBundleDef: int endSceneformBundleDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: java.util.List access$000(com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
com.google.ar.schemas.lull.DataString: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.DataVec4: DataVec4()
com.google.ar.schemas.lull.DataHashValue: com.google.ar.schemas.lull.DataHashValue __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.ux.RotationController: void onContinueTransformation(com.google.ar.sceneform.ux.TwistGesture)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
com.google.android.filament.View: void nSetDepthPrepass(long,int)
com.google.android.filament.Engine$Backend: Engine$Backend(java.lang.String,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: java.nio.ByteBuffer usagePerChannelInByteBuffer(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: void addSource(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.Vec4Init: com.google.ar.schemas.sceneform.Vec4Init __assign(int,java.nio.ByteBuffer)
com.google.ar.core.ImageMetadata: long getLong(int)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: com.google.ar.sceneform.lullmodel.MaterialDef material()
com.google.android.filament.LightManager: void access$100(long,boolean)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
com.google.ar.core.Session$Feature: com.google.ar.core.Session$Feature[] values()
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.ar.sceneform.rendering.Light$Builder: float access$900(com.google.ar.sceneform.rendering.Light$Builder)
com.google.android.filament.LightManager$Type: LightManager$Type(java.lang.String,int)
com.google.ar.core.AugmentedFace: com.google.ar.core.TrackingState getTrackingState()
com.google.android.filament.Material$Parameter$Precision: com.google.android.filament.Material$Parameter$Precision valueOf(java.lang.String)
com.google.ar.sceneform.ux.TransformationSystem: com.google.ar.sceneform.ux.GesturePointersUtility getGesturePointersUtility()
com.google.android.filament.Engine: void clearNativeObject()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
com.google.ar.schemas.lull.DataQuat: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.exceptions.UnavailableApkTooOldException: UnavailableApkTooOldException()
com.google.ar.schemas.lull.VariantArrayDef: com.google.ar.schemas.lull.VariantArrayDefImpl values(com.google.ar.schemas.lull.VariantArrayDefImpl,int)
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.google.ar.core.Anchor: void detach()
com.google.ar.sceneform.Camera: void lambda$new$0$Camera(android.view.View,int,int,int,int,int,int,int,int)
com.google.ar.schemas.lull.LayoutVerticalAlignment: java.lang.String name(int)
com.google.ar.core.SessionCreateJniHelper: boolean checkApkSignature(android.content.Context)
com.google.android.filament.EntityManager: void nCreateArray(long,int,int[])
com.google.ar.sceneform.NodeParent: com.google.ar.sceneform.Node findInHierarchy(java.util.function.Predicate)
com.google.ar.schemas.sceneform.SceneformBundleDef: int createSamplersVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.lull.ModelInstanceDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Session: boolean isSharedCameraUsed()
com.google.android.filament.Engine: void destroyView(com.google.android.filament.View)
com.google.android.filament.RenderableManager: void nBuilderCulling(long,boolean)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: java.nio.ByteBuffer sourceInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.Colors$Conversion: Colors$Conversion(java.lang.String,int)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: SuggestedCollisionShapeDef()
com.google.ar.sceneform.rendering.MaterialParameters: void setBoolean2(java.lang.String,boolean,boolean)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
com.google.flatbuffers.Utf8Safe: java.lang.String decodeUtf8Array(byte[],int,int)
com.google.ar.core.RecordingConfig: void nativeSetMp4DatasetUri(long,long,java.lang.String)
com.google.ar.sceneform.lullmodel.Quat: float x()
com.google.android.filament.TransformManager: int getInstance(int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.ar.core.exceptions.GooglePlayServicesLocationLibraryNotLinkedException: GooglePlayServicesLocationLibraryNotLinkedException()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyEntity(int)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.google.android.filament.android.UiHelper$1: void surfaceCreated(android.view.SurfaceHolder)
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute[] values()
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.android.filament.LightManager: void nBuilderIntensity(long,float)
com.google.android.filament.android.UiHelper: com.google.android.filament.android.UiHelper$RendererCallback access$000(com.google.android.filament.android.UiHelper)
com.google.ar.core.Camera: Camera(com.google.ar.core.Session,com.google.ar.core.Frame)
androidx.fragment.app.Fragment: void performDestroyView()
com.google.ar.schemas.sceneform.VersionDef: com.google.ar.schemas.sceneform.VersionDef __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Material$Shading: com.google.android.filament.Material$Shading valueOf(java.lang.String)
com.google.android.filament.Colors$Conversion: com.google.android.filament.Colors$Conversion valueOf(java.lang.String)
com.google.ar.schemas.sceneform.IntVec2Init: int endIntVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.IndirectLight: void nGetRotation(long,float[])
com.google.ar.sceneform.lullmodel.Color: float g()
com.google.ar.core.SharedCamera: void -$$Nest$msetDummyListenerToAvoidImageBufferStarvation(com.google.ar.core.SharedCamera)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.android.filament.android.UiHelper$SurfaceViewHandler: UiHelper$SurfaceViewHandler(com.google.android.filament.android.UiHelper,android.view.SurfaceView)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,com.google.android.filament.Colors$RgbType,float,float,float)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.ar.schemas.sceneform.ParameterInitDefType: ParameterInitDefType()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.ar.sceneform.lullmodel.VariantArrayDef: int createVariantArrayDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.DoubleVec3Init: double y()
com.google.android.filament.LightManager: void nBuilderCastShadows(long,boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.ar.core.LightEstimate: float nativeGetPixelIntensity(long,long)
com.google.ar.schemas.lull.VariantArrayDefImpl: void __init(int,java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.google.ar.schemas.lull.TextureDef: com.google.ar.schemas.lull.TextureDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.ux.R$styleable: R$styleable()
com.google.ar.core.PointCloud: PointCloud(com.google.ar.core.Session,long)
com.google.ar.core.Point: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.ar.core.Frame: void nativeDestroyFrame(long,long)
com.google.ar.sceneform.math.Quaternion: Quaternion(float,float,float,float)
com.google.ar.sceneform.rendering.MaterialFactory: com.google.ar.sceneform.rendering.Material lambda$makeTransparentWithTexture$3(com.google.ar.sceneform.rendering.Texture,com.google.ar.sceneform.rendering.Material)
com.google.ar.sceneform.collision.Sphere: void setCenter(com.google.ar.sceneform.math.Vector3)
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode[] values()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.schemas.sceneform.ExternalSamplerInit: java.nio.ByteBuffer pathInByteBuffer(java.nio.ByteBuffer)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.DataBytes: java.nio.ByteBuffer valueAsByteBuffer()
com.google.ar.core.ArImage: java.nio.ByteBuffer nativeGetBuffer(long,long,int)
com.google.ar.sceneform.rendering.AnimatorImpl: AnimatorImpl()
com.google.ar.schemas.sceneform.BoolInit: com.google.ar.schemas.sceneform.BoolInit __assign(int,java.nio.ByteBuffer)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
com.google.ar.sceneform.math.Vector3: void setBack()
com.google.ar.sceneform.ArSceneView: void setupSession(com.google.ar.core.Session)
com.google.ar.schemas.lull.Quat: int createQuat(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.android.filament.Material: boolean nIsDoubleSided(long)
com.google.android.filament.TextureSampler: float nGetAnisotropy(int)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
com.google.ar.sceneform.assets.RenderableSource$Builder: java.lang.Float access$300(com.google.ar.sceneform.assets.RenderableSource$Builder)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.ar.schemas.lull.ModelDef: int lodsLength()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,android.net.Uri,boolean)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
com.google.android.filament.RenderTarget$AttachmentPoint: RenderTarget$AttachmentPoint(java.lang.String,int)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.ar.schemas.lull.VariantMapDef: int valuesLength()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
com.google.ar.sceneform.math.Vector3: float length()
com.google.android.filament.RenderableManager: void nGetAxisAlignedBoundingBox(long,int,float[],float[])
com.google.android.filament.Camera: void nSetCustomProjection(long,double[],double,double)
com.google.ar.sceneform.assets.Converter: boolean convertModel(java.lang.String,int,int,boolean,float,java.lang.String,java.lang.String)
com.google.android.filament.Scene: long getNativeObject()
com.google.ar.schemas.sceneform.AnimationDef: void addData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.BoolVec3Init: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.BoolVec3Init: com.google.ar.schemas.sceneform.BoolVec3Init __assign(int,java.nio.ByteBuffer)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.google.ar.core.PointCloud: PointCloud()
com.google.ar.schemas.sceneform.BoolInit: boolean value()
com.google.ar.schemas.sceneform.InputDef: void __init(int,java.nio.ByteBuffer)
com.google.flatbuffers.Utf8Safe: void encodeUtf8(java.lang.CharSequence,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.Camera createCamera()
com.google.ar.sceneform.ux.BaseTransformableNode: BaseTransformableNode(com.google.ar.sceneform.ux.TransformationSystem)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.google.android.filament.Platform: com.google.android.filament.Platform get()
com.google.android.filament.LightManager: void nGetColor(long,int,float[])
com.google.ar.sceneform.rendering.CameraStream: java.nio.FloatBuffer createCameraUVBuffer()
com.google.ar.sceneform.math.Vector3: float lengthSquared()
com.google.android.filament.MaterialInstance: void nUnsetScissor(long)
androidx.fragment.app.Fragment: boolean isVisible()
com.google.ar.sceneform.ux.BaseTransformationController: void setEnabled(boolean)
com.google.android.filament.Renderer: void resetUserTime()
com.google.ar.core.CameraConfig: java.lang.String nativeGetCameraId(long,long)
com.google.ar.schemas.lull.DataHashValue: DataHashValue()
com.google.ar.schemas.sceneform.BoolVec4Init: int createBoolVec4Init(com.google.flatbuffers.FlatBufferBuilder,boolean,boolean,boolean,boolean)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.SwapChain createSwapChain(java.lang.Object,long)
com.google.android.filament.EntityManager: void destroy(int)
com.google.ar.schemas.lull.DataBool: DataBool()
com.google.ar.schemas.lull.TextureTargetType: TextureTargetType()
com.google.android.filament.LightManager: boolean access$1400(long,long,int)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.google.ar.sceneform.NodeParent: void onRemoveChild(com.google.ar.sceneform.Node)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: java.nio.ByteBuffer dataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.InputDef: java.nio.ByteBuffer pathInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.ArCoreApk$InstallBehavior: ArCoreApk$InstallBehavior(java.lang.String,int,int)
com.google.android.filament.LightManager: int getInstance(int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int blendAttributesLength()
com.google.ar.core.Session: java.util.Collection getAllTrackables(java.lang.Class)
com.google.ar.sceneform.lullmodel.DataVec3: com.google.ar.sceneform.lullmodel.Vec3 value()
com.google.ar.sceneform.ArSceneView: void updateLightEstimate(com.google.ar.core.Frame)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.google.ar.sceneform.Node: boolean dispatchTouchEvent(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
com.google.ar.sceneform.utilities.LoadHelper: java.io.InputStream lambda$androidResourceUriToInputStreamCreator$2$LoadHelper(android.content.Context,android.net.Uri)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 down()
com.google.ar.sceneform.lullmodel.DataString: com.google.ar.sceneform.lullmodel.DataString getRootAsDataString(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataString)
com.google.ar.schemas.sceneform.CompiledMaterialDef: void startCompiledMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.window.core.Version: int compareTo(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.ar.schemas.sceneform.SamplerParamsDef: int magFilter()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.google.android.filament.LightManager: void setSunAngularRadius(int,float)
com.google.ar.sceneform.utilities.TimeAccumulator: void endSample()
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineDef getRootAsModelPipelineDef(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.Vec3Init: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: void addHashKey(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.ar.sceneform.lullmodel.DataVec2: DataVec2()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.google.ar.schemas.sceneform.DoubleVec4Init: double w()
androidx.window.layout.WindowInfoTracker: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer indices32InByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.Node: java.lang.String getName()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.google.ar.schemas.sceneform.BoolVec4Init: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.AugmentedImageDatabase: com.google.ar.core.AugmentedImageDatabase deserialize(com.google.ar.core.Session,java.io.InputStream)
androidx.window.core.Bounds: boolean isEmpty()
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.sceneform.ux.TransformationSystem getTransformationSystem()
com.google.ar.sceneform.rendering.Vertex: void setPosition(com.google.ar.sceneform.math.Vector3)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.google.ar.sceneform.rendering.Texture: com.google.ar.sceneform.rendering.Texture$Builder builder()
com.google.ar.sceneform.rendering.SkeletonRig: com.google.ar.sceneform.rendering.SkeletonRig createInstance(com.google.ar.schemas.lull.SkeletonDef,com.google.ar.schemas.lull.ModelInstanceDef)
com.google.android.filament.TextureSampler: TextureSampler(com.google.android.filament.TextureSampler$MagFilter,com.google.android.filament.TextureSampler$WrapMode)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.ar.schemas.sceneform.AnimationDef: java.nio.ByteBuffer dataAsByteBuffer()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.BlendShape blendShapes(com.google.ar.sceneform.lullmodel.BlendShape,int)
com.google.ar.schemas.sceneform.DoubleVec3Init: int createDoubleVec3Init(com.google.flatbuffers.FlatBufferBuilder,double,double,double)
com.google.ar.schemas.sceneform.SamplerInit: int createSamplerInit(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.sceneform.lullmodel.Recti: int x()
com.google.ar.schemas.sceneform.ExternalSamplerInit: void startExternalSamplerInit(com.google.flatbuffers.FlatBufferBuilder)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.ar.core.Config$CloudAnchorMode: Config$CloudAnchorMode(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.ar.schemas.lull.TextureDef: void addMinFilter(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: int createModelPipelineRenderableDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.rendering.Renderer: void removeLight(com.google.ar.sceneform.rendering.LightInstance)
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason valueOf(java.lang.String)
com.google.ar.sceneform.ux.BaseTransformationController: void updateActiveAndEnabled()
com.google.ar.sceneform.rendering.ModelRenderable: com.google.ar.sceneform.rendering.ModelRenderable$Builder builder()
com.google.ar.sceneform.lullmodel.DataBytes: com.google.ar.sceneform.lullmodel.DataBytes getRootAsDataBytes(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataBytes)
com.google.ar.schemas.lull.ModelPipelineImportDef: int axisSystem()
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.ar.schemas.lull.Vec3: Vec3()
com.google.ar.schemas.lull.Vec4: float x()
com.google.ar.core.Session: boolean nativeIsDepthModeSupported(long,int)
com.google.android.filament.TransformManager: void nSetTransform(long,int,float[])
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion lerp(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion,float)
androidx.fragment.app.Fragment: boolean getRetainInstance()
com.google.android.filament.Material$CullingMode: com.google.android.filament.Material$CullingMode[] values()
com.google.ar.sceneform.ux.TranslationController: void updateRotation(com.google.ar.sceneform.FrameTime)
com.google.android.filament.LightManager: void access$1100(long,float)
com.google.ar.schemas.lull.MaterialDef: MaterialDef()
com.google.ar.sceneform.R$color: R$color()
com.google.ar.schemas.lull.TextureDef: void addMagFilter(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.AabbDef boundingBox()
com.google.ar.sceneform.ux.BaseGesture: boolean updateGesture(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer tangentIndices32InByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.PlaneDiscoveryController: void setInstructionView(android.view.View)
com.google.android.filament.Texture: void setExternalImage(com.google.android.filament.Engine,long)
com.google.android.filament.Engine: void destroyRenderer(com.google.android.filament.Renderer)
com.google.ar.sceneform.ux.BaseTransformationController: boolean isTransforming()
kotlin.jvm.internal.Lambda: int getArity()
com.google.android.filament.View$AntiAliasing: com.google.android.filament.View$AntiAliasing[] values()
com.google.ar.schemas.lull.Mat4x3: com.google.ar.schemas.lull.Mat4x3 __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Material$Shading: Material$Shading(java.lang.String,int)
com.google.ar.sceneform.rendering.Renderer: void setUseHdrLightEstimate(boolean)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: boolean reportErrorsToStdout()
com.google.ar.sceneform.rendering.ExternalTexture: android.view.Surface getSurface()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.google.android.filament.IndirectLight: float nGetIntensity(long)
com.google.ar.core.LightEstimate: float getPixelIntensity()
com.google.ar.schemas.sceneform.CubemapSamplerInit: com.google.ar.schemas.sceneform.CubemapSamplerInit getRootAsCubemapSamplerInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.CubemapSamplerInit)
com.google.ar.schemas.lull.TextureDef: void addWrapS(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: boolean fixInfacingNormals()
com.google.ar.core.SharedCamera: void setDummyOnImageAvailableListener(android.media.ImageReader)
com.google.ar.schemas.lull.KeyVariantPairDef: long hashKey()
com.google.android.filament.Renderer: double nGetUserTime(long)
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: void destroy()
com.google.ar.sceneform.ux.ArFragment: java.util.Set getSessionFeatures()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.TextureDef textures(com.google.ar.sceneform.lullmodel.TextureDef,int)
com.google.ar.core.exceptions.FineLocationPermissionNotGrantedException: FineLocationPermissionNotGrantedException()
com.google.ar.sceneform.collision.Ray: java.lang.String toString()
com.google.ar.schemas.sceneform.SamplerDef: com.google.ar.schemas.sceneform.SamplerDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.Vec3Init: Vec3Init()
com.google.ar.sceneform.lullmodel.DataInt: DataInt()
com.google.android.filament.Scene: int getRenderableCount()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.google.android.filament.EntityManager: EntityManager()
com.google.ar.sceneform.ArSceneView: void reportEngineType()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.filament.View: void nSetShadowsEnabled(long,boolean)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.BlendShape blendShapes(int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.ar.sceneform.ux.BaseGestureRecognizer: void onTouch(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.core.ArImage: int nativeGetHeight(long,long)
com.google.android.filament.RenderableManager: boolean nIsShadowReceiver(long,int)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addWrapR(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.Recti: int h()
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: java.lang.String key()
com.google.android.filament.Texture$Type: Texture$Type(java.lang.String,int)
com.google.ar.sceneform.lullmodel.BlendShape: int vertexIndices16(int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addShaderToMeshBones(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.google.android.filament.Engine: long nCreateCameraWithEntity(long,int)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.AugmentedImage: AugmentedImage(long,com.google.ar.core.Session)
com.google.ar.schemas.lull.ModelInstanceDef: void startBlendAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.GeospatialPose: double nativeGetLongitude(long,long)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float getAmbientShScaleForFilament()
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: int createAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.sceneform.MaterialDef: MaterialDef()
com.google.ar.sceneform.utilities.ChangeId: boolean checkChanged(int)
com.google.ar.sceneform.rendering.AnimatorImpl: void start()
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.google.ar.schemas.sceneform.NullInit: com.google.ar.schemas.sceneform.NullInit getRootAsNullInit(java.nio.ByteBuffer)
com.google.android.filament.Texture: void access$700(long,int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda2: SharedCamera$1$$ExternalSyntheticLambda2(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion scaled(float)
com.google.ar.core.dependencies.d: android.os.IBinder asBinder()
com.google.android.filament.NioUtils: int getBufferType(java.nio.Buffer)
com.google.ar.sceneform.lullmodel.VariantArrayDef: com.google.ar.sceneform.lullmodel.VariantArrayDef getRootAsVariantArrayDef(java.nio.ByteBuffer)
com.google.ar.core.InstallActivity: void showSpinner()
androidx.window.layout.WindowMetrics: int hashCode()
com.google.ar.core.dependencies.d: d(java.lang.String)
com.google.ar.sceneform.Node: void destroyLightInstance()
com.google.android.filament.Camera: void nGetPosition(long,float[])
com.google.ar.core.Config$InstantPlacementMode: com.google.ar.core.Config$InstantPlacementMode forNumber(int)
com.google.ar.schemas.sceneform.Vec3Init: void startVec3Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.SkeletonRig$Factory: com.google.ar.sceneform.rendering.SkeletonRig create(com.google.ar.schemas.lull.SkeletonDef,com.google.ar.schemas.lull.ModelInstanceDef)
com.google.ar.sceneform.lullmodel.TextureDef: void addGenerateMipmaps(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.core.Point: int nativeGetOrientationMode(long,long)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.google.ar.sceneform.lullmodel.TextureWrap: java.lang.String name(int)
com.google.ar.sceneform.lullmodel.Rect: Rect()
com.google.ar.sceneform.lullmodel.SubmeshAabb: com.google.ar.sceneform.lullmodel.Vec3 minPosition(com.google.ar.sceneform.lullmodel.Vec3)
com.google.ar.core.AugmentedImage: com.google.ar.core.Pose getCenterPose()
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.Engine getFilamentEngine()
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Matrix getWorldModelMatrixInverseInternal()
com.google.android.filament.View: com.google.android.filament.View$AntiAliasing getAntiAliasing()
com.google.ar.sceneform.rendering.Renderable: Renderable(com.google.ar.sceneform.rendering.Renderable$Builder)
com.google.android.filament.TextureSampler: TextureSampler(com.google.android.filament.TextureSampler$MinFilter,com.google.android.filament.TextureSampler$MagFilter,com.google.android.filament.TextureSampler$WrapMode)
androidx.fragment.app.Fragment: boolean isInLayout()
com.google.ar.schemas.sceneform.BoolInit: int createBoolInit(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.android.filament.TextureSampler: TextureSampler(com.google.android.filament.TextureSampler$MagFilter)
com.google.ar.sceneform.collision.Collider: void setAttachedCollisionSystem(com.google.ar.sceneform.collision.CollisionSystem)
com.google.android.filament.Stream: void nSetDimensions(long,int,int)
com.google.ar.core.CameraIntrinsics: int[] getImageDimensions()
com.google.ar.schemas.lull.ModelPipelineImportDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Light$Type: Light$Type(java.lang.String,int)
com.google.ar.schemas.lull.Vec3: float x()
com.google.ar.schemas.lull.DataString: com.google.ar.schemas.lull.DataString getRootAsDataString(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataString)
com.google.ar.sceneform.Node: boolean isDescendantOf(com.google.ar.sceneform.NodeParent)
com.google.ar.sceneform.collision.Sphere: com.google.ar.sceneform.math.Vector3 getCenter()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable lambda$build$0(com.google.ar.sceneform.rendering.Renderable)
com.google.android.filament.Engine: void nDestroyRenderer(long,long)
com.google.android.filament.Camera$Projection: com.google.android.filament.Camera$Projection valueOf(java.lang.String)
com.google.ar.schemas.lull.DataVec3: com.google.ar.schemas.lull.Vec3 value()
com.google.ar.core.Camera: void nativeGetTextureIntrinsics(long,long,long)
com.google.ar.core.Camera: com.google.ar.core.CameraIntrinsics getImageIntrinsics()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda3: SharedCamera$2$$ExternalSyntheticLambda3(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.lullmodel.SkeletonDef: com.google.ar.sceneform.lullmodel.SkeletonDef getRootAsSkeletonDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.SkeletonDef)
com.google.ar.core.Frame: long[] nativeAcquireUpdatedAnchors(long,long)
com.google.android.filament.Engine: void nDestroyIndirectLight(long,long)
com.google.ar.sceneform.lullmodel.TextureWrap: TextureWrap()
com.google.ar.sceneform.FrameTime: long getDeltaTime(java.util.concurrent.TimeUnit)
com.google.ar.schemas.lull.DataVec2: com.google.ar.schemas.lull.DataVec2 getRootAsDataVec2(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataVec2)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: int createDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
androidx.window.core.Version: java.math.BigInteger getBigInteger()
com.google.ar.core.CameraConfig: com.google.ar.core.CameraConfig$StereoCameraUsage getStereoCameraUsage()
com.google.ar.schemas.lull.MaterialTextureDef: java.lang.String name()
com.google.ar.core.exceptions.NotTrackingException: NotTrackingException()
com.google.android.filament.VertexBuffer: void nBuilderVertexCount(long,int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.ar.core.Config$UpdateMode: com.google.ar.core.Config$UpdateMode forNumber(int)
com.google.ar.schemas.sceneform.Vec2Init: Vec2Init()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,android.net.Uri)
com.google.ar.schemas.lull.TextureDef: void startTextureDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.ar.sceneform.math.Matrix: void extractQuaternion(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.assets.RenderableSource: com.google.ar.sceneform.assets.RenderableSource$Builder builder()
com.google.ar.sceneform.rendering.LightProbe: java.util.concurrent.CompletableFuture access$500(com.google.ar.sceneform.rendering.LightProbe,java.util.concurrent.Callable)
kotlin.jvm.internal.CallableReference: CallableReference()
com.google.ar.sceneform.Scene$OnTouchListener: boolean onSceneTouch(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.ux.TransformableNode: com.google.ar.sceneform.ux.RotationController getRotationController()
com.google.ar.sceneform.rendering.RenderableDefinition: com.google.ar.sceneform.math.Quaternion normalToTangent(com.google.ar.sceneform.math.Vector3)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
com.google.ar.schemas.lull.MaterialDef: com.google.ar.schemas.lull.MaterialDef getRootAsMaterialDef(java.nio.ByteBuffer)
com.google.ar.core.RecordingConfig: com.google.ar.core.RecordingConfig addTrack(com.google.ar.core.Track)
com.google.ar.sceneform.Node: void onRemoveChild(com.google.ar.sceneform.Node)
com.google.flatbuffers.Utf8Safe: java.lang.String decodeUtf8Buffer(java.nio.ByteBuffer,int,int)
com.google.ar.core.LightEstimate$State: com.google.ar.core.LightEstimate$State[] $values()
com.google.android.filament.Material$Interpolation: com.google.android.filament.Material$Interpolation valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: java.nio.ByteBuffer nameOverrideInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.utilities.LoadHelper: java.lang.Boolean isFileAsset(android.net.Uri)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.filament.Platform: boolean isWindows()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.google.ar.schemas.sceneform.ScalarInit: int endScalarInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.Asserts: void assertMat4fIn(float[])
com.google.android.filament.IndirectLight: void access$600(long,float,float,float,float,float,float,float,float,float)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: com.google.ar.schemas.lull.ModelPipelineRenderableDef getRootAsModelPipelineRenderableDef(java.nio.ByteBuffer)
com.google.android.filament.TextureSampler: int nSetCompareFunction(int,int)
com.google.ar.sceneform.rendering.EngineInstance: EngineInstance()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.window.embedding.MatcherUtils: MatcherUtils()
com.google.android.filament.RenderableManager: int nGetEnabledAttributesAt(long,int,int)
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.rendering.Light$Builder builder(com.google.ar.sceneform.rendering.Light$Type)
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.android.filament.LightManager: void nBuilderPosition(long,float,float,float)
com.google.android.filament.MaterialInstance: void nSetParameterBool3(long,java.lang.String,boolean,boolean,boolean)
com.google.ar.sceneform.R$id: R$id()
com.google.android.filament.TransformManager: float[] getTransform(int,float[])
com.google.ar.sceneform.Node: void addTransformChangedListener(com.google.ar.sceneform.Node$TransformChangedListener)
com.google.ar.core.Config$InstantPlacementMode: com.google.ar.core.Config$InstantPlacementMode[] $values()
com.google.ar.sceneform.rendering.LightProbe$Builder: java.lang.String access$300(com.google.ar.sceneform.rendering.LightProbe$Builder)
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Vertex$Builder setColor(com.google.ar.sceneform.rendering.Color)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.filament.Texture: void nBuilderFormat(long,int)
com.google.ar.core.LightEstimate: long[] nativeAcquireEnvironmentalHdrCubeMap(long,long)
com.google.android.filament.View: void nSetName(long,java.lang.String)
androidx.window.core.Version: java.lang.String getDescription()
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
com.google.ar.schemas.sceneform.BoolVec2Init: void addX(com.google.flatbuffers.FlatBufferBuilder,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
com.google.ar.core.Camera: boolean equals(java.lang.Object)
com.google.ar.schemas.sceneform.IntVec2Init: int y()
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: ModelPipelineCollidableDef()
com.google.ar.sceneform.rendering.Renderable: long access$200()
com.google.ar.core.ArCoreApkJniAdapter: int requestInstall(android.app.Activity,boolean,int[])
com.google.android.filament.Engine: void destroyVertexBuffer(com.google.android.filament.VertexBuffer)
com.google.android.filament.Skybox: long nCreateBuilder()
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture lambda$build$0(android.graphics.Bitmap)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
com.google.ar.core.ArCoreApk$InstallStatus: ArCoreApk$InstallStatus(java.lang.String,int,int)
com.google.android.filament.Material: int nGetBlendingMode(long)
com.google.ar.schemas.sceneform.RuntimeAssetDef: void __init(int,java.nio.ByteBuffer)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
com.google.ar.sceneform.rendering.Vertex: Vertex(com.google.ar.sceneform.rendering.Vertex$Builder,com.google.ar.sceneform.rendering.Vertex$1)
com.google.ar.schemas.sceneform.LightingCubeDef: void addFaces(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Material: void setFloat3(java.lang.String,float,float,float)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.google.android.filament.Texture$Format: Texture$Format(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.ar.sceneform.rendering.ModelRenderable: java.lang.String getBoneName(int)
com.google.ar.sceneform.rendering.RenderableInstance: int getEntity()
com.google.ar.schemas.sceneform.SamplerDef: int createDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.window.core.Version$Companion: Version$Companion()
com.google.ar.core.exceptions.DataInvalidFormatException: DataInvalidFormatException()
com.google.ar.sceneform.rendering.ModelRenderable$Builder: ModelRenderable$Builder()
com.google.ar.core.SharedCamera: android.view.Surface -$$Nest$mgetGpuSurface(com.google.ar.core.SharedCamera)
com.google.ar.sceneform.lullmodel.TextureDef: java.lang.String name()
com.google.android.filament.Scene: void nAddEntity(long,int)
com.google.ar.schemas.lull.ModelDef: void addSkeleton(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.VertexBuffer$QuatType: com.google.android.filament.VertexBuffer$QuatType valueOf(java.lang.String)
com.google.ar.sceneform.ux.BaseTransformationController: void onDeactivated(com.google.ar.sceneform.Node)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.google.android.filament.VertexBuffer: void setBufferAt(com.google.android.filament.Engine,int,java.nio.Buffer,int,int,java.lang.Object,java.lang.Runnable)
com.google.ar.schemas.lull.MaterialDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.SceneView: void doFrameNoRepost(long)
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.math.Matrix getFinalModelMatrix(com.google.ar.sceneform.math.Matrix)
com.google.android.filament.Texture: void setImage(com.google.android.filament.Engine,int,com.google.android.filament.Texture$PixelBufferDescriptor)
com.google.ar.sceneform.ux.TwistGesture: com.google.ar.sceneform.ux.BaseGesture getSelf()
com.google.android.filament.Texture: void generateMipmaps(com.google.android.filament.Engine)
com.google.ar.sceneform.lullmodel.DataString: DataString()
com.google.ar.schemas.lull.SkeletonDef: void addBoneNames(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.TransformManager: TransformManager(long)
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.ModelInstanceDef lods(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
com.google.ar.sceneform.collision.Plane: boolean rayIntersection(com.google.ar.sceneform.collision.Ray,com.google.ar.sceneform.collision.RayHit)
com.google.ar.schemas.sceneform.RuntimeAssetDef: int createRuntimeAssetDef(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.schemas.sceneform.MaterialDef: int parametersLength()
com.google.ar.core.TrackableBase: boolean equals(java.lang.Object)
com.google.android.filament.RenderableManager: int nSetBonesAsQuaternions(long,int,java.nio.Buffer,int,int,int)
com.google.ar.sceneform.ux.TwistGesture: boolean canStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.flatbuffers.FlatBufferBuilder: int createVectorOfTables(int[])
com.google.ar.sceneform.rendering.MaterialInternalDataGltfImpl: MaterialInternalDataGltfImpl(com.google.android.filament.Material)
com.google.ar.sceneform.rendering.LightInstance: void updateProperties()
com.google.ar.core.Pose: com.google.ar.core.Quaternion getQuaternion()
com.google.ar.core.SharedCamera: android.view.Surface getGpuSurface()
com.google.android.filament.RenderableManager: void nBuilderGeometry(long,int,int,long,long,int,int)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.google.ar.sceneform.rendering.Renderer: float getExposure()
com.google.ar.schemas.lull.ModelPipelineCollidableDef: void startModelPipelineCollidableDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.collision.Ray: void setOrigin(com.google.ar.sceneform.math.Vector3)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: float scale()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.lullmodel.Vec2: com.google.ar.sceneform.lullmodel.Vec2 __assign(int,java.nio.ByteBuffer)
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType[] $values()
com.google.ar.sceneform.TouchEventSystem: void onTouchEvent(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.schemas.lull.LayoutFillOrder: LayoutFillOrder()
com.google.ar.schemas.sceneform.LightingCubeFaceDef: LightingCubeFaceDef()
com.google.ar.schemas.sceneform.BoolVec3Init: com.google.ar.schemas.sceneform.BoolVec3Init getRootAsBoolVec3Init(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.TextureFiltering: java.lang.String name(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.ar.sceneform.lullmodel.DataString: java.nio.ByteBuffer valueAsByteBuffer()
com.google.ar.sceneform.AnchorNode: void setChildrenEnabled(boolean)
com.google.ar.core.Config$PlaneFindingMode: Config$PlaneFindingMode(java.lang.String,int,int)
com.google.ar.core.ImageMetadata: double getDouble(int)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable makeRenderable()
com.google.ar.sceneform.rendering.IEngine: void destroySwapChain(com.google.android.filament.SwapChain)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Matrix getWorldModelMatrixInternal()
com.google.ar.sceneform.rendering.CameraStream: int getRenderPriority()
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode forNumber(int)
com.google.ar.schemas.lull.TextureDef: void addWrapT(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.math.Vector3Evaluator: Vector3Evaluator()
com.google.ar.schemas.lull.DataBool: int createDataBool(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.rendering.SkeletonRig: SkeletonRig(com.google.ar.sceneform.rendering.SkeletonRig)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: long indices32(int)
com.google.ar.schemas.lull.ModelInstanceDef: int createIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,short[])
androidx.fragment.app.Fragment: void initLifecycle()
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder builder()
com.google.android.filament.TextureSampler: int nSetAnisotropy(int,float)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.ar.schemas.sceneform.ExternalSamplerInit: int createExternalSamplerInit(com.google.flatbuffers.FlatBufferBuilder,int,int)
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
com.google.ar.core.GeospatialPose: GeospatialPose(long,com.google.ar.core.Session)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.google.ar.sceneform.rendering.Material$Builder: Material$Builder()
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: float[] getDirection()
com.google.ar.sceneform.lullmodel.DataVec4: int endDataVec4(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.utilities.SceneformBufferUtils: java.nio.ByteBuffer copyByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.TwistGesture: com.google.ar.sceneform.ux.TwistGesture getSelf()
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
com.google.ar.core.ArCoreApk$InstallStatus: com.google.ar.core.ArCoreApk$InstallStatus[] values()
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: java.nio.ByteBuffer keyAsByteBuffer()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
com.google.ar.core.AugmentedFace: com.google.ar.core.Pose getCenterPose()
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
com.google.ar.sceneform.ArSceneView: void pauseSession()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.google.android.filament.IndexBuffer$Builder: com.google.android.filament.IndexBuffer$Builder bufferType(com.google.android.filament.IndexBuffer$Builder$IndexType)
com.google.android.filament.IndexBuffer$Builder$IndexType: com.google.android.filament.IndexBuffer$Builder$IndexType[] values()
com.google.ar.sceneform.lullmodel.ArcDef: int createArcDef(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float,int)
com.google.flatbuffers.FlatBufferBuilder: void finishSizePrefixed(int,java.lang.String)
com.google.ar.sceneform.rendering.AnimatorImpl: void cancel()
com.google.ar.sceneform.lullmodel.DataVec2: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Light$Builder: Light$Builder(com.google.ar.sceneform.rendering.Light$Type)
com.google.ar.core.Frame: Frame(com.google.ar.core.Session)
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setSource(android.graphics.Bitmap)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addMaxBoneWeights(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.google.ar.schemas.lull.ModelPipelineImportDef: float scale()
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
com.google.ar.core.Earth: com.google.ar.core.Anchor createAnchor(double,double,double,float,float,float,float)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder priority(int)
com.google.ar.sceneform.lullmodel.Mat4x3: int createMat4x3(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float,float,float,float,float,float,float,float,float)
com.google.ar.core.Config: void nativeSetLightEstimationMode(long,long,int)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder getSelf()
com.google.ar.core.Frame: java.util.Collection getUpdatedTrackables(java.lang.Class)
com.google.ar.sceneform.ArSceneView: boolean loadUnifiedJni()
com.google.ar.sceneform.ux.ArFragment: com.google.ar.core.Config getSessionConfiguration(com.google.ar.core.Session)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.VertexAttribute vertexAttributes(int)
com.google.ar.sceneform.Node: void setLookDirection(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.Node: void setSceneRecursively(com.google.ar.sceneform.Scene)
com.google.ar.schemas.lull.SkeletonDef: int boneTransformsLength()
com.google.ar.sceneform.assets.R: R()
com.google.ar.core.CameraConfig$TargetFps: java.util.EnumSet forBitFlags(int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.google.ar.schemas.lull.Vec2: int createVec2(com.google.flatbuffers.FlatBufferBuilder,float,float)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.google.ar.schemas.sceneform.TransformDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.MathUtils: void nPackTangentFrame(float,float,float,float,float,float,float,float,float,float[],int)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.ar.schemas.sceneform.CubemapSamplerInit: int usage()
com.google.ar.core.CameraConfig$FacingDirection: com.google.ar.core.CameraConfig$FacingDirection forNumber(int)
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.AabbDef boundingBox()
com.google.ar.schemas.sceneform.InputDef: java.lang.String hash()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.ar.sceneform.rendering.MaterialParameters: void setFloat(java.lang.String,float)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.SceneformBundleDef __assign(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
com.google.ar.sceneform.rendering.MaterialParameters: void setBoolean(java.lang.String,boolean)
com.google.ar.sceneform.R$interpolator: R$interpolator()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
com.google.ar.schemas.sceneform.CollisionShapeType: CollisionShapeType()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.google.ar.sceneform.rendering.LightProbe: int getId()
com.google.ar.sceneform.TouchEventSystem: void clearTouchTargets()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addTransform(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Texture: int getHeight(int)
com.google.ar.sceneform.lullmodel.VariantArrayDef: int endVariantArrayDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.google.ar.schemas.sceneform.SamplerParamsDef: com.google.ar.schemas.sceneform.SamplerParamsDef getRootAsSamplerParamsDef(java.nio.ByteBuffer)
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer build(com.google.android.filament.Engine)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
com.google.android.filament.MaterialInstance: void nSetMaskThreshold(long,float)
com.google.android.filament.TextureSampler$MinFilter: TextureSampler$MinFilter(java.lang.String,int)
com.google.ar.schemas.sceneform.SamplerUsageType: java.lang.String name(int)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.ar.schemas.lull.ModelPipelineMaterialDef: com.google.ar.schemas.lull.ModelPipelineMaterialDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.Rect: void __init(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.google.ar.sceneform.Node: void callOnHierarchy(java.util.function.Consumer)
com.google.ar.core.GeospatialPose: double getAltitude()
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.math.Vector3 getLocalDirection()
com.google.ar.core.SharedCamera: android.media.ImageReader nativeSharedCameraGetImageReader(long,android.hardware.camera2.CameraDevice)
com.google.ar.schemas.sceneform.IntVec3Init: int y()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.google.ar.schemas.sceneform.IntVec4Init: int createIntVec4Init(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int)
com.google.ar.core.AugmentedImageDatabase: int getNumImages()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: java.lang.Class getRenderableClass()
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: VariantArrayDefImpl()
com.google.ar.core.Plane: int hashCode()
com.google.ar.core.HitResult: com.google.ar.core.Pose getHitPose()
com.google.ar.core.Camera: void nativeReleaseCamera(long,long)
com.google.ar.sceneform.ArSceneView: void initializeAr()
com.google.android.filament.Skybox$Builder: com.google.android.filament.Skybox build(com.google.android.filament.Engine)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getUp()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.sceneform.lullmodel.BlendShape: int tangentData(int)
com.google.ar.core.AugmentedFace: AugmentedFace(long,com.google.ar.core.Session)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.fragment.app.Fragment: void callStartTransitionListener()
com.google.ar.sceneform.ux.TwistGesture: void onCancel()
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment getVerticalAlignment()
com.google.ar.sceneform.rendering.EngineInstance: com.google.ar.sceneform.rendering.IEngine getEngine()
com.google.ar.core.exceptions.DeadlineExceededException: DeadlineExceededException()
com.google.ar.schemas.lull.Quat: float z()
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: com.google.ar.schemas.lull.ModelPipelineCollidableDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.utilities.Preconditions: void checkElementIndex(int,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.android.filament.RenderableManager$Builder: void build(com.google.android.filament.Engine,int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.ar.core.exceptions.UnavailableException: UnavailableException()
com.google.ar.core.Camera: com.google.ar.core.TrackingState getTrackingState()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.google.flatbuffers.FlatBufferBuilder: com.google.flatbuffers.FlatBufferBuilder forceDefaults(boolean)
com.google.ar.sceneform.lullmodel.TextureDef: TextureDef()
com.google.ar.schemas.sceneform.IntVec3Init: int createIntVec3Init(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.google.ar.sceneform.lullmodel.DataQuat: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.ImageMetadata: void nativeLoadSymbols()
com.google.ar.core.CameraConfigFilter: void nativeDestroyCameraConfigFilter(long,long)
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda0: SharedCamera$2$$ExternalSyntheticLambda0(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.ux.BaseArFragment: void onResume()
com.google.ar.core.Frame: com.google.ar.core.Pose nativeGetAndroidSensorPose(long,long)
com.google.android.filament.android.UiHelper: boolean isOpaque()
com.google.ar.sceneform.lullmodel.MaterialDef: com.google.ar.sceneform.lullmodel.MaterialDef __assign(int,java.nio.ByteBuffer)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
com.google.ar.schemas.lull.DataString: int createDataString(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Config: com.google.ar.core.Config setLightEstimationMode(com.google.ar.core.Config$LightEstimationMode)
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.Scene getFilamentScene()
com.google.ar.sceneform.ux.ScaleController: void onEndTransformation(com.google.ar.sceneform.ux.PinchGesture)
com.google.ar.core.RecordingConfig: void nativeSetAutoStopOnPause(long,long,boolean)
com.google.ar.core.Plane: int nativeGetType(long,long)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
com.google.ar.sceneform.rendering.Renderable: java.lang.IllegalArgumentException makeSubmeshOutOfRangeException(int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.google.ar.sceneform.ux.ScaleController: ScaleController(com.google.ar.sceneform.ux.BaseTransformableNode,com.google.ar.sceneform.ux.PinchGestureRecognizer)
com.google.ar.sceneform.math.Matrix: void decomposeTranslation(com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.sceneform.IntInit: IntInit()
com.google.ar.core.Config$UpdateMode: com.google.ar.core.Config$UpdateMode valueOf(java.lang.String)
com.google.ar.sceneform.rendering.Renderable: boolean isShadowCaster()
com.google.ar.sceneform.lullmodel.MaterialDef: java.lang.String name()
com.google.android.filament.Skybox: Skybox(long)
com.google.ar.sceneform.math.Vector3: void setDown()
com.google.android.filament.IndexBuffer: long access$300(long,long)
com.google.android.filament.TransformManager: float[] getWorldTransform(int,float[])
com.google.ar.schemas.sceneform.DoubleVec4Init: DoubleVec4Init()
com.google.ar.core.ArCoreApk$Availability: com.google.ar.core.ArCoreApk$Availability[] values()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: float smoothingAngle()
com.google.ar.schemas.sceneform.SamplerCompareMode: SamplerCompareMode()
com.google.ar.core.Pose: void getRotationQuaternion(float[],int)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: int attributesLength()
com.google.android.filament.TextureSampler: TextureSampler()
androidx.fragment.app.Fragment: void performAttach()
com.google.ar.core.DepthPoint: com.google.ar.core.TrackingState getTrackingState()
com.google.android.filament.IndexBuffer$Builder$BuilderFinalizer: void finalize()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.flatbuffers.FlatBufferBuilder: void addInt(int,int,int)
com.google.android.filament.IndexBuffer$Builder: com.google.android.filament.IndexBuffer build(com.google.android.filament.Engine)
com.google.ar.schemas.sceneform.SamplerParamsDef: int minFilter()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.google.android.filament.Engine: void destroyIndexBuffer(com.google.android.filament.IndexBuffer)
com.google.ar.schemas.sceneform.SceneformBundleDef: int createSceneformBundleDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int,int,int,int,int,int,int,int)
com.google.flatbuffers.Utf8Safe: int encodedLength(java.lang.CharSequence)
com.google.android.filament.Material: void nGetParameters(long,java.util.List,int)
com.google.ar.sceneform.rendering.AnimatorImpl: long getTotalDurationMs()
com.google.ar.sceneform.lullmodel.SkeletonDef: void addBoneParents(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.LightManager: float getSunHaloSize(int)
com.google.android.filament.RenderableManager: boolean nHasComponent(long,int)
com.google.ar.sceneform.rendering.AnimationData$Factory: com.google.ar.sceneform.rendering.AnimationData create(byte[],java.lang.String)
com.google.android.filament.View$Dithering: View$Dithering(java.lang.String,int)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addSamplers(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Material: void setFloat2(java.lang.String,float,float)
com.google.ar.sceneform.lullmodel.ModelDef: int createLodsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.core.ImageMetadata: byte getByte(int)
com.google.ar.core.Session: void nativeUpdate(long,long)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: int attributes(int)
com.google.android.filament.TransformManager: long getNativeObject()
com.google.ar.schemas.lull.DataFloat: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef renderables(com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef,int)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addCmPerUnit(com.google.flatbuffers.FlatBufferBuilder,float)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: boolean isValid()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight$Builder irradiance(com.google.android.filament.Texture)
com.google.ar.sceneform.math.Matrix: void set(float[])
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.google.ar.sceneform.rendering.Renderable: void setShadowReceiver(boolean)
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.rendering.Vertex$Builder builder()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: int usagePerChannel(int)
com.google.ar.core.Plane: com.google.ar.core.Pose getCenterPose()
com.google.ar.sceneform.rendering.LoadGltfListener: void onFinishedLoadingModel(long)
com.google.ar.schemas.sceneform.DoubleVec4Init: double y()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
com.google.ar.sceneform.lullmodel.DataFloat: int endDataFloat(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
com.google.ar.core.Session: void startRecording(com.google.ar.core.RecordingConfig)
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource$Builder setRecenterMode(com.google.ar.sceneform.assets.RenderableSource$RecenterMode)
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.core.AugmentedFace getAugmentedFace()
com.google.ar.sceneform.lullmodel.DataFloat: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.BlendShape: long tangentIndices32(int)
com.google.ar.core.Config: void nativeSetGeospatialMode(long,long,long,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.google.ar.sceneform.rendering.IEngine: void destroyView(com.google.android.filament.View)
com.google.android.filament.TransformManager: void nDestroy(long,int)
com.google.ar.sceneform.ux.BaseTransformableNode: void onTap(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.core.dependencies.j: void b(android.os.Bundle)
com.google.ar.core.AugmentedImage: java.util.Collection getAnchors()
com.google.flatbuffers.Utf8: Utf8()
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType forNumber(int)
com.google.ar.core.Session: void nativePause(long)
com.google.ar.sceneform.rendering.GLHelper: android.opengl.EGLContext makeContext(android.opengl.EGLContext)
com.google.ar.schemas.sceneform.DoubleVec4Init: com.google.ar.schemas.sceneform.DoubleVec4Init getRootAsDoubleVec4Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.DoubleVec4Init)
com.google.ar.schemas.lull.ModelInstanceDef: void startShaderToMeshBonesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Config: com.google.ar.core.Config setDepthMode(com.google.ar.core.Config$DepthMode)
com.google.ar.sceneform.rendering.MaterialFactory: void applyDefaultPbrParams(com.google.ar.sceneform.rendering.Material)
com.google.ar.core.AugmentedFace: java.nio.ByteBuffer nativeGetMeshTextureCoordinatesByteBuffer(long,long)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.android.filament.Camera: void setLensProjection(double,double,double)
com.google.ar.schemas.sceneform.BoolVec2Init: boolean y()
com.google.ar.schemas.sceneform.ParameterInitDefType: java.lang.String name(int)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
com.google.ar.sceneform.rendering.CleanupRegistry: long reclaimReleasedResources()
com.google.ar.schemas.lull.ArcDef: int numSamples()
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda3: void run()
com.google.ar.sceneform.Node: java.lang.String toString()
com.google.ar.sceneform.lullmodel.BlendShape: void startBlendShape(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality forNumber(int)
com.google.ar.core.Anchor: Anchor()
com.google.ar.core.CameraIntrinsics: void getImageDimensions(int[],int)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.ar.sceneform.rendering.Renderable: void setCollisionShape(com.google.ar.sceneform.collision.CollisionShape)
com.google.ar.core.SharedCamera$$ExternalSyntheticLambda0: SharedCamera$$ExternalSyntheticLambda0()
com.google.ar.core.RecordingConfig: int nativeGetRecordingRotation(long,long)
com.google.ar.core.Session: void resume()
com.google.ar.sceneform.rendering.PlaneRenderer: boolean isVisible()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.ar.core.InstallActivity: void finish()
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean isMinAndroidApiLevelImpl()
com.google.ar.schemas.sceneform.SceneformBundleDef: void addVersion(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelInstanceDef: void startMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Stream: void nBuilderStreamSource(long,java.lang.Object)
com.google.ar.sceneform.lullmodel.TextureDef: java.nio.ByteBuffer dataAsByteBuffer()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
com.google.android.filament.Material$Parameter: void add(java.util.List,java.lang.String,int,int,int)
com.google.android.filament.LightManager: float getSunHaloFalloff(int)
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment: ViewRenderable$VerticalAlignment(java.lang.String,int)
com.google.android.filament.MaterialInstance: long getNativeObject()
com.google.ar.core.exceptions.SessionUnsupportedException: SessionUnsupportedException()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.ar.sceneform.collision.Box: boolean sphereIntersection(com.google.ar.sceneform.collision.Sphere)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.google.android.filament.EntityManager: void nDestroyArray(long,int,int[])
com.google.ar.core.annotations.UsedByNative: java.lang.String value()
com.google.android.filament.View: void nSetToneMapping(long,int)
com.google.ar.sceneform.ArSceneView: void initializePlaneRenderer()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
com.google.android.filament.RenderableManager: void access$600(long,float,float,float,float,float,float)
com.google.android.filament.View: int nGetAntiAliasing(long)
com.google.ar.sceneform.NodeParent: void stopIterating()
com.google.ar.schemas.sceneform.AnimationDef: int dataLength()
com.google.ar.schemas.lull.DataVec3: com.google.ar.schemas.lull.DataVec3 __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.ExternalSamplerInit: void addPath(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: MaterialTextureDef()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.google.ar.schemas.lull.VertexAttributeUsage: VertexAttributeUsage()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.google.ar.schemas.lull.ModelPipelineImportDef: int targetMeshesLength()
com.google.ar.core.Config$CloudAnchorMode: com.google.ar.core.Config$CloudAnchorMode[] values()
com.google.ar.core.ImageMetadata: byte[] nativeGetByteArrayFromMetadataEntry(long,long)
com.google.android.filament.Fence$FenceStatus: com.google.android.filament.Fence$FenceStatus[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.ar.sceneform.lullmodel.DataBytes: int valueLength()
androidx.appcompat.widget.SearchView: int getMaxWidth()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.TextureDef: void addIsRgbm(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.VertexAttribute vertexAttributes(com.google.ar.sceneform.lullmodel.VertexAttribute,int)
com.google.ar.schemas.lull.TextureDef: void addWrapR(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.dependencies.d: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.filament.Platform$UnknownPlatform: void warn(java.lang.String)
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.rendering.Renderer getRenderer()
com.google.ar.schemas.sceneform.RuntimeAssetDef: int renderFlags()
com.google.ar.sceneform.rendering.Renderable$Builder: java.lang.Class getRenderableClass()
com.google.android.filament.Camera: void nGetForwardVector(long,float[])
com.google.flatbuffers.Table: int __indirect(int,java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder: int createSortedVectorOfTables(com.google.flatbuffers.Table,int[])
com.google.ar.sceneform.rendering.EngineInstance: void destroyEngine()
com.google.ar.schemas.sceneform.DoubleVec2Init: DoubleVec2Init()
com.google.ar.core.AugmentedFace: java.nio.FloatBuffer getMeshNormals()
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: com.google.android.filament.SwapChain createSwapChain(java.lang.Object,long)
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.lang.String compressedMaterial()
com.google.flatbuffers.FlatBufferBuilder: void putLong(long)
com.google.ar.schemas.lull.BlendShape: int vertexIndices16(int)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.google.ar.schemas.sceneform.MaterialDef: void addCompiledIndex(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelDef: int texturesLength()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer vertexDataAsByteBuffer()
com.google.ar.sceneform.Node: boolean isEnabled()
com.google.ar.sceneform.ux.GesturePointersUtility: boolean isPointerIdRetained(int)
com.google.ar.schemas.sceneform.RuntimeAssetDef: com.google.ar.schemas.sceneform.RuntimeAssetDef getRootAsRuntimeAssetDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.RuntimeAssetDef)
com.google.ar.sceneform.collision.Plane: void setCenter(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.rendering.MaterialParameters: void setFloat2(java.lang.String,float,float)
com.google.ar.sceneform.rendering.Renderable: java.util.ArrayList getMaterialBindings()
com.google.ar.schemas.sceneform.ParameterDef: com.google.ar.schemas.sceneform.ParameterDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.VariantArrayDefImpl: com.google.ar.schemas.lull.VariantArrayDefImpl getRootAsVariantArrayDefImpl(java.nio.ByteBuffer,com.google.ar.schemas.lull.VariantArrayDefImpl)
com.google.ar.core.TrackData: long nativeGetFrameTimestamp(long,long)
com.google.ar.sceneform.rendering.Light: void setOuterConeAngle(float)
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.ModelInstanceDef lods(int)
com.google.ar.schemas.lull.DataFloat: float value()
com.google.ar.sceneform.ux.R$attr: R$attr()
com.google.ar.sceneform.math.Quaternion: void set(float,float,float,float)
com.google.ar.sceneform.lullmodel.ArcDef: float outerRadius()
com.google.ar.sceneform.ArSceneView: void lambda$resumeAsync$1$ArSceneView(java.lang.ref.WeakReference)
com.google.ar.schemas.lull.LayoutHorizontalAlignment: LayoutHorizontalAlignment()
com.google.ar.core.HitResult: com.google.ar.core.Pose nativeGetPose(long,long)
com.google.ar.core.TrackData: void finalize()
com.google.ar.sceneform.Node: boolean dispatchToViewRenderable(android.view.MotionEvent)
com.google.android.filament.MaterialInstance: void nSetParameterInt4(long,java.lang.String,int,int,int,int)
com.google.ar.schemas.sceneform.Vec2Init: com.google.ar.schemas.sceneform.Vec2Init getRootAsVec2Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.Vec2Init)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.google.ar.sceneform.rendering.ViewRenderable: float getOffsetRatioForAlignment(com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
com.google.ar.sceneform.collision.Ray: com.google.ar.sceneform.math.Vector3 getOrigin()
com.google.android.filament.TextureSampler: void setWrapModeT(com.google.android.filament.TextureSampler$WrapMode)
com.google.ar.sceneform.TouchEventSystem: com.google.ar.sceneform.Node dispatchTouchEvent(android.view.MotionEvent,com.google.ar.sceneform.HitTestResult,com.google.ar.sceneform.Node,int,boolean)
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
com.google.android.filament.Skybox: long access$000()
com.google.ar.schemas.lull.ModelIndexRange: void __init(int,java.nio.ByteBuffer)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
com.google.ar.sceneform.rendering.ThreadPools: java.util.concurrent.Executor getMainExecutor()
com.google.android.filament.LightManager: void access$600(long,float,float,float)
com.google.ar.schemas.sceneform.DoubleVec4Init: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addFlattenHierarchyAndTransformVerticesToRootSpace(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.utilities.LoadHelper: void flushHttpCache()
com.google.ar.sceneform.ux.ScaleController: float getSensitivity()
com.google.ar.sceneform.rendering.CameraStream: void lambda$new$0(com.google.ar.sceneform.rendering.Material)
com.google.android.filament.LightManager: void nSetSunHaloFalloff(long,int,float)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.google.ar.core.AugmentedImageDatabase: java.nio.ByteBuffer nativeSerialize(long,long)
com.google.ar.schemas.sceneform.SceneformBundleDef: void startInputsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelDef: void addTextures(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.ExternalSamplerInit: com.google.ar.schemas.sceneform.ExternalSamplerInit getRootAsExternalSamplerInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.ExternalSamplerInit)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
com.google.ar.core.Plane: float getExtentX()
com.google.ar.sceneform.lullmodel.DataFloat: com.google.ar.sceneform.lullmodel.DataFloat getRootAsDataFloat(java.nio.ByteBuffer)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.ar.schemas.lull.ModelPipelineImportDef: java.lang.String name()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: void startModelPipelineSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.flatbuffers.Table: int __vector(int)
com.google.ar.schemas.lull.VariantMapDef: void __init(int,java.nio.ByteBuffer)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.google.ar.sceneform.math.Matrix: void decomposeRotation(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: java.lang.String nameOverride()
com.google.ar.schemas.lull.MaterialDef: int texturesLength()
com.google.ar.sceneform.TouchEventSystem: TouchEventSystem()
com.google.ar.core.HitResult: void nativeDestroyHitResult(long,long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.google.ar.sceneform.rendering.ModelRenderable: com.google.ar.sceneform.rendering.SkeletonRig getSkeletonRig()
com.google.android.filament.Material$Parameter$Type: Material$Parameter$Type(java.lang.String,int)
com.google.ar.schemas.lull.DataBool: com.google.ar.schemas.lull.DataBool getRootAsDataBool(java.nio.ByteBuffer)
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$WrapMode getWrapModeS()
com.google.ar.sceneform.rendering.PlaneRenderer: boolean isEnabled()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.google.android.filament.Texture: void access$900(long)
com.google.ar.sceneform.math.Vector3: void setLeft()
com.google.ar.core.InstallActivity: void onSaveInstanceState(android.os.Bundle)
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode valueOf(java.lang.String)
com.google.ar.core.SharedCamera: void setDummyListenerToAvoidImageBufferStarvation()
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,com.google.android.filament.Texture,com.google.android.filament.TextureSampler)
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer vertexIndices16InByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.View: boolean nIsPostProcessingEnabled(long)
com.google.android.filament.Engine$Backend: com.google.android.filament.Engine$Backend valueOf(java.lang.String)
com.google.ar.sceneform.ux.TwistGesture: void onFinish()
com.google.ar.sceneform.AnchorNode: void setLocalRotation(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.lullmodel.MaterialDef: com.google.ar.sceneform.lullmodel.MaterialTextureDef textures(com.google.ar.sceneform.lullmodel.MaterialTextureDef,int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: EnvironmentalHdrLightEstimate(float[],float[],com.google.ar.sceneform.rendering.Color,float,android.media.Image[])
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod valueOf(java.lang.String)
com.google.ar.schemas.sceneform.Vec3Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.schemas.lull.KeyVariantPairDef: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.IntVec3Init: int endIntVec3Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.Engine: void nDestroyCamera(long,long)
androidx.window.embedding.SplitRule: int getMinWidth()
com.google.ar.sceneform.rendering.IEngine: void destroyMaterialInstance(com.google.android.filament.MaterialInstance)
com.google.ar.schemas.sceneform.LightingDef: LightingDef()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.google.ar.sceneform.collision.RayHit: RayHit()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.google.flatbuffers.FlatBufferBuilder: void putFloat(float)
com.google.ar.sceneform.rendering.Color: void set(float,float,float,float)
com.google.ar.schemas.sceneform.InputDef: java.nio.ByteBuffer hashInByteBuffer(java.nio.ByteBuffer)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.rendering.ModelRenderable access$100(com.google.ar.sceneform.SkeletonNode)
com.google.android.filament.View: void nSetClearTargets(long,boolean,boolean,boolean)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createAabbsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.core.Config$CloudAnchorMode: com.google.ar.core.Config$CloudAnchorMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.ar.schemas.sceneform.IntInit: com.google.ar.schemas.sceneform.IntInit __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$Builder setSizer(com.google.ar.sceneform.rendering.ViewSizer)
com.google.ar.core.Config$UpdateMode: com.google.ar.core.Config$UpdateMode[] values()
com.google.ar.schemas.lull.AabbDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addAnisotropyLog2(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.ThreadPools: void setMainExecutor(java.util.concurrent.Executor)
androidx.fragment.app.Fragment: int getStateAfterAnimating()
com.google.ar.sceneform.rendering.GLHelper: void destroyContext(android.opengl.EGLContext)
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.rendering.LightInstance createInstance(com.google.ar.sceneform.common.TransformProvider)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.schemas.lull.TextureDef: void addData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Asserts: double[] assertMat4d(double[])
com.google.android.filament.TextureSampler$CompareFunction: TextureSampler$CompareFunction(java.lang.String,int)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
com.google.ar.sceneform.rendering.AnimatorImpl: void setFactory(com.google.ar.sceneform.rendering.AnimatorImpl$Factory)
com.google.ar.sceneform.Node: boolean isActive()
com.google.ar.core.AugmentedImageDatabase: int addImage(java.lang.String,android.graphics.Bitmap,float)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: java.util.concurrent.CompletableFuture build()
com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
com.google.android.filament.Engine: void nDestroyView(long,long)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineCollidableDef collidable()
com.google.android.filament.TextureSampler: void setMagFilter(com.google.android.filament.TextureSampler$MagFilter)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.AnimatorImpl: void setDurationMs(long)
com.google.ar.sceneform.lullmodel.DataString: java.nio.ByteBuffer valueInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.Vec4Init: void addW(com.google.flatbuffers.FlatBufferBuilder,float)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
com.google.ar.sceneform.SceneView: com.google.ar.sceneform.Scene getScene()
com.google.ar.schemas.lull.AabbDef: com.google.ar.schemas.lull.Vec3 max()
com.google.ar.core.Frame: long nativeCreateFrame(long)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.sceneform.ux.BaseTransformationController: boolean canStartTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.schemas.sceneform.TransformDef: void startTransformDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineCollidableDef collidable(com.google.ar.schemas.lull.ModelPipelineCollidableDef)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.google.android.filament.LightManager: void setColor(int,float,float,float)
com.google.ar.core.CameraIntrinsics: void nativeGetPrincipalPoint(long,long,float[],int)
com.google.ar.schemas.sceneform.CompiledMaterialDef: com.google.ar.schemas.sceneform.CompiledMaterialDeclDef decl(com.google.ar.schemas.sceneform.CompiledMaterialDeclDef)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: float access$300(com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder)
com.google.ar.schemas.lull.ModelDef: void finishSizePrefixedModelDefBuffer(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.RenderableDefinition: void applyDefinitionToDataIndexBuffer(com.google.ar.sceneform.rendering.IRenderableInternalData)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter access$400(com.google.ar.sceneform.rendering.Texture$Sampler$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: com.google.ar.schemas.lull.Vec3 size(com.google.ar.schemas.lull.Vec3)
com.google.ar.core.Anchor: int nativeGetTerrainAnchorState(long,long)
com.google.ar.sceneform.lullmodel.VariantMapDef: void startVariantMapDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.AnchorNode: AnchorNode(com.google.ar.core.Anchor)
com.google.android.filament.LightManager: void nSetFalloff(long,int,float)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 add(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.sceneform.SamplerDef: int endSamplerDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.HitResult: void finalize()
com.google.android.filament.View$AntiAliasing: com.google.android.filament.View$AntiAliasing valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.google.ar.sceneform.ux.BaseArFragment: void initializeSession()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.Scene createScene()
com.google.ar.schemas.lull.ModelPipelineDef: void startSourcesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.math.Matrix getFinalModelMatrix(com.google.ar.sceneform.math.Matrix)
com.google.ar.schemas.lull.BlendShape: int tangentIndices16(int)
com.google.android.filament.Filament: void init()
com.google.android.filament.IndirectLight: void nGetDirectionEstimate(long,float[])
com.google.ar.schemas.lull.BlendShape: void addTangentIndices32(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.RuntimeAssetDef: com.google.ar.schemas.sceneform.RuntimeAssetDef __assign(int,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.flatbuffers.Table: java.nio.ByteBuffer getByteBuffer()
com.google.ar.core.Point: com.google.ar.core.TrackingState getTrackingState()
com.google.android.filament.Texture$PixelBufferDescriptor: Texture$PixelBufferDescriptor(java.nio.ByteBuffer,com.google.android.filament.Texture$CompressedFormat,int)
com.google.ar.schemas.lull.ModelInstanceDef: void startIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.LightManager: void nGetDirection(long,int,float[])
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.SubmeshAabb aabbs(int)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyFence(com.google.android.filament.Fence)
com.google.ar.sceneform.lullmodel.VertexAttribute: int usage()
com.google.ar.sceneform.math.Quaternion: int hashCode()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.google.android.filament.Asserts: void assertMat3fIn(float[])
com.google.ar.sceneform.math.Vector3: boolean equals(java.lang.Object)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: com.google.ar.sceneform.rendering.Material access$100(com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder)
com.google.ar.core.Plane: Plane(long,com.google.ar.core.Session)
com.google.ar.sceneform.lullmodel.MaterialDef: void addProperties(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter access$500(com.google.ar.sceneform.rendering.Texture$Sampler$Builder)
com.google.ar.core.exceptions.MetadataNotFoundException: MetadataNotFoundException()
com.google.ar.sceneform.rendering.CameraProvider: com.google.ar.sceneform.math.Matrix getProjectionMatrix()
com.google.android.filament.View$Dithering: com.google.android.filament.View$Dithering[] values()
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.math.Vector3 access$100(com.google.ar.sceneform.rendering.Vertex$Builder)
com.google.ar.core.Pose: float ty()
com.google.ar.sceneform.rendering.MaterialFactory: java.util.concurrent.CompletableFuture makeTransparentWithTexture(android.content.Context,com.google.ar.sceneform.rendering.Texture)
com.google.ar.core.Anchor: java.lang.String nativeGetCloudAnchorId(long,long)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: com.google.ar.schemas.sceneform.CompiledMaterialDeclDef getRootAsCompiledMaterialDeclDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.CompiledMaterialDeclDef)
com.google.android.filament.LightManager: void nDestroy(long,int)
com.google.ar.schemas.lull.VariantArrayDef: int createVariantArrayDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.math.Quaternion: void set(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroy()
com.google.ar.schemas.lull.ModelInstanceDef: int endModelInstanceDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.google.ar.sceneform.collision.Sphere: void transform(com.google.ar.sceneform.common.TransformProvider,com.google.ar.sceneform.collision.CollisionShape)
com.google.ar.schemas.lull.BlendShape: void addVertexData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.ImageMetadata: void finalize()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.google.ar.schemas.lull.DataVec4: com.google.ar.schemas.lull.Vec4 value()
com.google.ar.sceneform.lullmodel.Vec3: float z()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
com.google.ar.schemas.sceneform.SamplerParamsDef: int wrapR()
com.google.ar.schemas.lull.VariantArrayDefImpl: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.core.Bounds: int getRight()
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.AabbDef boundingBox(com.google.ar.schemas.lull.AabbDef)
com.google.ar.schemas.lull.Recti: int x()
com.google.android.filament.Colors$RgbaType: com.google.android.filament.Colors$RgbaType valueOf(java.lang.String)
com.google.ar.sceneform.ux.AugmentedFaceNode: java.lang.String boneNameForRegion(com.google.ar.core.AugmentedFace$RegionType)
com.google.ar.core.Plane: float getExtentZ()
com.google.ar.schemas.lull.ModelDef: void addBoundingBox(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.ArCoreApk$UserMessageType: com.google.ar.core.ArCoreApk$UserMessageType[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.ar.schemas.sceneform.DoubleVec4Init: void addX(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.ar.sceneform.TouchEventSystem: boolean tryDispatchToSceneTouchListener(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.Scene: void setUseHdrLightEstimate(boolean)
com.google.ar.sceneform.collision.Collider: void setShape(com.google.ar.sceneform.collision.CollisionShape)
com.google.ar.core.Track: com.google.ar.core.Track setId(java.util.UUID)
com.google.ar.core.AugmentedImageDatabase: java.nio.ByteBuffer convertBitmapToGrayscaleDirectBuffer(android.graphics.Bitmap)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: void addAttributes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: com.google.ar.sceneform.lullmodel.MaterialTextureDef getRootAsMaterialTextureDef(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef getRootAsModelPipelineSkeletonDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.ar.sceneform.ux.BaseGesture: com.google.ar.sceneform.ux.BaseGesture getSelf()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment access$200(com.google.ar.sceneform.rendering.ViewRenderable$Builder)
com.google.ar.sceneform.rendering.SceneformBundle: com.google.ar.schemas.sceneform.SceneformBundleDef tryLoadSceneformBundle(java.nio.ByteBuffer)
com.google.ar.sceneform.Node: void removeTransformChangedListener(com.google.ar.sceneform.Node$TransformChangedListener)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: java.nio.ByteBuffer fileInByteBuffer(java.nio.ByteBuffer)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
com.google.ar.core.AugmentedImage: float nativeGetExtentX(long,long)
com.google.ar.core.AugmentedImage: int nativeGetIndex(long,long)
com.google.android.filament.AndroidPlatform: boolean validateSharedContext(java.lang.Object)
com.google.ar.schemas.sceneform.ScalarInit: int createScalarInit(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addFixInfacingNormals(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.core.Session: void nativeStopRecording(long)
com.google.ar.sceneform.ux.BaseGestureRecognizer: void dispatchGestureStarted(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.schemas.sceneform.LightingDef: com.google.ar.schemas.lull.Vec3 shCoefficients(com.google.ar.schemas.lull.Vec3,int)
com.google.android.filament.View: void setName(java.lang.String)
com.google.ar.sceneform.rendering.ExternalTexture: android.graphics.SurfaceTexture getSurfaceTexture()
com.google.android.filament.Texture$Sampler: com.google.android.filament.Texture$Sampler[] values()
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.rendering.IRenderableInternalData getRenderableData()
com.google.ar.schemas.lull.ModelPipelineMaterialDef: void startModelPipelineMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.dependencies.e: void c(android.os.Parcel,android.os.Parcelable)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: void addUsage(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.TextureDef: int targetType()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.ar.core.SharedCamera: android.media.ImageReader nativeSharedCameraGetImageReaderMotionTracking(long,android.hardware.camera2.CameraDevice)
com.google.ar.sceneform.lullmodel.VariantArrayDef: com.google.ar.sceneform.lullmodel.VariantArrayDef getRootAsVariantArrayDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.VariantArrayDef)
com.google.ar.schemas.lull.Vec2i: int createVec2i(com.google.flatbuffers.FlatBufferBuilder,int,int)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.AabbDef: void __init(int,java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder: void Nested(int)
com.google.android.filament.Texture: void access$300(long,int)
com.google.android.filament.android.UiHelper: UiHelper(com.google.android.filament.android.UiHelper$ContextErrorPolicy)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.filament.Material$Builder: Material$Builder()
com.google.android.filament.LightManager: boolean isShadowCaster(int)
com.google.android.filament.android.UiHelper$ContextErrorPolicy: UiHelper$ContextErrorPolicy(java.lang.String,int)
com.google.ar.core.Config$DepthMode: com.google.ar.core.Config$DepthMode[] $values()
com.google.ar.sceneform.SceneView: boolean onBeginFrame(long)
com.google.ar.schemas.sceneform.Vec2Init: com.google.ar.schemas.sceneform.Vec2Init getRootAsVec2Init(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.DataVec2: com.google.ar.sceneform.lullmodel.Vec2 value(com.google.ar.sceneform.lullmodel.Vec2)
com.google.ar.sceneform.ArSceneView: boolean isLightEstimationEnabled()
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus valueOf(java.lang.String)
com.google.ar.schemas.sceneform.IntVec4Init: com.google.ar.schemas.sceneform.IntVec4Init __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Renderer: android.content.Context getContext()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable makeRenderable()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.core.exceptions.CameraNotAvailableException: CameraNotAvailableException(java.lang.String)
com.google.ar.sceneform.common.TransformProvider: com.google.ar.sceneform.math.Matrix getWorldModelMatrix()
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Camera: boolean unproject(float,float,float,com.google.ar.sceneform.math.Vector3)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.google.ar.sceneform.rendering.Renderable: void setMaterial(int,com.google.ar.sceneform.rendering.Material)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.RuntimeAssetDef runtime(com.google.ar.schemas.sceneform.RuntimeAssetDef)
com.google.ar.sceneform.lullmodel.DataVec2: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.BaseGesture: void dispatchFinishedEvent()
com.google.ar.sceneform.ux.AugmentedFaceNode: void onUpdate(com.google.ar.sceneform.FrameTime)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$Builder setHorizontalAlignment(com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment)
com.google.ar.core.SharedCamera: void onDeviceOpened(android.hardware.camera2.CameraDevice)
com.google.android.filament.LightManager: void nBuilderCastLight(long,boolean)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.ar.sceneform.collision.Collider: void updateCachedWorldShape()
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: java.nio.ByteBuffer sourceAsByteBuffer()
com.google.android.filament.Material: long nCreateInstance(long)
com.google.ar.core.Anchor$TerrainAnchorState: Anchor$TerrainAnchorState(java.lang.String,int,int)
com.google.android.filament.VertexBuffer: void populateTangentQuaternions(com.google.android.filament.VertexBuffer$QuatTangentContext)
com.google.ar.core.SharedCamera: void nativeSharedCameraCaptureSessionActive(long,android.hardware.camera2.CameraCaptureSession)
com.google.ar.core.InstantPlacementPoint$TrackingMethod: InstantPlacementPoint$TrackingMethod(java.lang.String,int,int)
com.google.ar.core.AugmentedImageDatabase: int nativeGetNumImages(long,long)
com.google.android.filament.Fence: long getNativeObject()
com.google.android.filament.Texture: void nSetExternalImage(long,long,long)
com.google.ar.sceneform.utilities.SceneformBufferUtils: byte[] inputStreamToByteArray(java.io.InputStream)
com.google.flatbuffers.Table: int keysCompare(java.lang.Integer,java.lang.Integer,java.nio.ByteBuffer)
com.google.ar.schemas.lull.DataBytes: java.nio.ByteBuffer valueAsByteBuffer()
com.google.ar.sceneform.collision.Box: void setCenter(com.google.ar.sceneform.math.Vector3)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.google.ar.sceneform.math.Vector3: Vector3(float,float,float)
com.google.ar.core.InstantPlacementPoint: com.google.ar.core.Pose nativeGetPose(long,long)
com.google.ar.core.CameraConfig: int nativeGetFacingDirection(long,long)
com.google.flatbuffers.FlatBufferBuilder: void pad(int)
com.google.ar.sceneform.ux.R$integer: R$integer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.ar.core.TrackData: java.nio.ByteBuffer getData()
com.google.ar.core.exceptions.UnavailableApkTooOldException: UnavailableApkTooOldException(java.lang.String)
com.google.ar.sceneform.rendering.ThreadPools: ThreadPools()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
com.google.android.filament.IndirectLight$Builder$BuilderFinalizer: void finalize()
com.google.ar.core.LightEstimate: long nativeCreateLightEstimate(long)
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$WrapMode getWrapModeR()
com.google.ar.sceneform.collision.Sphere: com.google.ar.sceneform.collision.Sphere makeCopy()
com.google.ar.sceneform.rendering.Material$Builder: void checkPreconditions()
com.google.ar.schemas.lull.VariantArrayDefImpl: void startVariantArrayDefImpl(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.BlendShape: int vertexDataLength()
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda1: void run()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.ar.sceneform.collision.Sphere: boolean sphereIntersection(com.google.ar.sceneform.collision.Sphere)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.filament.MaterialInstance$IntElement: MaterialInstance$IntElement(java.lang.String,int)
com.google.ar.sceneform.ux.ScaleController: boolean canStartTransformation(com.google.ar.sceneform.ux.PinchGesture)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.ar.sceneform.assets.RenderableSource$Builder: com.google.ar.sceneform.assets.RenderableSource$Builder setSource(android.content.Context,android.net.Uri,com.google.ar.sceneform.assets.RenderableSource$SourceType)
com.google.android.filament.Camera: float getCullingFar()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int shaderToMeshBones(int)
com.google.android.filament.View: int nGetSampleCount(long)
com.google.ar.sceneform.ux.BaseArFragment: boolean requestInstall()
com.google.flatbuffers.FlatBufferBuilder: byte[] sizedByteArray()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.PointCloud: java.nio.IntBuffer getIds()
com.google.ar.core.CameraConfigFilter: com.google.ar.core.CameraConfigFilter setTargetFps(java.util.EnumSet)
com.google.ar.sceneform.lullmodel.Rect: float y()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.VertexAttribute vertexAttributes(int)
com.google.ar.sceneform.lullmodel.DataBytes: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.exceptions.MissingGlContextException: MissingGlContextException()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: HeadlessEngineWrapper()
com.google.ar.core.Pose: float[] getTransformedAxis(int,float)
com.google.ar.schemas.lull.ModelPipelineDef: int texturesLength()
com.google.ar.core.Config: com.google.ar.core.Config$DepthMode getDepthMode()
com.google.ar.sceneform.lullmodel.ArcDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.Vec2: float y()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.google.android.filament.Material: com.google.android.filament.MaterialInstance getDefaultInstance()
com.google.android.filament.RenderableManager: long nCreateBuilder(int)
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.ModelDef __assign(int,java.nio.ByteBuffer)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.google.ar.schemas.sceneform.SamplerInit: void __init(int,java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder: void addOffset(int,int,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: java.nio.ByteBuffer sourceInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.core.Session createSessionWithFeatures()
com.google.ar.core.Pose: void toMatrix(float[],int)
com.google.ar.sceneform.ux.BaseArFragment: void setupSelectionRenderable(com.google.ar.sceneform.ux.FootprintSelectionVisualizer)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement valueOf(java.lang.String)
com.google.ar.schemas.lull.BlendShape: long tangentIndices32(int)
com.google.ar.sceneform.resources.ResourceRegistry: java.util.concurrent.CompletableFuture get(java.lang.Object)
com.google.ar.sceneform.collision.Sphere: com.google.ar.sceneform.collision.CollisionShape makeCopy()
com.google.android.filament.MaterialInstance: void setSpecularAntiAliasingVariance(float)
com.google.ar.core.TrackData: void release()
com.google.ar.core.Trackable: com.google.ar.core.TrackingState getTrackingState()
com.google.ar.sceneform.rendering.Renderable: int getRenderPriority()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.ar.schemas.sceneform.IntVec3Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.DataInt: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Config$FocusMode: Config$FocusMode(java.lang.String,int,int)
androidx.fragment.app.Fragment: int getId()
com.google.ar.sceneform.lullmodel.MaterialTextureDef: com.google.ar.sceneform.lullmodel.MaterialTextureDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: int createModelPipelineMaterialDef(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.sceneform.lullmodel.DataVec2: int endDataVec2(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.GLHelper: int createCameraTexture()
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 zero()
com.google.ar.core.Frame: void finalize()
com.google.flatbuffers.FlatBufferBuilder: void slot(int)
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material$Builder setRegistryId(java.lang.Object)
com.google.android.filament.TextureSampler: int nCreateCompareSampler(int,int)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.google.ar.sceneform.ArSceneView: boolean isLightDirectionUpdateEnabled()
com.google.ar.sceneform.SkeletonNode: void setBoneAttachment(java.lang.String,com.google.ar.sceneform.Node)
com.google.ar.sceneform.lullmodel.AabbDef: AabbDef()
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.schemas.lull.DataBytes: com.google.ar.schemas.lull.DataBytes __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Point: com.google.ar.core.Pose nativeGetPose(long,long)
com.google.ar.schemas.lull.BlendShape: int vertexIndices16Length()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
com.google.ar.core.Pose: com.google.ar.core.Pose makeInterpolated(com.google.ar.core.Pose,com.google.ar.core.Pose,float)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
com.google.android.filament.RenderableManager: int access$1300(long,int,java.nio.Buffer,int)
com.google.ar.sceneform.rendering.LightProbe: void setCubeMap(android.media.Image[])
com.google.ar.schemas.lull.DataBytes: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.RenderableManager: void access$900(long,boolean)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.google.ar.schemas.lull.BlendShape: long vertexIndices32(int)
com.google.ar.sceneform.rendering.Material: java.lang.Object nGetMaterialParameters(long,int)
com.google.ar.sceneform.lullmodel.AxisSystem: java.lang.String name(int)
com.google.ar.sceneform.rendering.Renderable: int getSubmeshCount()
com.google.ar.schemas.sceneform.SamplerInit: int usage()
com.google.ar.schemas.lull.MaterialDef: int endMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$Builder setView(android.content.Context,android.view.View)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,boolean)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: java.nio.ByteBuffer sourceAsByteBuffer()
com.google.ar.sceneform.lullmodel.Rect: float x()
com.google.android.filament.Texture: void nBuilderLevels(long,int)
com.google.ar.sceneform.lullmodel.DataQuat: com.google.ar.sceneform.lullmodel.DataQuat getRootAsDataQuat(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataQuat)
com.google.ar.core.AugmentedImageDatabase: AugmentedImageDatabase(com.google.ar.core.Session)
com.google.ar.sceneform.lullmodel.DeviceType: java.lang.String name(int)
com.google.ar.schemas.lull.VariantMapDef: int endVariantMapDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.SwapChain: long getNativeObject()
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.rendering.LightProbe$Builder setAssetName(java.lang.String)
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace valueOf(java.lang.String)
com.google.android.filament.IndirectLight: void nSetIntensity(long,float)
com.google.ar.schemas.sceneform.MaterialDef: int createParametersVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.sceneform.CompiledMaterialDef: void addDecl(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder levels(int)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.lull.ModelDef model()
com.google.android.filament.MathUtils: void packTangentFrame(float,float,float,float,float,float,float,float,float,float[],int)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.ar.core.Point$OrientationMode: com.google.ar.core.Point$OrientationMode[] $values()
com.google.ar.sceneform.rendering.Texture$Sampler: Texture$Sampler(com.google.ar.sceneform.rendering.Texture$Sampler$Builder)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder sunHaloFalloff(float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.google.ar.schemas.sceneform.LightingDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.android.UiHelper: void setDesiredSize(int,int)
com.google.ar.schemas.sceneform.AnimationDef: int createAnimationDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.collision.Sphere: Sphere(float)
com.google.android.filament.Camera: void nSetProjection(long,int,double,double,double,double,double,double)
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
com.google.ar.sceneform.rendering.RenderableDefinition: java.util.List getVertices()
com.google.android.filament.Fence: Fence(long)
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.google.ar.schemas.lull.AabbDef: com.google.ar.schemas.lull.Vec3 min(com.google.ar.schemas.lull.Vec3)
com.google.android.filament.Camera$Fov: com.google.android.filament.Camera$Fov valueOf(java.lang.String)
com.google.android.filament.LightManager: boolean nBuilderBuild(long,long,int)
com.google.ar.schemas.lull.KeyVariantPairDef: com.google.ar.schemas.lull.KeyVariantPairDef getRootAsKeyVariantPairDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Color: void set(com.google.ar.sceneform.rendering.Color)
com.google.ar.sceneform.utilities.LoadHelper: boolean assetExists(android.content.res.AssetManager,java.lang.String)
com.google.android.filament.Material: int nGetCullingMode(long)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.android.filament.View: void setCamera(com.google.android.filament.Camera)
com.google.ar.schemas.lull.SkeletonDef: int boneParentsLength()
com.google.ar.schemas.lull.MaterialTextureDef: MaterialTextureDef()
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.exceptions.NotYetAvailableException: NotYetAvailableException(java.lang.String)
com.google.ar.schemas.sceneform.IntVec3Init: void addY(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int indices16Length()
com.google.ar.sceneform.lullmodel.DataString: com.google.ar.sceneform.lullmodel.DataString getRootAsDataString(java.nio.ByteBuffer)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion normalized()
com.google.ar.sceneform.Scene: java.util.ArrayList hitTestAll(com.google.ar.sceneform.collision.Ray)
com.google.android.filament.RenderableManager: void setPriority(int,int)
com.google.ar.core.SharedCamera: void -$$Nest$monDeviceClosed(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraDevice)
com.google.ar.sceneform.lullmodel.DataBytes: int createDataBytes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.SceneformBundleDef: int createInputsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.ModelInstanceDef getRootAsModelInstanceDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelInstanceDef)
com.google.android.filament.MaterialInstance: void nSetFloatParameterArray(long,java.lang.String,int,float[],int,int)
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: com.google.ar.sceneform.rendering.Color getColor()
com.google.ar.schemas.lull.SkeletonDef: void addBoneParents(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Stream$Builder: com.google.android.filament.Stream$Builder stream(long)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.google.ar.schemas.lull.MaterialDef: com.google.ar.schemas.lull.VariantMapDef properties(com.google.ar.schemas.lull.VariantMapDef)
com.google.ar.schemas.lull.TextureDef: int targetType()
com.google.ar.schemas.lull.DataQuat: com.google.ar.schemas.lull.Quat value()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.filament.Material$BlendingMode: Material$BlendingMode(java.lang.String,int)
com.google.ar.core.CameraIntrinsics: float[] getPrincipalPoint()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: com.google.ar.schemas.lull.ModelPipelineRenderableDef getRootAsModelPipelineRenderableDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelPipelineRenderableDef)
com.google.ar.schemas.sceneform.IntVec4Init: IntVec4Init()
com.google.android.filament.TextureSampler$CompareMode: com.google.android.filament.TextureSampler$CompareMode[] values()
com.google.android.filament.TextureSampler: TextureSampler(com.google.android.filament.TextureSampler$MinFilter,com.google.android.filament.TextureSampler$MagFilter,com.google.android.filament.TextureSampler$WrapMode,com.google.android.filament.TextureSampler$WrapMode,com.google.android.filament.TextureSampler$WrapMode)
com.google.android.filament.RenderTarget: long access$300(long,int,int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getWorldPositionInternal()
com.google.ar.schemas.sceneform.TransformDef: com.google.ar.schemas.sceneform.TransformDef getRootAsTransformDef(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.BaseArFragment: BaseArFragment()
com.google.ar.sceneform.lullmodel.VertexAttribute: com.google.ar.sceneform.lullmodel.VertexAttribute __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Vertex build()
com.google.ar.schemas.lull.MaterialTextureUsage: MaterialTextureUsage()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.ar.schemas.sceneform.SamplerParamsDef: int anisotropyLog2()
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 cross(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.Node: boolean canAddChild(com.google.ar.sceneform.Node,java.lang.StringBuilder)
com.google.ar.sceneform.lullmodel.VariantMapDef: int endVariantMapDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.SkeletonDef: int boneParents(int)
com.google.ar.sceneform.Node: void setCollisionShape(com.google.ar.sceneform.collision.CollisionShape)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
com.google.ar.schemas.sceneform.InputDef: void startInputDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Frame: Frame(com.google.ar.core.Session,long)
com.google.android.filament.LightManager: void nSetSpotLightCone(long,int,float,float)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion lookRotation(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.android.filament.MathUtils: void packTangentFrame(float,float,float,float,float,float,float,float,float,float[])
com.google.ar.sceneform.math.Quaternion: java.lang.String toString()
com.google.ar.schemas.lull.DataBytes: void startDataBytes(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.core.Version: boolean equals(java.lang.Object)
com.google.ar.schemas.sceneform.TransformDef: float scale()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.google.ar.schemas.lull.ModelPipelineDef: void addRenderables(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Session: void finalize()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder layerMask(int,int)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
com.google.android.filament.LightManager: void destroy(int)
com.google.ar.sceneform.rendering.AnimatorImpl: com.google.ar.sceneform.rendering.AnimatorImpl createInstance(com.google.ar.sceneform.rendering.AnimatorImpl)
com.google.ar.sceneform.ux.TranslationController: void onEndTransformation(com.google.ar.sceneform.ux.DragGesture)
com.google.ar.schemas.sceneform.IntVec4Init: com.google.ar.schemas.sceneform.IntVec4Init getRootAsIntVec4Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.IntVec4Init)
com.google.ar.core.Session: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.ar.sceneform.rendering.Texture: Texture(com.google.ar.sceneform.rendering.TextureInternalData)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.ModelInstanceDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Point: Point()
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light build()
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
com.google.android.filament.Platform: Platform()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.ar.sceneform.assets.RenderableSource$Builder: android.net.Uri access$100(com.google.ar.sceneform.assets.RenderableSource$Builder)
com.google.ar.sceneform.Node: Node()
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,float)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod fromNumber(int)
com.google.ar.sceneform.lullmodel.MaterialDef: com.google.ar.sceneform.lullmodel.MaterialDef getRootAsMaterialDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.MaterialDef)
com.google.android.filament.RenderableManager: void nDestroyBuilder(long)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.CameraConfig: void nativeDestroyCameraConfig(long,long)
com.google.ar.core.TrackableBase: void internalReleaseNativeHandle(long,long)
com.google.android.filament.Scene: void clearNativeObject()
com.google.ar.sceneform.math.Matrix: void makeRotation(com.google.ar.sceneform.math.Quaternion)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
com.google.android.filament.Material: long access$000(long,java.nio.Buffer,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer tangentIndices32AsByteBuffer()
com.google.ar.schemas.sceneform.IntVec3Init: int x()
com.google.ar.schemas.lull.DataBytes: java.nio.ByteBuffer valueInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.Session: java.util.Collection getAllAnchors()
com.google.ar.schemas.lull.MaterialTextureDef: int usagePerChannel(int)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addCompiledMaterials(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.ar.schemas.sceneform.BoolVec4Init: void addZ(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.android.filament.NativeSurface: int getWidth()
com.google.ar.schemas.sceneform.InputDef: void addHash(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.Vec4Init: int createVec4Init(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: void startModelPipelineRenderableDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.SkeletonDef: int createBoneNamesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.Vec2: int createVec2(com.google.flatbuffers.FlatBufferBuilder,float,float)
com.google.ar.schemas.lull.DataVec4: com.google.ar.schemas.lull.DataVec4 getRootAsDataVec4(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataVec4)
com.google.android.filament.Engine: com.google.android.filament.Engine create(java.lang.Object)
com.google.android.filament.Texture: void setImage(com.google.android.filament.Engine,int,com.google.android.filament.Texture$PixelBufferDescriptor,int[])
com.google.ar.schemas.sceneform.LightingCubeFaceDef: java.nio.ByteBuffer dataAsByteBuffer()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.android.filament.LightManager$Builder$BuilderFinalizer: LightManager$Builder$BuilderFinalizer(long)
com.google.ar.sceneform.lullmodel.DataBool: void addValue(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.TextureDef textures(com.google.ar.schemas.lull.TextureDef,int)
com.google.ar.sceneform.collision.CollisionShape: boolean sphereIntersection(com.google.ar.sceneform.collision.Sphere)
com.google.ar.sceneform.lullmodel.BlendShape: void addTangentData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.nio.ByteBuffer compiledMaterialAsByteBuffer()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.ar.schemas.sceneform.IntVec4Init: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.Camera: void nSetModelMatrix(long,float[])
com.google.android.filament.EntityManager: long nGetEntityManager()
com.google.ar.sceneform.ux.PinchGesture: com.google.ar.sceneform.ux.BaseGesture getSelf()
com.google.flatbuffers.FlatBufferBuilder: void startVector(int,int,int)
com.google.ar.sceneform.lullmodel.MaterialTextureUsage: MaterialTextureUsage()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.filament.Engine: com.google.android.filament.SwapChain createSwapChainFromNativeSurface(com.google.android.filament.NativeSurface,long)
com.google.ar.sceneform.lullmodel.Vec2i: com.google.ar.sceneform.lullmodel.Vec2i __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.Vec2i: int x()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.google.ar.sceneform.rendering.Color: void setWhite()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.ar.sceneform.utilities.SceneformBufferUtils: java.nio.ByteBuffer inputStreamToByteBuffer(java.util.concurrent.Callable)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startShaderToMeshBonesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.SkeletonNode: boolean isAnimating()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: int createTargetMeshesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.ar.sceneform.lullmodel.VariantMapDef: void startValuesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.SharedCamera: void onCaptureSessionConfigureFailed(android.hardware.camera2.CameraCaptureSession)
com.google.android.filament.Skybox: long getNativeObject()
com.google.ar.schemas.sceneform.ParameterDef: com.google.ar.schemas.sceneform.ParameterDef getRootAsParameterDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.ParameterDef)
com.google.android.filament.TextureSampler: TextureSampler(com.google.android.filament.TextureSampler$CompareMode)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.google.ar.sceneform.SceneView$AnimationTimeTransformer: long getAnimationTime(long)
com.google.ar.core.LightEstimate: float[] getEnvironmentalHdrAmbientSphericalHarmonics()
com.google.ar.schemas.sceneform.Vec2Init: void startVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Track: void finalize()
com.google.flatbuffers.FlatBufferBuilder: void addShort(short)
com.google.ar.sceneform.rendering.Renderable$Builder: boolean access$000(com.google.ar.sceneform.rendering.Renderable$Builder)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addModel(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Texture$InternalFormat: com.google.android.filament.Texture$InternalFormat[] values()
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.rendering.Color getColor()
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.Camera createCamera(int)
com.google.ar.sceneform.Camera: void setVerticalFovDegrees(float)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: com.google.ar.schemas.lull.MaterialDef material(com.google.ar.schemas.lull.MaterialDef)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.google.ar.core.HitResult: long nativeCreateAnchor(long,long)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addFile(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Config: int nativeGetFocusMode(long,long)
com.google.flatbuffers.FlatBufferBuilder: void addFloat(int,float,double)
com.google.ar.sceneform.rendering.FixedHeightViewSizer: com.google.ar.sceneform.math.Vector3 getSize(android.view.View)
com.google.ar.schemas.lull.DataVec3: com.google.ar.schemas.lull.DataVec3 getRootAsDataVec3(java.nio.ByteBuffer)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.filament.TextureSampler: int nGetWrapModeT(int)
com.google.android.filament.IndirectLight: void nIrradianceAsTexture(long,long)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: com.google.ar.sceneform.lullmodel.MaterialDef material(com.google.ar.sceneform.lullmodel.MaterialDef)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.ar.schemas.sceneform.LightingDef: com.google.ar.schemas.sceneform.LightingCubeDef cubeLevels(com.google.ar.schemas.sceneform.LightingCubeDef,int)
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.Texture getFaceMeshTexture()
com.google.ar.schemas.lull.ModelPipelineImportDef: void addTargetMeshes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.flatbuffers.FlatBufferBuilder: void addShort(int,short,int)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
com.google.ar.schemas.lull.TextureDef: boolean premultiplyAlpha()
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef getRootAsModelPipelineMaterialDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef)
com.google.ar.core.Session: void nativeGetConfig(long,long)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: FilamentEngineWrapper(com.google.android.filament.Engine)
com.google.ar.sceneform.math.Matrix: Matrix()
com.google.ar.sceneform.lullmodel.Vec3: Vec3()
com.google.ar.sceneform.lullmodel.Vec4: float z()
com.google.ar.core.Session: void nativeSetCameraTextureName(long,int)
com.google.ar.core.ImageMetadata: int getInt(int)
com.google.ar.sceneform.rendering.LightProbe: LightProbe(com.google.ar.sceneform.rendering.LightProbe$Builder,com.google.ar.sceneform.rendering.LightProbe$1)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.ar.sceneform.lullmodel.DataFloat: int createDataFloat(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.core.InstallActivity: void -$$Nest$mfinishWithFailure(com.google.ar.core.InstallActivity,java.lang.Exception)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.ar.schemas.sceneform.LightingCubeDef: int createFacesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.lull.Vec3: float z()
com.google.ar.sceneform.lullmodel.DataString: com.google.ar.sceneform.lullmodel.DataString __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.AnimationData: AnimationData()
com.google.ar.core.dependencies.h: void e(java.lang.String,java.util.List,android.os.Bundle,com.google.ar.core.dependencies.j)
com.google.android.filament.TextureSampler: float getAnisotropy()
com.google.ar.sceneform.ux.BaseGesture: void start(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.rendering.R$drawable: R$drawable()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.google.ar.sceneform.rendering.IEngine: void flushAndWait()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.google.ar.sceneform.rendering.Material: void setFloat(java.lang.String,float)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
com.google.ar.schemas.lull.ModelPipelineDef: int createRenderablesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.rendering.GLHelper: android.opengl.EGLContext makeContext()
com.google.ar.core.PointCloud: java.nio.FloatBuffer getPoints()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.google.android.filament.Skybox: void nDestroyBuilder(long)
com.google.android.filament.VertexBuffer: long nCreateBuilder()
com.google.android.filament.View: void setVisibleLayers(int,int)
com.google.ar.sceneform.rendering.LightProbe: void setCubeMapFromTexture(com.google.android.filament.Texture)
com.google.ar.core.SharedCamera: void lambda$setDummyOnImageAvailableListener$0(android.media.ImageReader)
com.google.ar.schemas.lull.MaterialTextureDef: int endMaterialTextureDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.fragment.app.Fragment: boolean isResumed()
com.google.android.filament.RenderableManager: long nGetMaterialAt(long,int,int)
com.google.ar.core.exceptions.UnavailableUserDeclinedInstallationException: UnavailableUserDeclinedInstallationException(java.lang.String)
com.google.ar.schemas.sceneform.ParameterInitDef: void addInit(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.google.ar.schemas.sceneform.AnimationDef: java.nio.ByteBuffer dataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.VertexAttribute blendAttributes(int)
com.google.ar.sceneform.rendering.LightProbe$Builder: LightProbe$Builder()
com.google.ar.schemas.sceneform.LightingCubeDef: com.google.ar.schemas.sceneform.LightingCubeDef getRootAsLightingCubeDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.LightingCubeDef)
com.google.ar.schemas.sceneform.IntVec4Init: void addW(com.google.flatbuffers.FlatBufferBuilder,int)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.fragment.app.Fragment: int getNextTransitionStyle()
com.google.ar.core.AugmentedImage: com.google.ar.core.Pose nativeGetCenterPose(long,long)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.google.ar.core.LightEstimate: LightEstimate()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.ar.sceneform.collision.Sphere: void setRadius(float)
com.google.ar.sceneform.lullmodel.Quat: com.google.ar.sceneform.lullmodel.Quat __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.CleanupRegistry: void register(java.lang.Object,java.lang.Runnable)
com.google.android.filament.Material: int nGetParameterCount(long)
com.google.ar.core.CameraIntrinsics: void nativeGetImageDimensions(long,long,int[],int)
com.google.ar.sceneform.lullmodel.Vec2i: Vec2i()
com.google.ar.core.AugmentedImage: java.lang.String nativeGetName(long,long)
com.google.android.filament.TextureSampler: int nGetMinFilter(int)
com.google.ar.sceneform.ux.BaseTransformationController: boolean isEnabled()
com.google.ar.core.Session: boolean nativeIsGeospatialModeSupported(long,int)
com.google.ar.sceneform.ux.R: R()
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: void addSource(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getLocalPosition()
com.google.ar.sceneform.ux.BaseArFragment: void stop()
com.google.ar.sceneform.lullmodel.TextureDef: int dataLength()
com.google.ar.schemas.sceneform.DoubleVec2Init: double x()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.google.ar.sceneform.rendering.Texture: com.google.android.filament.Texture getFilamentTexture()
com.google.ar.schemas.lull.ModelIndexRange: int createModelIndexRange(com.google.flatbuffers.FlatBufferBuilder,long,long)
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.SwapChain createSwapChainFromNativeSurface(com.google.android.filament.NativeSurface,long)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: java.nio.ByteBuffer sourceAsByteBuffer()
com.google.ar.sceneform.lullmodel.SubmeshAabb: com.google.ar.sceneform.lullmodel.Vec3 maxPosition()
com.google.ar.core.Anchor$CloudAnchorState: Anchor$CloudAnchorState(java.lang.String,int,int)
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
com.google.android.filament.android.UiHelper$RendererCallback: void onDetachedFromSurface()
com.google.ar.core.Session: void throwExceptionFromArStatus(int)
com.google.ar.schemas.sceneform.BoolVec4Init: void startBoolVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.RenderableManager: void nBuilderGeometry(long,int,int,long,long,int,int,int,int)
com.google.ar.schemas.sceneform.DoubleVec3Init: int endDoubleVec3Init(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.ar.core.InstantPlacementPoint: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
com.google.ar.sceneform.rendering.LoadGltfListener: void onReadingFilesFailed(java.lang.Exception)
com.google.ar.core.SharedCamera: android.graphics.SurfaceTexture -$$Nest$mgetGpuSurfaceTexture(com.google.ar.core.SharedCamera)
com.google.ar.core.CameraConfig$StereoCameraUsage: java.util.EnumSet forBitFlags(int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startRangesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 forward()
com.google.ar.schemas.sceneform.IntVec2Init: com.google.ar.schemas.sceneform.IntVec2Init getRootAsIntVec2Init(java.nio.ByteBuffer)
com.google.ar.schemas.lull.SkeletonDef: java.nio.ByteBuffer boneParentsAsByteBuffer()
com.google.ar.sceneform.utilities.MovingAverage: double getAverage()
com.google.ar.schemas.lull.VariantArrayDefImpl: void addValueType(com.google.flatbuffers.FlatBufferBuilder,byte)
com.google.ar.schemas.lull.AxisSystem: AxisSystem()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.google.android.filament.Skybox: int getLayerMask()
com.google.ar.core.SharedCamera: android.view.Surface nativeSharedCameraGetSurface(long,android.hardware.camera2.CameraDevice)
com.google.ar.schemas.lull.BlendShape: int tangentDataLength()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.google.ar.schemas.lull.SkeletonDef: com.google.ar.schemas.lull.SkeletonDef getRootAsSkeletonDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.SkeletonDef)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
com.google.ar.core.TrackableBase: int internalGetType(long,long)
com.google.android.filament.MaterialInstance: void nSetDoubleSided(long,boolean)
com.google.ar.sceneform.rendering.AnimatorImpl: boolean isRunning()
com.google.ar.sceneform.math.Vector3: void set(float,float,float)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
com.google.ar.sceneform.lullmodel.SkeletonDef: void startBoneTransformsVector(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion negated()
com.google.ar.core.Earth: long nativeCreateAnchor(long,long,double,double,double,float,float,float,float)
com.google.ar.sceneform.rendering.RenderableInstance$SkinningModifier: boolean isModifiedSinceLastRender()
com.google.ar.core.ImageMetadata: byte nativeGetByteFromMetadataEntry(long,long)
com.google.ar.sceneform.rendering.LightProbe: com.google.android.filament.IndirectLight buildIndirectLight()
com.google.android.filament.Texture$Builder: Texture$Builder()
com.google.ar.schemas.lull.TextureFiltering: java.lang.String name(int)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: int createModelPipelineSkeletonDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda2: void run()
com.google.ar.sceneform.ux.TranslationController: TranslationController(com.google.ar.sceneform.ux.BaseTransformableNode,com.google.ar.sceneform.ux.DragGestureRecognizer)
com.google.ar.sceneform.ux.AugmentedFaceNode: AugmentedFaceNode()
com.google.ar.sceneform.SceneView: long lambda$new$0$SceneView(long)
com.google.android.filament.TextureSampler$MagFilter: com.google.android.filament.TextureSampler$MagFilter[] values()
com.google.ar.schemas.sceneform.Vec4Init: com.google.ar.schemas.sceneform.Vec4Init getRootAsVec4Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.Vec4Init)
com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate: com.google.ar.sceneform.rendering.EnvironmentalHdrLightEstimate$CubeMapImage[] getCubeMap()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.google.android.filament.LightManager: boolean nHasComponent(long,int)
com.google.android.filament.MaterialInstance$FloatElement: com.google.android.filament.MaterialInstance$FloatElement[] values()
com.google.ar.schemas.sceneform.BoolVec4Init: void addY(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.ModelDef getRootAsModelDef(java.nio.ByteBuffer)
com.google.android.filament.Scene: void nSetIndirectLight(long,long)
com.google.ar.core.Session: long[] nativeAcquireAllTrackables(long,int)
com.google.ar.schemas.sceneform.SceneformBundleDef: int createLightingDefsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.android.filament.Material: int nGetInterpolation(long)
com.google.ar.core.CameraConfigFilter: com.google.ar.core.CameraConfig$FacingDirection getFacingDirection()
com.google.ar.sceneform.lullmodel.VariantMapDef: com.google.ar.sceneform.lullmodel.VariantMapDef __assign(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void onDestroyView()
com.google.android.filament.Material$Interpolation: Material$Interpolation(java.lang.String,int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder material(int,com.google.android.filament.MaterialInstance)
com.google.ar.schemas.lull.ModelInstanceDef: void addIndices16(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Material$CullingMode: com.google.android.filament.Material$CullingMode valueOf(java.lang.String)
com.google.ar.core.Pose: com.google.ar.core.Pose makeTranslation(float[])
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.google.android.filament.Asserts: float[] assertMat3f(float[])
com.google.ar.sceneform.rendering.Vertex: void setNormal(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.lullmodel.ModelDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: MovingAverageMillisecondsTracker(double)
com.google.ar.core.exceptions.UnavailableDeviceNotCompatibleException: UnavailableDeviceNotCompatibleException(java.lang.String)
com.google.ar.sceneform.rendering.ResourceManager: ResourceManager()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.ar.schemas.lull.MaterialTextureDef: com.google.ar.schemas.lull.MaterialTextureDef getRootAsMaterialTextureDef(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.DragGesture: boolean updateGesture(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.ar.core.CameraConfig$TargetFps: com.google.ar.core.CameraConfig$TargetFps valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.filament.Skybox: void clearNativeObject()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.android.filament.LightManager$Builder$BuilderFinalizer: void finalize()
com.google.ar.sceneform.Node$LifecycleListener: void onActivated(com.google.ar.sceneform.Node)
com.google.ar.core.InstallActivity: void -$$Nest$manimateToSpinner(com.google.ar.core.InstallActivity)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.google.ar.sceneform.assets.RenderableSource: RenderableSource(com.google.ar.sceneform.assets.RenderableSource$Builder,com.google.ar.sceneform.assets.RenderableSource$1)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.ar.sceneform.lullmodel.MaterialDef: MaterialDef()
com.google.vr.dynamite.client.c: c()
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,com.google.android.filament.Texture,com.google.android.filament.TextureSampler)
com.google.ar.schemas.sceneform.ScalarInit: void startScalarInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.LoadGltfListener: void onFinishedReadingFiles(long)
com.google.ar.schemas.lull.TextureDef: java.lang.String file()
com.google.ar.schemas.sceneform.RuntimeAssetDef: RuntimeAssetDef()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.SubmeshAabb aabbs(com.google.ar.sceneform.lullmodel.SubmeshAabb,int)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: int endModelPipelineRenderableDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.VariantMapDef: com.google.ar.schemas.lull.VariantMapDef getRootAsVariantMapDef(java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory: void releaseByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelDef: void addBoundingBox(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$Builder getSelf()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.flatbuffers.Table: void __reset()
com.google.android.filament.Material$Interpolation: com.google.android.filament.Material$Interpolation[] values()
com.google.ar.schemas.sceneform.SamplerWrapMode: SamplerWrapMode()
com.google.ar.sceneform.rendering.Material$Builder: com.google.android.filament.Material createFilamentMaterial(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.Recti: void __init(int,java.nio.ByteBuffer)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.ar.sceneform.lullmodel.Recti: com.google.ar.sceneform.lullmodel.Recti __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Builder setIntensity(float)
com.google.ar.schemas.lull.Quat: float w()
com.google.ar.core.Camera: com.google.ar.core.Pose getPose()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.google.android.filament.Camera: float[] getModelMatrix(float[])
com.google.ar.schemas.sceneform.ParameterDef: void addInitialValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.RenderTarget$Builder mipLevel(com.google.android.filament.RenderTarget$AttachmentPoint,int)
com.google.android.filament.Scene: void remove(int)
com.google.android.filament.RenderableManager: boolean isShadowReceiver(int)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: void startKeyVariantPairDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Light: boolean isShadowCastingEnabled()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.ar.sceneform.HitTestResult: com.google.ar.sceneform.Node getNode()
com.google.ar.core.Config$PlaneFindingMode: com.google.ar.core.Config$PlaneFindingMode[] $values()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(com.google.ar.sceneform.rendering.RenderableDefinition)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addUseSpecularGlossinessTexturesIfPresent(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.rendering.IEngine: void destroyCamera(com.google.android.filament.Camera)
com.google.ar.sceneform.ux.TwistGestureRecognizer: void tryCreateGestures(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.ux.PinchGesture: float getGapDelta()
com.google.android.filament.Colors: void nIlluminantD(float,float[])
com.google.ar.core.Pose: com.google.ar.core.Pose extractTranslation()
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
com.google.android.filament.Colors$RgbType: Colors$RgbType(java.lang.String,int)
com.google.ar.sceneform.Scene: void dispatchUpdate(com.google.ar.sceneform.FrameTime)
com.google.ar.core.Pose: float[] getXAxis()
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode getWrapModeT()
com.google.ar.schemas.sceneform.ScalarInit: void addValue(com.google.flatbuffers.FlatBufferBuilder,float)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.google.android.filament.RenderableManager: void nSetReceiveShadows(long,int,boolean)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: void startCompiledMaterialDeclDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.SceneformBundle: boolean isSceneformBundle(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.resources.ResourceRegistry getRenderableRegistry()
com.google.android.filament.RenderTarget: long access$100()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.google.ar.core.Frame: java.util.Collection getUpdatedAnchors()
com.google.android.filament.View: com.google.android.filament.View$ToneMapping getToneMapping()
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.ModelInstanceDef getRootAsModelInstanceDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelInstanceDef)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.ar.schemas.sceneform.ExternalSamplerInit: com.google.ar.schemas.sceneform.ExternalSamplerInit __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Session$FeatureMapQuality: com.google.ar.core.Session$FeatureMapQuality[] $values()
com.google.ar.sceneform.lullmodel.TextureDef: int data(int)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.filament.android.UiHelper$TextureViewHandler: UiHelper$TextureViewHandler(com.google.android.filament.android.UiHelper,android.view.TextureView)
com.google.flatbuffers.FlatBufferBuilder: void finished()
com.google.ar.sceneform.ux.AugmentedFaceNode: void updateRegionNodes()
com.google.android.filament.View: void setScene(com.google.android.filament.Scene)
com.google.ar.schemas.sceneform.IntVec2Init: IntVec2Init()
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
com.google.ar.sceneform.rendering.Light$Builder: float access$700(com.google.ar.sceneform.rendering.Light$Builder)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.window.R: R()
com.google.ar.core.Session: com.google.ar.core.Frame update()
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: byte valueType()
com.google.ar.sceneform.math.QuaternionEvaluator: com.google.ar.sceneform.math.Quaternion evaluate(float,com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion)
com.google.ar.schemas.sceneform.MaterialDef: com.google.ar.schemas.sceneform.MaterialDef getRootAsMaterialDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.MaterialDef)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.ar.schemas.lull.VariantArrayDef: com.google.ar.schemas.lull.VariantArrayDef getRootAsVariantArrayDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.VariantArrayDef)
androidx.window.embedding.ActivityStack: int hashCode()
com.google.ar.schemas.sceneform.IntVec4Init: void addX(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.Vec3: float x()
com.google.ar.core.PointCloud: void close()
com.google.android.filament.Engine: void destroy()
com.google.ar.sceneform.Scene: void setLightProbe(com.google.ar.sceneform.rendering.LightProbe)
com.google.flatbuffers.FlatBufferBuilder: void finishSizePrefixed(int)
com.google.ar.sceneform.lullmodel.TextureDef: void addData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.Rect: com.google.ar.sceneform.lullmodel.Rect __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.RenderableInstance: void createGltfModelInstance()
com.google.ar.schemas.sceneform.LightingCubeFaceDef: int dataLength()
com.google.ar.sceneform.Sun: Sun(com.google.ar.sceneform.Scene)
com.google.android.filament.View: void nSetDynamicLightingOptions(long,float,float)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
com.google.ar.schemas.sceneform.SamplerParamsDef: int wrapT()
com.google.ar.schemas.sceneform.NullInit: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod[] $values()
com.google.ar.schemas.lull.DataHashValue: long value()
com.google.android.filament.NativeSurface: int getHeight()
com.google.ar.sceneform.lullmodel.TextureDef: void addTargetType(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.VertexBuffer: void nDestroyBuilder(long)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: void startModelPipelineRenderableDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: int endCompiledMaterialDeclDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Renderer: Renderer(android.view.SurfaceView)
com.google.ar.core.t: com.google.ar.core.t[] values()
com.google.ar.core.Plane: Plane()
com.google.ar.schemas.lull.AabbDef: com.google.ar.schemas.lull.Vec3 min()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
com.google.ar.core.RecordingConfig: RecordingConfig(com.google.ar.core.Session)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.ar.sceneform.Camera: void setPerspective(float,float,float,float,float,float)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.sceneform.rendering.Texture: com.google.android.filament.Texture$InternalFormat access$300(com.google.ar.sceneform.rendering.Texture$Usage)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addInterleaved(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.collision.Box: Box()
com.google.ar.core.Config: long nativeCreate(long)
com.google.ar.sceneform.lullmodel.SkeletonDef: int endSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelInstanceDef: void addVertexData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: void addSource(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer vertexIndices16InByteBuffer(java.nio.ByteBuffer)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.ar.sceneform.rendering.Renderable: java.lang.String getSubmeshName(int)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: byte valueType()
com.google.android.filament.RenderableManager: void setMorphWeights(int,float[])
com.google.ar.schemas.sceneform.SamplerInit: SamplerInit()
com.google.ar.sceneform.rendering.Material: void copyMaterialParameters(com.google.ar.sceneform.assets.ModelData,int)
com.google.ar.sceneform.Scene: com.google.ar.sceneform.Node getSunlight()
com.google.ar.schemas.lull.Recti: void __init(int,java.nio.ByteBuffer)
androidx.window.R$id: R$id()
com.google.ar.core.dependencies.i: boolean a(int,android.os.Parcel)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.google.ar.sceneform.ux.BaseGestureRecognizer: void removeFinishedGestures()
com.google.ar.sceneform.Sun: Sun()
com.google.ar.schemas.sceneform.ParameterInitDef: com.google.ar.schemas.sceneform.ParameterInitDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.dependencies.c: android.os.IBinder asBinder()
com.google.android.filament.Colors: float[] illuminantD(float)
com.google.ar.sceneform.rendering.IEngine: boolean isValid()
com.google.ar.core.LightEstimate: long getTimestamp()
com.google.ar.schemas.lull.DataQuat: com.google.ar.schemas.lull.DataQuat __assign(int,java.nio.ByteBuffer)
com.google.ar.core.HitResult: long nativeAcquireTrackable(long,long)
com.google.ar.sceneform.lullmodel.SkeletonDef: int createSkeletonDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.math.Quaternion: boolean normalize()
com.google.ar.schemas.lull.ModelPipelineImportDef: void addScale(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,android.net.Uri)
com.google.ar.schemas.sceneform.ExternalSamplerInit: int usage()
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Quaternion getLocalRotation()
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: void addNameOverride(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: ModelPipelineSkeletonDef()
com.google.ar.schemas.lull.Recti: int y()
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState[] $values()
com.google.ar.sceneform.Scene: boolean isUnderTesting()
com.google.ar.core.Plane: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.android.filament.EntityManager: com.google.android.filament.EntityManager get()
com.google.ar.core.Frame: long nativeGetTimestamp(long,long)
com.google.ar.core.AugmentedFace: java.nio.FloatBuffer getMeshTextureCoordinates()
com.google.ar.sceneform.Camera: int getViewWidth()
com.google.ar.schemas.lull.DataVec4: com.google.ar.schemas.lull.Vec4 value(com.google.ar.schemas.lull.Vec4)
com.google.ar.schemas.lull.ModelInstanceDef: void addVertexAttributes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.VertexBuffer$VertexAttribute: com.google.android.filament.VertexBuffer$VertexAttribute valueOf(java.lang.String)
com.google.flatbuffers.FlatBufferBuilder: int endObject()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addSmoothingAngle(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.android.filament.R: R()
com.google.ar.sceneform.lullmodel.TextureDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.ar.schemas.sceneform.ExternalSamplerInit: int endExternalSamplerInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.BuildConfig: BuildConfig()
com.google.ar.core.ImageMetadata: float[] getFloatArray(int)
com.google.ar.schemas.sceneform.ParameterInitDef: com.google.flatbuffers.Table init(com.google.flatbuffers.Table)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
com.google.ar.schemas.sceneform.SamplerDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.Earth: com.google.ar.core.GeospatialPose getCameraGeospatialPose()
com.google.android.filament.VertexBuffer$Builder$BuilderFinalizer: VertexBuffer$Builder$BuilderFinalizer(long)
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer$Builder attribute(com.google.android.filament.VertexBuffer$VertexAttribute,int,com.google.android.filament.VertexBuffer$AttributeType,int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addCompareFunc(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.KeyVariantPairDef: int endKeyVariantPairDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.SharedCamera: void nativeSharedCameraOnClosed(long,android.hardware.camera2.CameraDevice)
com.google.ar.core.Earth: long nativeGetCameraGeospatialPose(long,long)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
com.google.ar.sceneform.assets.RenderableSource$SourceType: com.google.ar.sceneform.assets.RenderableSource$SourceType[] values()
com.google.ar.sceneform.lullmodel.TextureDef: int createTextureDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,boolean,boolean,int,int,int,int,int,int,boolean)
com.google.ar.core.AugmentedFace: com.google.ar.core.Pose nativeGetCenterPose(long,long)
com.google.ar.schemas.lull.ModelPipelineImportDef: int createTargetMeshesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: int maxBoneWeights()
com.google.ar.sceneform.rendering.Texture$Usage: com.google.ar.sceneform.rendering.Texture$Usage valueOf(java.lang.String)
com.google.android.filament.Material: boolean isDepthWriteEnabled()
com.google.ar.sceneform.lullmodel.DataInt: int value()
com.google.ar.core.Frame: java.util.List hitTest(float[],int,float[],int)
com.google.ar.sceneform.lullmodel.Vec2: float y()
com.google.ar.sceneform.ArSceneView: int getCameraStreamRenderPriority()
com.google.ar.core.LightEstimate: void getColorCorrection(float[],int)
com.google.ar.sceneform.math.Vector3: Vector3(com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addAxisSystem(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Engine: long nGetBackend(long)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.CleanupRegistry getTextureCleanupRegistry()
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: java.nio.ByteBuffer attributesAsByteBuffer()
com.google.ar.schemas.sceneform.Vec2Init: float y()
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: void addSource(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,float,float)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: java.lang.String name()
com.google.ar.core.ArCoreApk$Availability: ArCoreApk$Availability(java.lang.String,int,int,com.google.ar.core.ArCoreApk$Availability-IA)
com.google.ar.core.dependencies.e: void d(android.os.Parcel,android.os.IInterface)
com.google.android.filament.android.UiHelper: long getSwapChainFlags()
com.google.ar.sceneform.Node: com.google.ar.sceneform.Node getParent()
com.google.ar.sceneform.rendering.LightInstance: void attachToRenderer(com.google.ar.sceneform.rendering.Renderer)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.ar.core.ArCoreApk$InstallStatus: com.google.ar.core.ArCoreApk$InstallStatus valueOf(java.lang.String)
com.google.ar.sceneform.utilities.SceneformBufferUtils: java.nio.ByteBuffer readFile(android.content.res.AssetManager,java.lang.String)
com.google.ar.core.Config: void nativeSetAugmentedImageDatabase(long,long,long)
com.google.ar.schemas.sceneform.ParameterDef: java.lang.String id()
com.google.android.filament.MaterialInstance: void nSetSpecularAntiAliasingThreshold(long,float)
com.google.ar.schemas.sceneform.InputDef: InputDef()
com.google.ar.schemas.sceneform.Vec3Init: float z()
androidx.window.core.Bounds: boolean equals(java.lang.Object)
com.google.ar.core.exceptions.UnavailableArcoreNotInstalledException: UnavailableArcoreNotInstalledException(java.lang.String)
com.google.ar.core.exceptions.UnavailableDeviceNotCompatibleException: UnavailableDeviceNotCompatibleException()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.ar.sceneform.ux.ScaleController: void setMinScale(float)
com.google.android.filament.VertexBuffer$AttributeType: com.google.android.filament.VertexBuffer$AttributeType[] values()
com.google.ar.sceneform.rendering.PlaneRenderer: boolean isShadowReceiver()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,android.net.Uri,boolean)
com.google.ar.core.exceptions.UnavailableException: UnavailableException(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.flatbuffers.Utf8: void setDefault(com.google.flatbuffers.Utf8)
com.google.android.filament.RenderTarget: long nBuilderTexture(long,int,long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.ar.schemas.lull.DataQuat: int endDataQuat(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ArSceneView: void lambda$pauseAsync$4$ArSceneView(java.lang.Void)
com.google.flatbuffers.FlatBufferBuilder: void putDouble(double)
com.google.ar.sceneform.rendering.RenderViewToExternalTexture$OnViewSizeChangedListener: void onViewSizeChanged(int,int)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.google.ar.sceneform.ux.RotationController: void onEndTransformation(com.google.ar.sceneform.ux.BaseGesture)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.ar.sceneform.ux.HandMotionAnimation: void applyTransformation(float,android.view.animation.Transformation)
com.google.ar.schemas.sceneform.SamplerDef: void startSamplerDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.BoolVec3Init: BoolVec3Init()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.ar.schemas.sceneform.SceneformBundleDef: void addInputs(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.google.android.filament.RenderableManager: void setGeometryAt(int,int,com.google.android.filament.RenderableManager$PrimitiveType,int,int)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder receiveShadows(boolean)
androidx.fragment.app.Fragment: boolean isHideReplaced()
com.google.ar.core.Config: com.google.ar.core.Config setInstantPlacementMode(com.google.ar.core.Config$InstantPlacementMode)
com.google.ar.sceneform.ux.AugmentedFaceNode: com.google.ar.sceneform.rendering.Material getFaceMeshMaterial()
com.google.android.filament.Camera: float[] getPosition(float[])
com.google.ar.sceneform.rendering.ModelRenderable: com.google.ar.sceneform.rendering.AnimationData getAnimationData(java.lang.String)
com.google.ar.sceneform.lullmodel.ModelDef: void startLodsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ArcDef: float innerRadius()
com.google.ar.core.Frame: android.media.Image acquireRawDepthImage()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$Builder setMinMagFilter(com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter)
com.google.ar.schemas.sceneform.IntVec2Init: int x()
com.google.android.filament.Engine: void destroyMaterial(com.google.android.filament.Material)
com.google.ar.core.AugmentedImage: com.google.ar.core.TrackingState getTrackingState()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.filament.View: void setRenderQuality(com.google.android.filament.View$RenderQuality)
com.google.ar.schemas.lull.ModelInstanceDef: void startIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.RenderTarget$Builder face(com.google.android.filament.RenderTarget$AttachmentPoint,com.google.android.filament.Texture$CubemapFace)
com.google.android.filament.Platform: boolean isMacOS()
com.google.ar.schemas.lull.DataInt: DataInt()
com.google.android.filament.Box: Box(float,float,float,float,float,float)
com.google.ar.sceneform.ux.AugmentedFaceNode: AugmentedFaceNode(com.google.ar.core.AugmentedFace)
com.google.ar.schemas.lull.ModelInstanceDef: int aabbsLength()
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.rendering.IRenderableInternalData createRenderableInternalGltfData()
com.google.ar.core.CameraConfig$FacingDirection: CameraConfig$FacingDirection(java.lang.String,int,int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.google.android.filament.View$QualityLevel: View$QualityLevel(java.lang.String,int)
com.google.ar.sceneform.rendering.FixedWidthViewSizer: FixedWidthViewSizer(float)
com.google.ar.core.LightEstimate: void nativeDestroyLightEstimate(long,long)
com.google.ar.sceneform.ux.GesturePointersUtility: GesturePointersUtility(android.util.DisplayMetrics)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.google.ar.core.TrackableBase: void nativeReleaseTrackable(long,long)
com.google.android.filament.MathUtils: MathUtils()
com.google.ar.sceneform.rendering.LightProbe: float[] quaternionToRotationMatrix(com.google.ar.sceneform.math.Quaternion)
com.google.android.filament.View: void setAmbientOcclusionOptions(com.google.android.filament.View$AmbientOcclusionOptions)
com.google.ar.sceneform.rendering.Renderer: android.view.SurfaceView getSurfaceView()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.google.ar.schemas.lull.Vec4: float z()
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: com.google.flatbuffers.Table value(com.google.flatbuffers.Table)
com.google.ar.core.Frame: void transformCoordinates2d(com.google.ar.core.Coordinates2d,float[],com.google.ar.core.Coordinates2d,float[])
com.google.ar.sceneform.rendering.RenderableDefinition: void addVector3ToBuffer(com.google.ar.sceneform.math.Vector3,java.nio.FloatBuffer)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.filament.View: float[] getClearColor(float[])
com.google.ar.sceneform.rendering.MaterialParameters: void setInt4(java.lang.String,int,int,int,int)
com.google.ar.sceneform.lullmodel.DataString: int createDataString(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.ModelDef: void addLods(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer vertexDataAsByteBuffer()
com.google.ar.sceneform.rendering.Light: void setInnerConeAngle(float)
com.google.ar.core.CameraConfig: CameraConfig()
com.google.ar.core.CameraConfig: void finalize()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.ar.sceneform.rendering.AnimatorImpl: com.google.ar.sceneform.rendering.AnimationData getAnimationData()
com.google.ar.sceneform.ux.R$string: R$string()
com.google.ar.schemas.lull.ModelInstanceDef: int materialsLength()
com.google.ar.sceneform.lullmodel.DataBytes: void startValueVector(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.google.ar.sceneform.rendering.ShapeFactory: ShapeFactory()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.ar.sceneform.lullmodel.Color: float r()
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.google.ar.core.InstallActivity: void finishWithFailure(java.lang.Exception)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.ar.sceneform.ArSceneView: void initializeFacingDirection(com.google.ar.core.Session)
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer vertexDataAsByteBuffer()
com.google.ar.schemas.lull.ModelPipelineImportDef: java.nio.ByteBuffer fileAsByteBuffer()
com.google.ar.sceneform.Camera: Camera(boolean)
com.google.ar.schemas.sceneform.LightingDef: void startLightingDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.Colors$RgbaType: Colors$RgbaType(java.lang.String,int)
com.google.ar.core.Pose: float[] rotateVector(float[])
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.ar.sceneform.rendering.MaterialInternalDataGltfImpl: com.google.android.filament.Material getFilamentMaterial()
com.google.ar.sceneform.ux.ScaleController: float getFinalScale()
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 worldToLocalPoint(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment getHorizontalAlignment()
com.google.android.filament.VertexBuffer$VertexAttribute: VertexBuffer$VertexAttribute(java.lang.String,int)
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: java.lang.String source()
com.google.android.filament.LightManager: void access$800(long,float,float)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
com.google.ar.core.RecordingConfig: com.google.ar.core.RecordingConfig setMp4DatasetFilePath(java.lang.String)
com.google.android.filament.LightManager: void setFalloff(int,float)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: ModelPipelineImportDef()
com.google.ar.sceneform.rendering.MaterialFactory: java.util.concurrent.CompletableFuture makeOpaqueWithTexture(android.content.Context,com.google.ar.sceneform.rendering.Texture)
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setSource(android.content.Context,android.net.Uri)
com.google.ar.schemas.sceneform.SceneformBundleDef: void finishSceneformBundleDefBuffer(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.LightEstimate: void nativeGetEnvironmentalHdrAmbientSphericalHarmonics(long,long,float[])
com.google.ar.schemas.lull.Vec4: float y()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.google.android.filament.Material: com.google.android.filament.MaterialInstance createInstance()
com.google.ar.sceneform.rendering.Renderable: void setShadowCaster(boolean)
com.google.android.filament.Texture: int getWidth(int)
com.google.ar.core.CameraConfig$TargetFps: CameraConfig$TargetFps(java.lang.String,int,int)
com.google.ar.sceneform.SceneView: boolean isImpAvailable()
com.google.android.filament.Colors$RgbType: com.google.android.filament.Colors$RgbType[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.sceneform.rendering.Renderer: long getImpHandle()
com.google.vr.dynamite.client.DynamiteClient: java.lang.ClassLoader getRemoteDexClassLoader(android.content.Context,java.lang.String)
com.google.android.filament.Renderer: long getNativeObject()
com.google.ar.schemas.sceneform.TransformDef: com.google.ar.schemas.sceneform.TransformDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.assets.RenderableSource$Builder: android.content.Context access$000(com.google.ar.sceneform.assets.RenderableSource$Builder)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.flatbuffers.Table: java.nio.ByteBuffer __vector_in_bytebuffer(java.nio.ByteBuffer,int,int)
com.google.ar.sceneform.ux.BaseArFragment: void lambda$setupSelectionRenderable$1(com.google.ar.sceneform.ux.FootprintSelectionVisualizer,com.google.ar.sceneform.rendering.ModelRenderable)
com.google.android.filament.LightManager: void access$200(long,int,float,float,float,float,float,boolean)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.filament.RenderableManager$PrimitiveType: int getValue()
com.google.ar.sceneform.rendering.Renderable: boolean isShadowReceiver()
com.google.ar.schemas.sceneform.SamplerInit: void addUsage(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.android.filament.Renderer: boolean beginFrame(com.google.android.filament.SwapChain)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: int type()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.ar.sceneform.rendering.AnimatorImpl: void pause()
com.google.ar.core.Plane: boolean isPoseInExtents(com.google.ar.core.Pose)
com.google.android.filament.RenderableManager: int nGetPrimitiveCount(long,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 left()
com.google.ar.sceneform.rendering.RenderableDefinition: RenderableDefinition(com.google.ar.sceneform.rendering.RenderableDefinition$Builder)
com.google.ar.sceneform.ArSceneView: void lambda$pauseAsync$3$ArSceneView(java.lang.ref.WeakReference)
com.google.ar.schemas.sceneform.SceneformBundleDef: int inputsLength()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.ar.sceneform.Camera: com.google.ar.sceneform.math.Matrix getViewMatrix()
com.google.android.filament.RenderableManager: boolean isShadowCaster(int)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineImportDef sources(int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.ar.sceneform.Camera: Camera(com.google.ar.sceneform.Scene)
com.google.ar.sceneform.collision.Box: boolean boxIntersection(com.google.ar.sceneform.collision.Box)
com.google.ar.sceneform.lullmodel.VariantArrayDef: int createValuesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: java.nio.ByteBuffer sourceAsByteBuffer()
com.google.ar.sceneform.lullmodel.VertexAttribute: int createVertexAttribute(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.sceneform.ux.RotationController: RotationController(com.google.ar.sceneform.ux.BaseTransformableNode,com.google.ar.sceneform.ux.TwistGestureRecognizer)
com.google.android.filament.IndexBuffer: void nDestroyBuilder(long)
com.google.ar.schemas.lull.DataFloat: DataFloat()
com.google.ar.schemas.lull.TextureDef: void addPremultiplyAlpha(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.SwapChain createSwapChainFromNativeSurface(com.google.android.filament.NativeSurface,long)
com.google.ar.sceneform.rendering.Renderer: void setCameraProvider(com.google.ar.sceneform.rendering.CameraProvider)
com.google.android.filament.LightManager: void access$300(long,boolean)
com.google.android.filament.TextureSampler: void setCompareMode(com.google.android.filament.TextureSampler$CompareMode)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.google.ar.core.SharedCamera$$ExternalSyntheticLambda0: void onImageAvailable(android.media.ImageReader)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.ar.schemas.lull.SkeletonDef: void startSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.SceneformBundleDef: void finishSizePrefixedSceneformBundleDefBuffer(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.ar.sceneform.rendering.LullModel: LullModel()
com.google.android.filament.RenderableManager: long nGetMaterialInstanceAt(long,int,int)
com.google.ar.schemas.sceneform.DoubleVec2Init: double y()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef suggestedCollisionShape(com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addScale(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.schemas.sceneform.LightingCubeDef: com.google.ar.schemas.sceneform.LightingCubeDef getRootAsLightingCubeDef(java.nio.ByteBuffer)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.ar.schemas.sceneform.SamplerDef: void addFile(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.ar.sceneform.rendering.Renderer: void destroyImp()
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer indices16AsByteBuffer()
com.google.android.filament.View$Dithering: com.google.android.filament.View$Dithering valueOf(java.lang.String)
com.google.ar.schemas.lull.TextureFiltering: TextureFiltering()
com.google.ar.sceneform.lullmodel.Vec2: float x()
com.google.ar.schemas.lull.SkeletonDef: void addBoneTransforms(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.SceneView: void resume()
com.google.ar.schemas.sceneform.InputDef: com.google.ar.schemas.sceneform.InputDef __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Texture: long access$000()
com.google.ar.sceneform.rendering.RenderableDefinition: void setSubmeshes(java.util.List)
com.google.ar.core.ImageMetadata: long[] getLongArray(int)
com.google.ar.schemas.lull.MaterialDef: com.google.ar.schemas.lull.VariantMapDef properties()
com.google.android.filament.NativeSurface: void nDestroySurface(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.google.ar.core.CameraConfigFilter: void nativeSetTargetFps(long,long,int)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
com.google.android.filament.android.UiHelper$SurfaceViewHandler: void detach()
com.google.ar.schemas.lull.ModelDef: void startTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.google.flatbuffers.FlatBufferBuilder: void addBoolean(boolean)
com.google.ar.sceneform.TouchEventSystem: void addOnPeekTouchListener(com.google.ar.sceneform.Scene$OnPeekTouchListener)
com.google.ar.sceneform.ArSceneView: void onLayout(boolean,int,int,int,int)
com.google.ar.schemas.sceneform.CubemapSamplerInit: java.lang.String path()
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.rendering.LightProbe$Builder setIntensity(float)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.google.ar.schemas.sceneform.ScalarInit: com.google.ar.schemas.sceneform.ScalarInit __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.BlendShape: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.Quat: Quat()
com.google.android.filament.Renderer: void readPixels(int,int,int,int,com.google.android.filament.Texture$PixelBufferDescriptor)
com.google.ar.sceneform.utilities.ChangeId: void update()
com.google.ar.schemas.sceneform.SamplerParamsDef: SamplerParamsDef()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.RenderableDefinition access$100(com.google.ar.sceneform.rendering.Renderable$Builder)
com.google.ar.core.InstantPlacementPoint: InstantPlacementPoint(long,com.google.ar.core.Session)
com.google.ar.sceneform.SceneView: void startMirroringToSurface(android.view.Surface,int,int,int,int)
com.google.ar.schemas.lull.ModelPipelineCollidableDef: com.google.ar.schemas.lull.ModelPipelineCollidableDef getRootAsModelPipelineCollidableDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.ModelPipelineCollidableDef)
com.google.ar.sceneform.rendering.Color: float inverseTonemap(float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.ModelDef getRootAsModelDef(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.google.ar.core.Config: com.google.ar.core.Config setPlaneFindingMode(com.google.ar.core.Config$PlaneFindingMode)
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType[] values()
com.google.ar.sceneform.rendering.RenderableInstance: RenderableInstance(com.google.ar.sceneform.common.TransformProvider,com.google.ar.sceneform.rendering.Renderable)
androidx.fragment.app.Fragment: void performResume()
com.google.ar.sceneform.ux.DragGesture: boolean canStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.rendering.Material: void setBoolean3(java.lang.String,boolean,boolean,boolean)
com.google.android.filament.NativeSurface: NativeSurface(int,int)
com.google.ar.sceneform.math.Matrix: void decomposeScale(com.google.ar.sceneform.math.Vector3)
com.google.android.filament.IndexBuffer$Builder: IndexBuffer$Builder()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.ar.sceneform.rendering.AnimatorImpl: com.google.ar.sceneform.rendering.AnimatorImpl$Factory makeDefaultFactory()
com.google.ar.schemas.sceneform.DoubleVec2Init: void addX(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.ar.sceneform.rendering.SkeletonRig: java.nio.FloatBuffer makeBufferForBones(int)
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Vector3 getCenter()
com.google.ar.core.TrackableBase: int hashCode()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.ar.sceneform.ux.BaseArFragment: void onPause()
com.google.ar.core.SharedCamera: void nativeSharedCameraSetCaptureCallback(long,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.google.ar.sceneform.ArSceneView: void nativeReportEngineType(com.google.ar.core.Session,java.lang.String,java.lang.String)
com.google.android.filament.RenderableManager: void setBonesAsQuaternions(int,java.nio.Buffer,int,int)
com.google.ar.sceneform.rendering.ModelRenderable: com.google.ar.sceneform.rendering.AnimationData getAnimationData(int)
com.google.android.filament.IndexBuffer$Builder$IndexType: com.google.android.filament.IndexBuffer$Builder$IndexType valueOf(java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object requireHost()
com.google.android.filament.Texture$Sampler: Texture$Sampler(java.lang.String,int)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: java.nio.ByteBuffer nameOverrideInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.AnimationDef: int size()
com.google.ar.sceneform.rendering.SkeletonRig: void initializeRow(float[],int,com.google.ar.schemas.lull.Vec4)
com.google.android.filament.IndirectLight: float[] getColorEstimate(float[],float,float,float)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.google.ar.schemas.lull.KeyVariantPairDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.SkeletonDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode: Texture$Sampler$WrapMode(java.lang.String,int)
com.google.android.filament.Texture: void nBuilderWidth(long,int)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
com.google.ar.core.Frame: void transformDisplayUvCoords(java.nio.FloatBuffer,java.nio.FloatBuffer)
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
com.google.android.filament.Camera: float getAperture()
com.google.ar.sceneform.rendering.Material: Material(com.google.ar.sceneform.rendering.Material)
com.google.ar.schemas.lull.TextureWrap: TextureWrap()
com.google.ar.sceneform.collision.CollisionShape: boolean boxIntersection(com.google.ar.sceneform.collision.Box)
com.google.ar.sceneform.rendering.AnimatorImpl: void setRepeatCount(int)
com.google.android.filament.RenderableManager: long getNativeObject()
com.google.ar.sceneform.rendering.MaterialParameters: void setBoolean4(java.lang.String,boolean,boolean,boolean,boolean)
com.google.ar.schemas.lull.KeyVariantPairDef: java.nio.ByteBuffer keyInByteBuffer(java.nio.ByteBuffer)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.google.ar.sceneform.lullmodel.DataBool: void startDataBool(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.R$raw: R$raw()
com.google.ar.core.Config: com.google.ar.core.Config$AugmentedFaceMode getAugmentedFaceMode()
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.SkeletonDef skeleton()
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.SwapChain createSwapChain(java.lang.Object,long)
com.google.ar.core.CameraConfigFilter: void nativeSetFacingDirection(long,long,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.rendering.RenderableDefinition: void setVertices(java.util.List)
com.google.ar.schemas.sceneform.BoolVec4Init: int endBoolVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Track: Track()
com.google.android.filament.Texture: void access$400(long,int)
com.google.ar.core.InstallActivity: boolean -$$Nest$fgetwaitingForCompletion(com.google.ar.core.InstallActivity)
com.google.android.filament.View: void setToneMapping(com.google.android.filament.View$ToneMapping)
com.google.android.filament.Scene: int getLightCount()
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
com.google.ar.sceneform.rendering.Renderer: void stopMirroring(android.view.Surface)
com.google.ar.schemas.lull.Mat4x3: com.google.ar.schemas.lull.Vec4 c1(com.google.ar.schemas.lull.Vec4)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.google.ar.sceneform.lullmodel.ModelDef: void addTextures(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.TranslationController: java.util.EnumSet getAllowedPlaneTypes()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.ar.sceneform.utilities.FlatBufferUtils: java.nio.ByteBuffer parseJson(java.lang.String,java.lang.String)
com.google.android.filament.Material: boolean isColorWriteEnabled()
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.google.vr.dynamite.client.ObjectWrapper: java.lang.Object unwrap(com.google.vr.dynamite.client.IObjectWrapper,java.lang.Class)
com.google.ar.schemas.lull.ModelInstanceDef: void startVertexAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.DataInt: com.google.ar.schemas.lull.DataInt __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.utilities.TimeAccumulator: TimeAccumulator()
com.google.ar.core.CameraConfigFilter: int nativeGetStereoCameraUsage(long,long)
com.google.android.filament.Stream: void nBuilderHeight(long,int)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.google.ar.schemas.lull.VertexAttributeType: java.lang.String name(int)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$CompareMode getCompareMode()
com.google.ar.core.CameraIntrinsics: void nativeGetFocalLength(long,long,float[],int)
com.google.ar.core.Config: com.google.ar.core.Config$CloudAnchorMode getCloudAnchorMode()
com.google.ar.sceneform.lullmodel.DataBytes: DataBytes()
com.google.ar.schemas.sceneform.LightingCubeDef: int createLightingCubeDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type forNumber(int)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.SwapChain createSwapChain(java.lang.Object)
com.google.ar.schemas.sceneform.SamplerDef: java.lang.String name()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: com.google.ar.sceneform.lullmodel.ModelPipelineImportDef getRootAsModelPipelineImportDef(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.ModelPipelineImportDef)
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus[] $values()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.filament.Camera: float nGetNear(long)
com.google.ar.schemas.sceneform.IntVec2Init: int createIntVec2Init(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void flushAndWait()
com.google.android.filament.Engine: void nDestroyStream(long,long)
com.google.ar.sceneform.collision.Collider: Collider(com.google.ar.sceneform.common.TransformProvider,com.google.ar.sceneform.collision.CollisionShape)
com.google.android.filament.RenderableManager$Builder: RenderableManager$Builder(int)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: void startDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.google.android.filament.IndirectLight: float[] getRotation(float[])
com.google.ar.core.ImageMetadata: byte[] getByteArray(int)
com.google.flatbuffers.Utf8Safe: Utf8Safe()
com.google.android.filament.Platform$UnknownPlatform: long getSharedContextNativeHandle(java.lang.Object)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(com.google.ar.sceneform.rendering.RenderableDefinition)
com.google.ar.core.Point$OrientationMode: com.google.ar.core.Point$OrientationMode[] values()
com.google.android.filament.RenderTarget: long nBuilderFace(long,int,int)
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Builder setFalloffRadius(float)
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,android.net.Uri)
com.google.android.filament.RenderTarget: long access$500(long,int,int)
com.google.ar.core.Frame: long getAndroidCameraTimestamp()
com.google.flatbuffers.FlatBufferBuilder: void addStruct(int,int,int)
com.google.ar.sceneform.lullmodel.TextureDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroySkybox(com.google.android.filament.Skybox)
com.google.ar.schemas.lull.BlendShape: void addTangentData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.AugmentedImage: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.ar.sceneform.utilities.TimeAccumulator: long getElapsedTimeMs()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.ModelInstanceDef lods(com.google.ar.schemas.lull.ModelInstanceDef,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.rendering.Renderable makeCopy()
com.google.android.filament.VertexBuffer: void nPopulateTangentQuaternions(int,int,java.nio.Buffer,int,int,java.nio.Buffer,int,int,java.nio.Buffer,int,int)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.google.android.filament.LightManager: float getSunAngularRadius(int)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.google.android.filament.RenderableManager: long access$000(int)
com.google.ar.core.PointCloud: java.nio.ByteBuffer nativeGetIds(long,long)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addNumVertices(com.google.flatbuffers.FlatBufferBuilder,long)
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: int createLightingCubeFaceDef(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.ar.schemas.sceneform.LightingDef: int createCubeLevelsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.core.CameraConfig$DepthSensorUsage: com.google.ar.core.CameraConfig$DepthSensorUsage[] values()
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.Renderer createRenderer()
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
com.google.ar.sceneform.rendering.EngineInstance: void disableHeadlessEngine()
com.google.ar.schemas.sceneform.CompiledMaterialDef: com.google.ar.schemas.sceneform.CompiledMaterialDef __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Material: java.lang.String nGetName(long)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.ar.sceneform.Camera: void setNearClipPlane(float)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewRenderable makeCopy()
com.google.ar.sceneform.ux.DragGesture: com.google.ar.sceneform.math.Vector3 getPosition()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.ar.core.AugmentedImageDatabase: void nativeReleaseDatabase(long,long)
com.google.ar.sceneform.Node: void setName(java.lang.String)
com.google.ar.core.Config: void finalize()
com.google.ar.core.InstallActivity: InstallActivity()
com.google.ar.core.CameraIntrinsics: CameraIntrinsics(long,com.google.ar.core.Session)
com.google.ar.sceneform.math.Vector3: float componentMin(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int createModelPipelineDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int,int)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: java.nio.ByteBuffer sourceInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.utilities.LoadHelper: java.lang.String removeAndroidAssetPath(java.lang.String)
com.google.ar.sceneform.resources.SharedReference: void dispose()
com.google.android.filament.Scene: void setIndirectLight(com.google.android.filament.IndirectLight)
com.google.ar.sceneform.rendering.RenderableInstance: int getRenderedEntity()
com.google.ar.core.Config: com.google.ar.core.Config setUpdateMode(com.google.ar.core.Config$UpdateMode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.google.android.filament.RenderableManager: void access$1100(long,boolean)
com.google.ar.schemas.lull.DataFloat: int createDataFloat(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.core.CameraConfigFilter: void nativeSetDepthSensorUsage(long,long,int)
com.google.ar.schemas.sceneform.IntVec4Init: void addY(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.DoubleVec2Init: void addY(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.android.filament.RenderTarget: long access$600(long,long)
com.google.ar.schemas.sceneform.ParameterDef: void __init(int,java.nio.ByteBuffer)
androidx.window.embedding.SplitRule: SplitRule()
com.google.ar.sceneform.math.Vector3: int hashCode()
com.google.android.filament.IndirectLight: void nBuilderReflections(long,long)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.ar.sceneform.lullmodel.AabbDef: com.google.ar.sceneform.lullmodel.Vec3 min(com.google.ar.sceneform.lullmodel.Vec3)
com.google.android.filament.Skybox: void access$200(long,boolean)
com.google.ar.sceneform.resources.ResourceRegistry: java.lang.Void lambda$register$0$ResourceRegistry(java.lang.Object,java.util.concurrent.CompletableFuture,java.lang.Object,java.lang.Throwable)
com.google.android.filament.MaterialInstance: void setScissor(int,int,int,int)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder castShadows(boolean)
com.google.ar.sceneform.lullmodel.DataBytes: com.google.ar.sceneform.lullmodel.DataBytes getRootAsDataBytes(java.nio.ByteBuffer)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getWorldScale()
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.ar.sceneform.NodeParent: java.util.List getChildren()
com.google.ar.sceneform.rendering.ViewRenderable: ViewRenderable(com.google.ar.sceneform.rendering.ViewRenderable$Builder,android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
com.google.ar.sceneform.rendering.CameraStream: boolean isTextureInitialized()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
com.google.ar.schemas.lull.KeyVariantPairDef: com.google.flatbuffers.Table value(com.google.flatbuffers.Table)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material lambda$build$3(com.google.ar.sceneform.rendering.Material)
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Type access$200(com.google.ar.sceneform.rendering.Light$Builder)
com.google.ar.core.TrackableBase: int nativeGetTrackingState(long,long)
com.google.android.filament.MaterialInstance: MaterialInstance(long,long)
com.google.ar.core.Pose: float[] getZAxis()
com.google.ar.schemas.sceneform.Vec4Init: void addX(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.sceneform.ux.BaseGestureRecognizer$OnGestureStartedListener: void onGestureStarted(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.core.Plane: java.util.Collection getAnchors()
com.google.ar.schemas.lull.ModelPipelineMaterialDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.Recti: Recti()
com.google.android.filament.Material$BlendingMode: com.google.android.filament.Material$BlendingMode[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.ar.core.SharedCamera: void onCaptureSessionClosed(android.hardware.camera2.CameraCaptureSession)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.lullmodel.MaterialDef: com.google.ar.sceneform.lullmodel.MaterialTextureDef textures(int)
com.google.ar.sceneform.lullmodel.DataVec3: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: void startModelPipelineCollidableDef(com.google.flatbuffers.FlatBufferBuilder)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.google.android.filament.RenderableManager: boolean nBuilderBuild(long,long,int)
com.google.android.filament.LightManager: void nSetDirection(long,int,float,float,float)
androidx.window.core.Version: java.lang.String toString()
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: void beginSample()
com.google.android.filament.MaterialInstance$BooleanElement: MaterialInstance$BooleanElement(java.lang.String,int)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.google.android.filament.MaterialInstance: void setPolygonOffset(float,float)
com.google.ar.sceneform.rendering.ModelRenderable: int getBoneCount()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
com.google.ar.schemas.sceneform.TransformDef: void addScale(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.core.HitResult: float nativeGetDistance(long,long)
com.google.android.filament.RenderableManager: void nBuilderGeometry(long,int,int,long,long)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.CompiledMaterialDef compiledMaterials(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: boolean isRemoving()
com.google.ar.schemas.lull.DataBool: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.VertexBuffer$Builder: com.google.android.filament.VertexBuffer$Builder bufferCount(int)
com.google.ar.sceneform.rendering.Material: com.google.ar.sceneform.rendering.ExternalTexture getExternalTexture(java.lang.String)
com.google.ar.sceneform.R$raw: R$raw()
com.google.ar.schemas.sceneform.CubemapSamplerInit: CubemapSamplerInit()
com.google.ar.core.ArCoreApk: com.google.ar.core.ArCoreApk$Availability checkAvailability(android.content.Context)
com.google.ar.sceneform.rendering.Material: com.google.ar.sceneform.rendering.Material$Builder builder()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
com.google.ar.schemas.sceneform.LightingCubeDef: com.google.ar.schemas.sceneform.LightingCubeDef __assign(int,java.nio.ByteBuffer)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.google.android.filament.IndexBuffer: void access$100(long,int)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder setMaterial(com.google.ar.sceneform.rendering.Material)
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 worldToLocalDirection(com.google.ar.sceneform.math.Vector3)
com.google.ar.core.ArCoreApk$Availability: ArCoreApk$Availability(java.lang.String,int,int)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: com.google.ar.sceneform.rendering.Material getMaterial()
com.google.ar.core.Config: com.google.ar.core.Config setCloudAnchorMode(com.google.ar.core.Config$CloudAnchorMode)
com.google.ar.schemas.lull.Vec4: void __init(int,java.nio.ByteBuffer)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.filament.MaterialInstance: void nSetParameterBool2(long,java.lang.String,boolean,boolean)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addAnimations(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
com.google.ar.sceneform.lullmodel.VariantArrayDef: com.google.ar.sceneform.lullmodel.VariantArrayDefImpl values(com.google.ar.sceneform.lullmodel.VariantArrayDefImpl,int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.ar.core.TrackData: TrackData(long,com.google.ar.core.Session)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.ar.sceneform.lullmodel.TextureDef: java.nio.ByteBuffer fileAsByteBuffer()
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: java.lang.String matSha1sum()
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer vertexIndices16AsByteBuffer()
com.google.ar.sceneform.SceneView: SceneView(android.content.Context)
com.google.ar.core.CameraConfig$StereoCameraUsage: com.google.ar.core.CameraConfig$StereoCameraUsage forNumber(int)
com.google.ar.sceneform.resources.ResourceHolder: void destroyAllResources()
com.google.ar.sceneform.rendering.Renderer: void setEnvironmentalHdrParameters(com.google.ar.sceneform.utilities.EnvironmentalHdrParameters)
com.google.ar.sceneform.rendering.Material: void setTexture(java.lang.String,com.google.ar.sceneform.rendering.Texture)
com.google.android.filament.IndirectLight$Builder: com.google.android.filament.IndirectLight$Builder reflections(com.google.android.filament.Texture)
com.google.ar.sceneform.lullmodel.VertexAttributeType: VertexAttributeType()
com.google.ar.core.R: R()
com.google.ar.sceneform.rendering.RenderableInstance: com.google.ar.sceneform.math.Matrix getRelativeTransformInverse()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: void __init(int,java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.ar.sceneform.rendering.SkeletonRig: int getBoneCount()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.ar.sceneform.Node: com.google.ar.sceneform.NodeParent getNodeParent()
com.google.ar.sceneform.lullmodel.SkeletonDef: java.nio.ByteBuffer boneParentsInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.TrackingFailureReason: com.google.ar.core.TrackingFailureReason[] $values()
com.google.ar.sceneform.math.MathHelper: MathHelper()
com.google.ar.schemas.sceneform.BoolVec4Init: boolean x()
com.google.android.filament.Texture$InternalFormat: Texture$InternalFormat(java.lang.String,int)
com.google.ar.core.SharedCamera: void -$$Nest$monCaptureSessionActive(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession)
com.google.ar.schemas.sceneform.SceneformBundleDef: int samplersLength()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.google.android.filament.IndirectLight: void nIrradiance(long,int,float[])
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.ar.sceneform.utilities.LoadHelper: android.net.Uri resolveUri(android.net.Uri,android.net.Uri)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
com.google.ar.core.LightEstimate$State: LightEstimate$State(java.lang.String,int,int)
com.google.ar.core.ArCoreApk$Availability: boolean isSupported()
com.google.ar.sceneform.NodeParent: void addChild(com.google.ar.sceneform.Node)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.google.ar.sceneform.AnchorNode: AnchorNode()
com.google.ar.schemas.lull.ModelPipelineDef: void startRenderablesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineImportDef sources(com.google.ar.sceneform.lullmodel.ModelPipelineImportDef,int)
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: long nCreateSwiftShaderEngine()
com.google.ar.sceneform.HitTestResult: void setNode(com.google.ar.sceneform.Node)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
androidx.window.embedding.SplitInfo: int hashCode()
com.google.ar.sceneform.lullmodel.VertexAttribute: VertexAttribute()
com.google.ar.sceneform.rendering.SkeletonRig: void setBufferToIdentity(java.nio.FloatBuffer)
com.google.ar.sceneform.Scene: void lambda$dispatchUpdate$3$Scene(com.google.ar.sceneform.FrameTime,com.google.ar.sceneform.Node)
com.google.ar.sceneform.lullmodel.Vec3: int createVec3(com.google.flatbuffers.FlatBufferBuilder,float,float,float)
com.google.android.filament.LightManager: void nBuilderAngularRadius(long,float)
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.TextureDef textures(int)
com.google.ar.core.ImageMetadata: int[] getIntArray(int)
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.TextureDef: int wrapT()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: ModelInstanceDef()
com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment: LayoutHorizontalAlignment()
com.google.android.filament.Texture: void generatePrefilterMipmap(com.google.android.filament.Engine,com.google.android.filament.Texture$PixelBufferDescriptor,int[],com.google.android.filament.Texture$PrefilterOptions)
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment: LayoutVerticalAlignment()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
com.google.ar.sceneform.lullmodel.SubmeshAabb: void addMaxPosition(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef suggestedCollisionShape()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.google.ar.core.Config$AugmentedFaceMode: com.google.ar.core.Config$AugmentedFaceMode valueOf(java.lang.String)
com.google.ar.core.SharedCamera: void nativeSharedCameraOnDisconnected(long,android.hardware.camera2.CameraDevice)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.google.ar.sceneform.lullmodel.Rect: float h()
com.google.ar.schemas.sceneform.CubemapSamplerInit: java.nio.ByteBuffer pathInByteBuffer(java.nio.ByteBuffer)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.google.ar.sceneform.ux.ScaleController: void onContinueTransformation(com.google.ar.sceneform.ux.PinchGesture)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.TouchEventSystem: void setOnTouchListener(com.google.ar.sceneform.Scene$OnTouchListener)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.ar.sceneform.NodeParent: boolean canAddChild(com.google.ar.sceneform.Node,java.lang.StringBuilder)
com.google.android.filament.Platform$UnknownPlatform: Platform$UnknownPlatform(com.google.android.filament.Platform$1)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.ar.schemas.lull.ModelPipelineImportDef: void addRecenter(com.google.flatbuffers.FlatBufferBuilder,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: RenderableDefinition$Builder()
com.google.ar.sceneform.lullmodel.ModelIndexRange: int createModelIndexRange(com.google.flatbuffers.FlatBufferBuilder,long,long)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: void nDestroySwiftShaderSwapChain(long,long)
com.google.ar.sceneform.lullmodel.Vec4: int createVec4(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: void startMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int endModelInstanceDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.dependencies.c: void c(int,android.os.Parcel)
com.google.ar.schemas.sceneform.LightingDef: int cubeLevelsLength()
com.google.ar.sceneform.lullmodel.TextureDef: java.nio.ByteBuffer fileInByteBuffer(java.nio.ByteBuffer)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
com.google.ar.sceneform.rendering.IEngine: void destroyRenderer(com.google.android.filament.Renderer)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
com.google.ar.sceneform.TouchEventSystem: com.google.ar.sceneform.TouchEventSystem$TouchTarget getTouchTargetForNode(com.google.ar.sceneform.Node)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.google.ar.sceneform.lullmodel.Vec3: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.SceneView: boolean isDebugEnabled()
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 right()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.LightManager getLightManager()
com.google.ar.sceneform.lullmodel.TextureDef: boolean isRgbm()
com.google.ar.sceneform.ux.BaseGesture: void dispatchUpdateEvent()
com.google.ar.core.exceptions.UnsupportedConfigurationException: UnsupportedConfigurationException()
com.google.ar.sceneform.rendering.Material: java.lang.String access$100()
com.google.ar.sceneform.rendering.ViewRenderable: void attachToRenderer(com.google.ar.sceneform.rendering.Renderer)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder direction(float,float,float)
com.google.ar.core.ArImage: int nativeGetNumberOfPlanes(long,long)
com.google.flatbuffers.FlatBufferBuilder: void addByte(int,byte,int)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.flatbuffers.Table: int __offset(int,int,java.nio.ByteBuffer)
com.google.android.filament.TransformManager: void nOpenLocalTransformTransaction(long)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder geometry(int,com.google.android.filament.RenderableManager$PrimitiveType,com.google.android.filament.VertexBuffer,com.google.android.filament.IndexBuffer)
com.google.android.filament.Texture$CubemapFace: com.google.android.filament.Texture$CubemapFace[] values()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.google.android.filament.NioUtils: NioUtils()
com.google.ar.schemas.lull.DataVec3: com.google.ar.schemas.lull.DataVec3 getRootAsDataVec3(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataVec3)
com.google.android.filament.android.UiHelper: int getDesiredWidth()
com.google.android.filament.IndirectLight: long nCreateBuilder()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
com.google.ar.sceneform.ux.BaseTransformationController: void setActiveGesture(com.google.ar.sceneform.ux.BaseGesture)
com.google.android.filament.Material: int getParameterCount()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.google.ar.core.Config$GeospatialMode: com.google.ar.core.Config$GeospatialMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyIndexBuffer(com.google.android.filament.IndexBuffer)
com.google.ar.sceneform.ux.SelectionVisualizer: void removeSelectionVisual(com.google.ar.sceneform.ux.BaseTransformableNode)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
com.google.ar.sceneform.rendering.Material$Builder: java.util.concurrent.CompletableFuture build()
com.google.ar.sceneform.Scene$OnPeekTouchListener: void onPeekTouch(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.ar.core.AugmentedFace: java.util.Collection getAnchors()
com.google.ar.core.Session: long nativeGetCameraConfig(long)
com.google.ar.core.RecordingConfig: boolean getAutoStopOnPause()
com.google.ar.sceneform.lullmodel.BlendShape: void startVertexIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.google.ar.schemas.sceneform.IntVec2Init: com.google.ar.schemas.sceneform.IntVec2Init getRootAsIntVec2Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.IntVec2Init)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
com.google.android.filament.View$ToneMapping: com.google.android.filament.View$ToneMapping[] values()
com.google.android.filament.LightManager: void setShadowCaster(int,boolean)
com.google.ar.sceneform.Camera: com.google.ar.sceneform.collision.Ray motionEventToRay(android.view.MotionEvent)
com.google.android.filament.Engine: void nDestroyTexture(long,long)
com.google.ar.core.Config: int nativeGetInstantPlacementMode(long,long)
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState[] values()
com.google.android.filament.RenderableManager: RenderableManager(long)
com.google.ar.sceneform.rendering.Renderer: void setFrameRenderDebugCallback(java.lang.Runnable)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startAabbsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.math.Vector3 getNormal()
com.google.ar.schemas.lull.DataString: void startDataString(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.TransformManager: int nCreateArray(long,int,int,float[])
com.google.ar.sceneform.math.Vector3Evaluator: com.google.ar.sceneform.math.Vector3 evaluate(float,com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.sceneform.LightingCubeFaceType: java.lang.String name(int)
com.google.ar.sceneform.lullmodel.Quat: float y()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.google.android.filament.android.TextureHelper: void setBitmap(com.google.android.filament.Engine,com.google.android.filament.Texture,int,int,int,int,int,android.graphics.Bitmap)
com.google.flatbuffers.FlatBufferBuilder: java.io.InputStream sizedInputStream()
com.google.ar.schemas.sceneform.MaterialDef: java.lang.String name()
com.google.ar.schemas.lull.TextureDef: int minFilter()
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: void addSize(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.SharedCamera: void -$$Nest$monCaptureSessionReady(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.ar.sceneform.rendering.Renderable: void setMaterial(com.google.ar.sceneform.rendering.Material)
com.google.ar.sceneform.R$styleable: R$styleable()
com.google.ar.schemas.sceneform.CubemapSamplerInit: int createCubemapSamplerInit(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.schemas.sceneform.DoubleVec4Init: com.google.ar.schemas.sceneform.DoubleVec4Init __assign(int,java.nio.ByteBuffer)
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format valueOf(java.lang.String)
com.google.ar.schemas.lull.Mat4x3: Mat4x3()
com.google.android.filament.RenderableManager: void nBuilderLayerMask(long,int,int)
com.google.ar.schemas.sceneform.IntVec4Init: int y()
com.google.ar.sceneform.rendering.AnimationData: com.google.ar.sceneform.rendering.AnimationData createInstance(byte[],java.lang.String)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.ar.schemas.lull.TextureDef: boolean isRgbm()
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.Renderable makeCopy()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.VersionDef version(com.google.ar.schemas.sceneform.VersionDef)
com.google.android.filament.AndroidPlatform: boolean validateStreamSource(java.lang.Object)
com.google.android.filament.View: void nSetRenderTarget(long,long)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.math.Vector3 getPosition()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.google.ar.schemas.sceneform.MaterialDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder intensity(float)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.google.android.filament.TransformManager: void setParent(int,int)
com.google.ar.sceneform.lullmodel.MaterialDef: int createTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.jvm.internal.FunctionReference: int hashCode()
com.google.android.filament.Engine: void destroyEntity(int)
com.google.ar.core.Frame: long nativeAcquireCameraImage(long,long)
com.google.ar.sceneform.collision.RayHit: void set(com.google.ar.sceneform.collision.RayHit)
com.google.ar.sceneform.lullmodel.Mat4x3: com.google.ar.sceneform.lullmodel.Vec4 c0()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.ar.core.CameraConfig: void nativeGetImageDimensions(long,long,int[])
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: com.google.ar.sceneform.lullmodel.KeyVariantPairDef getRootAsKeyVariantPairDef(java.nio.ByteBuffer)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
com.google.ar.sceneform.rendering.ViewRenderable: float getOffsetRatioForAlignment(com.google.ar.sceneform.rendering.ViewRenderable$VerticalAlignment)
com.google.ar.schemas.sceneform.LightingDef: float scale()
com.google.ar.sceneform.Scene: void onAddChild(com.google.ar.sceneform.Node)
com.google.ar.sceneform.ux.R$anim: R$anim()
com.google.android.filament.Texture: int nSetImageCubemap(long,long,int,java.nio.Buffer,int,int,int,int,int,int,int,int[],java.lang.Object,java.lang.Runnable)
com.google.ar.sceneform.lullmodel.Mat4x3: com.google.ar.sceneform.lullmodel.Vec4 c0(com.google.ar.sceneform.lullmodel.Vec4)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
com.google.ar.schemas.lull.DataBytes: void startValueVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.CleanupRegistry: CleanupRegistry(java.util.HashSet,java.lang.ref.ReferenceQueue)
com.google.ar.core.AugmentedImage: boolean equals(java.lang.Object)
com.google.ar.sceneform.ux.BaseTransformationController: void onUpdated(com.google.ar.sceneform.Node,com.google.ar.sceneform.FrameTime)
com.google.ar.sceneform.ux.TransformableNode: com.google.ar.sceneform.ux.TranslationController getTranslationController()
com.google.ar.core.annotations.UsedByReflection: java.lang.String value()
com.google.ar.schemas.lull.VariantMapDef: void startVariantMapDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
com.google.ar.schemas.sceneform.DoubleVec2Init: com.google.ar.schemas.sceneform.DoubleVec2Init getRootAsDoubleVec2Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.DoubleVec2Init)
com.google.android.filament.Material: boolean hasParameter(java.lang.String)
com.google.ar.schemas.lull.DataVec2: com.google.ar.schemas.lull.DataVec2 __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Earth: void finalize()
com.google.ar.schemas.sceneform.SceneformBundleDef: void startLightingDefsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.BlendShape: com.google.ar.sceneform.lullmodel.BlendShape getRootAsBlendShape(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.BlendShape)
com.google.ar.core.ImageMetadata: long nativeGetMetadataEntry(long,long,int)
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.google.ar.core.CameraConfig$TargetFps: com.google.ar.core.CameraConfig$TargetFps[] values()
com.google.ar.schemas.lull.DataFloat: com.google.ar.schemas.lull.DataFloat getRootAsDataFloat(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataFloat)
com.google.ar.core.SessionCreateJniHelper: int getMinApkVersion(android.content.Context)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
com.google.ar.schemas.lull.ModelPipelineDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.DoubleVec3Init: DoubleVec3Init()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.google.ar.sceneform.lullmodel.ArcDef: int numSamples()
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.SkeletonDef skeleton()
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.ar.sceneform.ux.BaseTransformableNode: boolean isSelected()
com.google.ar.sceneform.ux.ScaleController: float getElasticDelta()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.google.ar.schemas.lull.KeyVariantPairDef: KeyVariantPairDef()
com.google.android.filament.Box: float[] getHalfExtent()
com.google.ar.core.SharedCamera: void nativeSharedCameraSetAppSurfaces(long,java.lang.String,java.util.List)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Vertex$Builder setUvCoordinate(com.google.ar.sceneform.rendering.Vertex$UvCoordinate)
com.google.android.filament.View$QualityLevel: com.google.android.filament.View$QualityLevel valueOf(java.lang.String)
com.google.ar.schemas.lull.DataString: int endDataString(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Session: void throwExceptionFromArStatus(java.lang.String,int,java.lang.String[],int[])
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void startModelInstanceDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.RenderableManager: void nSetBlendOrderAt(long,int,int,int)
com.google.ar.sceneform.rendering.Material: com.google.android.filament.MaterialInstance getFilamentMaterialInstance()
com.google.ar.core.Frame: long[] nativeHitTest(long,long,float,float)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: void addMaterial(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Skybox$Builder: Skybox$Builder()
com.google.ar.sceneform.rendering.RenderableInstance: void setSkinningModifier(com.google.ar.sceneform.rendering.RenderableInstance$SkinningModifier)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.ar.sceneform.rendering.EngineInstance: void createHeadlessEngine()
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: java.nio.ByteBuffer sourceInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder falloff(float)
com.google.ar.sceneform.lullmodel.VertexAttribute: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.AugmentedFace: java.nio.ByteBuffer nativeGetMeshVerticesByteBuffer(long,long)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef materials(int)
com.google.ar.schemas.lull.ModelInstanceDef: void startModelInstanceDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.Mat4x3: com.google.ar.sceneform.lullmodel.Vec4 c2()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.google.ar.schemas.lull.ArcDef: ArcDef()
com.google.ar.schemas.sceneform.SceneformBundleDef: boolean SceneformBundleDefBufferHasIdentifier(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder setName(java.lang.String)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,com.google.android.filament.MaterialInstance$FloatElement,float[],int,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder castShadows(boolean)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.View createView()
com.google.android.filament.EntityManager: long getNativeObject()
com.google.android.filament.LightManager: long getNativeObject()
com.google.ar.sceneform.lullmodel.AabbDef: com.google.ar.sceneform.lullmodel.Vec3 max(com.google.ar.sceneform.lullmodel.Vec3)
com.google.ar.core.LightEstimate: LightEstimate(com.google.ar.core.Session)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.ar.schemas.sceneform.SceneformBundleDef: void addRuntime(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.DragGesture: com.google.ar.sceneform.ux.BaseGesture getSelf()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.ar.schemas.lull.ModelDef: void finishModelDefBuffer(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
com.google.android.filament.RenderableManager$PrimitiveType: com.google.android.filament.RenderableManager$PrimitiveType valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.Quat: float w()
com.google.ar.schemas.lull.ModelIndexRange: long end()
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 subtract(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.android.filament.View: void nSetDynamicResolutionOptions(long,boolean,boolean,float,float,float,float,float,int)
com.google.ar.schemas.sceneform.SamplerParamsDef: void startSamplerParamsDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(com.google.ar.sceneform.rendering.RenderableDefinition)
androidx.window.core.Bounds: int getTop()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
com.google.android.filament.Asserts: float[] assertFloat4(float[])
com.google.ar.sceneform.Node: void createLightInstance(com.google.ar.sceneform.rendering.Light)
com.google.ar.sceneform.rendering.AnimatorImpl: void setTarget(com.google.ar.sceneform.rendering.ModelRenderable)
com.google.ar.core.InstallActivity: void startInstaller()
com.google.ar.sceneform.rendering.ResourceManager: void destroyAllResources()
com.google.ar.sceneform.utilities.MovingAverage: void addSample(double)
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,int)
com.google.android.filament.LightManager: float nGetSunAngularRadius(long,int)
com.google.android.filament.IndexBuffer: IndexBuffer(long,com.google.android.filament.IndexBuffer$1)
com.google.android.filament.Texture: int getDepth(int)
com.google.ar.core.ArCoreApk: com.google.ar.core.ArCoreApk$InstallStatus requestInstall(android.app.Activity,boolean,com.google.ar.core.ArCoreApk$InstallBehavior,com.google.ar.core.ArCoreApk$UserMessageType)
com.google.ar.sceneform.lullmodel.SubmeshAabb: com.google.ar.sceneform.lullmodel.SubmeshAabb getRootAsSubmeshAabb(java.nio.ByteBuffer)
com.google.android.filament.Texture$PixelBufferDescriptor: Texture$PixelBufferDescriptor(java.nio.Buffer,com.google.android.filament.Texture$Format,com.google.android.filament.Texture$Type,int)
com.google.android.filament.View: void setDynamicResolutionOptions(com.google.android.filament.View$DynamicResolutionOptions)
com.google.flatbuffers.Struct: void __reset()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
com.google.android.filament.Engine: com.google.android.filament.SwapChain createSwapChain(java.lang.Object,long)
com.google.ar.core.GeospatialPose: double getLongitude()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.google.ar.core.RecordingConfig: long nativeCreateRecordingConfig(long)
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.nio.ByteBuffer compressedMaterialInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.Engine: void nDestroyEntity(long,int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.google.ar.sceneform.lullmodel.DataFloat: void startDataFloat(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.SkeletonRig: void initializeMatrix(float[],com.google.ar.schemas.lull.Mat4x3)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
com.google.ar.sceneform.utilities.ArCoreVersion: int getMinArCoreVersionCode(android.content.Context)
com.google.android.filament.Skybox: void nSetLayerMask(long,int,int)
com.google.ar.schemas.lull.DataBool: void startDataBool(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.View: com.google.android.filament.View$Dithering getDithering()
com.google.ar.sceneform.rendering.Light$Type: com.google.ar.sceneform.rendering.Light$Type valueOf(java.lang.String)
com.google.ar.sceneform.ArSceneView: com.google.ar.core.Session getSession()
com.google.android.filament.LightManager: void nBuilderIntensity(long,float,float)
com.google.ar.sceneform.lullmodel.DataVec3: com.google.ar.sceneform.lullmodel.Vec3 value(com.google.ar.sceneform.lullmodel.Vec3)
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.Viewport getLetterboxViewport(com.google.android.filament.Viewport,com.google.android.filament.Viewport)
com.google.ar.sceneform.collision.Sphere: float getRadius()
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,float,float,float)
com.google.android.filament.Skybox$Builder$BuilderFinalizer: void finalize()
com.google.ar.sceneform.collision.CollisionSystem: CollisionSystem()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.google.ar.schemas.lull.Vec3: float y()
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 back()
com.google.ar.sceneform.math.Vector3: void setZero()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: void startMaterialTextureDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.SharedCamera: void nativeSharedCameraCaptureSessionConfigureFailed(long,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.rendering.Renderer: com.google.android.filament.Renderer getFilamentRenderer()
com.google.ar.sceneform.Scene: void lambda$setupLightProbe$4$Scene(com.google.ar.sceneform.rendering.LightProbe)
com.google.ar.core.Session: void getConfig(com.google.ar.core.Config)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
com.google.ar.core.CameraConfig: java.lang.String getCameraId()
com.google.ar.sceneform.lullmodel.DataQuat: DataQuat()
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,java.util.concurrent.Callable)
com.google.ar.core.InstantPlacementPoint$TrackingMethod: com.google.ar.core.InstantPlacementPoint$TrackingMethod[] values()
com.google.android.filament.RenderableManager: void setLayerMask(int,int,int)
com.google.ar.schemas.sceneform.BoolVec2Init: int createBoolVec2Init(com.google.flatbuffers.FlatBufferBuilder,boolean,boolean)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
com.google.ar.sceneform.lullmodel.TextureDef: void addFile(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.LayoutFillOrder: java.lang.String name(int)
com.google.ar.sceneform.collision.RayHit: void setDistance(float)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: java.lang.String name()
com.google.ar.core.CameraConfig$FacingDirection: com.google.ar.core.CameraConfig$FacingDirection valueOf(java.lang.String)
com.google.android.filament.View: com.google.android.filament.Viewport getViewport()
com.google.android.filament.TextureSampler: int nGetWrapModeS(int)
com.google.ar.sceneform.ux.BaseGesture$OnGestureEventListener: void onUpdated(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.sceneform.SceneView: void setBackground(android.graphics.drawable.Drawable)
com.google.ar.sceneform.lullmodel.AabbDef: com.google.ar.sceneform.lullmodel.AabbDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.MaterialDef: int createTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.sceneform.AnimationDef: java.lang.String name()
com.google.ar.schemas.lull.ModelPipelineMaterialDef: java.nio.ByteBuffer nameOverrideAsByteBuffer()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer indices16AsByteBuffer()
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
com.google.ar.schemas.sceneform.DoubleVec3Init: double z()
com.google.ar.sceneform.ux.TwistGesture: void onStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.android.filament.TransformManager: void nCommitLocalTransformTransaction(long)
com.google.ar.sceneform.lullmodel.DataBytes: int createValueVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.schemas.lull.ModelPipelineCollidableDef: ModelPipelineCollidableDef()
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer vertexIndices32AsByteBuffer()
com.google.ar.sceneform.rendering.Renderer: long reclaimReleasedResources()
com.google.ar.sceneform.Node: void setSceneRecursivelyInternal(com.google.ar.sceneform.Scene)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.ar.sceneform.ux.FootprintSelectionVisualizer: void setFootprintRenderable(com.google.ar.sceneform.rendering.ModelRenderable)
com.google.ar.schemas.sceneform.LightingCubeDef: void startLightingCubeDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Session: long nativeCreateAnchor(long,com.google.ar.core.Pose)
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState[] values()
com.google.ar.sceneform.utilities.LoadHelper: java.io.InputStream lambda$fromResource$0$LoadHelper(android.content.Context,int)
com.google.ar.sceneform.lullmodel.SkeletonDef: int boneNamesLength()
com.google.ar.schemas.sceneform.SamplerParamsDef: int createSamplerParamsDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int,int,int,int,int,int)
com.google.ar.core.Anchor: java.lang.String getCloudAnchorId()
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer tangentDataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: com.google.ar.sceneform.lullmodel.ModelPipelineImportDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.RecordingConfig: void nativeAddTrack(long,long,long)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.ar.schemas.lull.VariantMapDef: void addValues(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.math.Quaternion: void set(com.google.ar.sceneform.math.Vector3,float)
com.google.ar.schemas.lull.DeviceType: DeviceType()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.ar.schemas.lull.ArcDef: float outerRadius()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.google.android.filament.Engine: long nCreateScene(long)
com.google.ar.sceneform.math.Vector3: float angleBetweenVectors(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineRenderableDef renderables(com.google.ar.schemas.lull.ModelPipelineRenderableDef,int)
com.google.ar.schemas.lull.SkeletonDef: int boneNamesLength()
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,int)
com.google.ar.schemas.sceneform.CompiledMaterialDef: int endCompiledMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.ScaleController: void setSensitivity(float)
com.google.android.filament.VertexBuffer: void nBuilderBufferCount(long,int)
com.google.ar.schemas.lull.BlendShape: int tangentIndices32Length()
com.google.ar.sceneform.rendering.Light$Builder: Light$Builder(com.google.ar.sceneform.rendering.Light$Type,com.google.ar.sceneform.rendering.Light$1)
androidx.fragment.app.Fragment: void initState()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef skeleton()
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder morphing(boolean)
com.google.ar.sceneform.rendering.LightProbe: void buildFilamentResource(com.google.ar.schemas.sceneform.LightingDef)
com.google.ar.schemas.lull.SkeletonDef: java.lang.String boneNames(int)
com.google.ar.core.GeospatialPose: void finalize()
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda1: SharedCamera$2$$ExternalSyntheticLambda1(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.TouchEventSystem: com.google.ar.sceneform.Scene$OnTouchListener getOnTouchListener()
com.google.ar.schemas.sceneform.CompiledMaterialDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addWrapT(com.google.flatbuffers.FlatBufferBuilder,int)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.google.ar.sceneform.rendering.ModelRenderable: ModelRenderable(com.google.ar.sceneform.rendering.ModelRenderable$Builder)
com.google.ar.sceneform.lullmodel.TextureDef: com.google.ar.sceneform.lullmodel.TextureDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.RenderableDefinition: void addUvToBuffer(com.google.ar.sceneform.rendering.Vertex$UvCoordinate,java.nio.FloatBuffer)
com.google.android.filament.IndirectLight: void access$200(long,int,float[])
com.google.ar.schemas.sceneform.BoolVec4Init: boolean w()
com.google.ar.schemas.sceneform.ParameterDef: int createParameterDef(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int rangesLength()
com.google.ar.core.Session: void nativeConfigure(long,long)
com.google.ar.core.TrackableBase: TrackableBase(long,com.google.ar.core.Session)
com.google.ar.sceneform.lullmodel.ModelDef: void startTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.ar.schemas.lull.MaterialTextureDef: void addUsage(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.SkeletonRig: int getMaterialBoneCount()
com.google.ar.sceneform.rendering.Renderable: void updateFromDefinition(com.google.ar.sceneform.rendering.RenderableDefinition)
com.google.android.filament.EntityManager: int create()
com.google.android.filament.VertexBuffer: void setBufferAt(com.google.android.filament.Engine,int,java.nio.Buffer,int,int)
com.google.ar.sceneform.Node$LifecycleListener: void onDeactivated(com.google.ar.sceneform.Node)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.google.ar.core.Frame: java.util.Collection getUpdatedTrackData(java.util.UUID)
com.google.ar.sceneform.lullmodel.SkeletonDef: void startSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelDef: int endModelDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int texturesLength()
com.google.ar.schemas.sceneform.InputDef: int createInputDef(com.google.flatbuffers.FlatBufferBuilder,int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: void addFlattenHierarchyAndTransformVerticesToRootSpace(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.core.InstantPlacementPoint: int nativeGetTrackingMethod(long,long)
com.google.ar.sceneform.rendering.Light: void setFalloffRadius(float)
com.google.ar.schemas.lull.Mat4x3: com.google.ar.schemas.lull.Vec4 c1()
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.rendering.Vertex$Builder setNormal(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.TextureInternalData makeTextureData(android.graphics.Bitmap,com.google.ar.sceneform.rendering.Texture$Sampler,com.google.ar.sceneform.rendering.Texture$Usage,int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.google.ar.core.ArCoreApk$Availability: boolean isUnknown()
com.google.ar.core.GeospatialPose: double getHeading()
com.google.ar.sceneform.lullmodel.DataBool: boolean value()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.google.ar.sceneform.rendering.AnimatorImpl: long getStartDelayMs()
com.google.ar.core.AugmentedImageDatabase: void finalize()
com.google.ar.core.Camera: long nativeCreateCameraIntrinsics(long)
com.google.ar.schemas.sceneform.VersionDef: com.google.ar.schemas.sceneform.VersionDef getRootAsVersionDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.VersionDef)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyIndirectLight(com.google.android.filament.IndirectLight)
com.google.android.filament.TextureSampler: int nCreateSampler(int,int,int,int,int)
com.google.android.filament.Renderer: com.google.android.filament.Engine getEngine()
com.google.ar.schemas.lull.TextureDef: void startDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Session: com.google.ar.core.RecordingStatus getRecordingStatus()
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer tangentIndices16AsByteBuffer()
com.google.ar.sceneform.lullmodel.SkeletonDef: com.google.ar.sceneform.lullmodel.Mat4x3 boneTransforms(int)
com.google.android.filament.Texture: int nGetHeight(long,int)
com.google.android.filament.LightManager: void access$900(long,float)
com.google.ar.sceneform.Node: void activate()
com.google.ar.core.Session: java.util.Collection convertNativeTrackDataToCollection(long[])
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.VertexAttribute blendAttributes(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.ar.sceneform.lullmodel.DataFloat: float value()
androidx.window.embedding.SplitInfo: float getSplitRatio()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.ar.sceneform.utilities.LoadHelper: void enableCaching(android.content.Context)
com.google.ar.sceneform.utilities.MovingAverage: MovingAverage(double)
com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory: FlatBufferBuilder$ByteBufferFactory()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: Texture$Sampler$MinFilter(java.lang.String,int)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
com.google.ar.core.Coordinates2d: com.google.ar.core.Coordinates2d valueOf(java.lang.String)
com.google.ar.sceneform.ux.BaseGestureRecognizer: BaseGestureRecognizer(com.google.ar.sceneform.ux.GesturePointersUtility)
com.google.ar.schemas.lull.ModelPipelineImportDef: int createModelPipelineImportDef(com.google.flatbuffers.FlatBufferBuilder,int,int,boolean,float,int,float,int,boolean,boolean,boolean,boolean,boolean,boolean,float,int)
com.google.ar.core.RecordingConfig: com.google.ar.core.RecordingConfig setAutoStopOnPause(boolean)
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: int endVariantArrayDefImpl(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.sceneform.SamplerDef: int createSamplerDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int)
com.google.android.filament.Scene: Scene(long)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.Engine getFilamentEngine()
com.google.android.filament.Platform: void warn(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.google.android.filament.View: void nSetCamera(long,long)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer shaderToMeshBonesInByteBuffer(java.nio.ByteBuffer)
com.google.ar.core.Session: java.util.Collection convertNativeAnchorsToCollection(long[])
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.MaterialDef materials(int)
com.google.ar.sceneform.utilities.ChangeId: ChangeId()
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.google.ar.schemas.sceneform.DoubleVec4Init: void startDoubleVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.vr.dynamite.client.DynamiteClient: int checkVersion(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
androidx.window.core.Bounds: Bounds(int,int,int,int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addBlendShapes(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.GeospatialPose: double nativeGetLatitude(long,long)
com.google.ar.sceneform.assets.RenderableSource$Builder: RenderableSource$Builder()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.google.ar.core.exceptions.RecordingFailedException: RecordingFailedException()
com.google.ar.schemas.sceneform.IntVec2Init: void __init(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
com.google.ar.sceneform.R$layout: R$layout()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.google.ar.core.ArImage: long nativeGetTimestamp(long,long)
com.google.flatbuffers.FlatBufferBuilder: void required(int,int)
com.google.android.filament.Colors$Conversion: com.google.android.filament.Colors$Conversion[] values()
com.google.ar.schemas.lull.KeyVariantPairDef: java.nio.ByteBuffer keyAsByteBuffer()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.ar.sceneform.rendering.Light: float getInnerConeAngle()
com.google.ar.sceneform.lullmodel.ModelDef: void finishModelDefBuffer(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.TransformManager: int nGetInstance(long,int)
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.Renderable makeRenderable()
com.google.ar.schemas.sceneform.BoolVec2Init: BoolVec2Init()
com.google.ar.sceneform.rendering.Renderer: void updateLights()
com.google.ar.sceneform.math.QuaternionEvaluator: QuaternionEvaluator()
com.google.android.filament.View: void nSetSampleCount(long,int)
com.google.ar.sceneform.rendering.Color: void set(int)
com.google.ar.sceneform.ux.AugmentedFaceNode: void updateTransform()
com.google.ar.sceneform.math.Matrix: void makeTranslation(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: boolean ensureVertexOrientationWNotZero()
com.google.android.filament.Fence: com.google.android.filament.Fence$FenceStatus waitAndDestroy(com.google.android.filament.Fence,com.google.android.filament.Fence$Mode)
com.google.ar.schemas.sceneform.SamplerInit: com.google.ar.schemas.sceneform.SamplerInit getRootAsSamplerInit(java.nio.ByteBuffer)
com.google.android.filament.Engine: com.google.android.filament.Renderer createRenderer()
com.google.ar.sceneform.rendering.RenderableInstance: void updateSkinning(boolean)
com.google.ar.sceneform.rendering.Vertex$Builder: com.google.ar.sceneform.math.Vector3 access$000(com.google.ar.sceneform.rendering.Vertex$Builder)
com.google.ar.schemas.sceneform.SamplerInit: java.nio.ByteBuffer pathInByteBuffer(java.nio.ByteBuffer)
com.google.android.filament.TextureSampler: int nGetMagFilter(int)
com.google.ar.sceneform.rendering.Renderer: void setDithering(com.google.android.filament.View$Dithering)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.google.ar.schemas.lull.Vec4: Vec4()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.google.ar.core.dependencies.b: b()
com.google.ar.sceneform.utilities.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.android.filament.View: void nSetAmbientOcclusion(long,int)
com.google.ar.core.SharedCamera: android.hardware.camera2.CameraDevice$StateCallback createARDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback,android.os.Handler)
com.google.ar.core.SharedCamera: android.media.ImageReader getCpuImageReaderMotionTracking()
com.google.ar.sceneform.Camera: com.google.ar.sceneform.collision.Ray screenPointToRay(float,float)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.ar.schemas.lull.Vec2: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.Engine: void destroyRenderTarget(com.google.android.filament.RenderTarget)
com.google.ar.sceneform.rendering.IEngine: void destroyTexture(com.google.android.filament.Texture)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion multiply(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.lullmodel.ArcDef: float angleSize()
com.google.ar.sceneform.rendering.Renderer: void initialize()
com.google.ar.core.Plane: com.google.ar.core.Plane getSubsumedBy()
com.google.android.filament.RenderTarget$AttachmentPoint: com.google.android.filament.RenderTarget$AttachmentPoint[] values()
com.google.ar.core.Camera: void nativeGetViewMatrix(long,long,float[],int)
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction[] values()
com.google.ar.sceneform.ux.GesturePointersUtility: float pixelsToInches(float)
com.google.android.filament.View: void nSetClearColor(long,float,float,float,float)
com.google.ar.sceneform.rendering.Vertex: com.google.ar.sceneform.rendering.Vertex$UvCoordinate getUvCoordinate()
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
com.google.ar.schemas.lull.TextureDef: int createTextureDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,boolean,boolean,int,int,int,int,int,int,boolean)
com.google.ar.schemas.sceneform.DoubleInit: int endDoubleInit(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
com.google.flatbuffers.FlatBufferBuilder: FlatBufferBuilder(java.nio.ByteBuffer)
com.google.ar.schemas.lull.Vec2i: Vec2i()
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$CompareFunction getCompareFunction()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.sceneform.Node: void deactivate()
com.google.android.filament.android.UiHelper$1: UiHelper$1(com.google.android.filament.android.UiHelper)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder culling(boolean)
com.google.ar.schemas.sceneform.IntVec4Init: void startIntVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: long nCreateSwiftShaderSwapChain(long,long)
com.google.ar.core.Config$LightEstimationMode: com.google.ar.core.Config$LightEstimationMode[] values()
com.google.ar.schemas.lull.ModelInstanceDef: int createMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.Node: void setLookDirection(com.google.ar.sceneform.math.Vector3)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.ar.sceneform.ArSceneView: void updateHdrLightEstimate(com.google.ar.core.LightEstimate,com.google.ar.core.Session,com.google.ar.core.Camera)
com.google.ar.sceneform.Scene: void setLightEstimate(com.google.ar.sceneform.rendering.Color,float)
com.google.ar.schemas.sceneform.DoubleVec2Init: void __init(int,java.nio.ByteBuffer)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.ar.sceneform.lullmodel.ModelIndexRange: com.google.ar.sceneform.lullmodel.ModelIndexRange __assign(int,java.nio.ByteBuffer)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: void addKey(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.ar.core.Session: int nativeEstimateFeatureMapQualityForHosting(long,com.google.ar.core.Pose)
com.google.android.filament.RenderTarget$Builder$BuilderFinalizer: void finalize()
com.google.android.filament.RenderableManager$PrimitiveType: RenderableManager$PrimitiveType(java.lang.String,int,int)
com.google.ar.sceneform.math.Quaternion: void setIdentity()
com.google.android.filament.LightManager: long nCreateBuilder(int)
com.google.ar.schemas.sceneform.CompiledMaterialDef: com.google.ar.schemas.sceneform.CompiledMaterialDef getRootAsCompiledMaterialDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.CompiledMaterialDef)
com.google.android.filament.Material: Material(long)
com.google.android.filament.NativeSurface: void dispose()
com.google.ar.sceneform.AnchorNode: void setWorldPosition(com.google.ar.sceneform.math.Vector3)
com.google.ar.core.Config$AugmentedFaceMode: com.google.ar.core.Config$AugmentedFaceMode forNumber(int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.ar.core.Plane: float nativeGetExtentZ(long,long)
com.google.ar.sceneform.ux.PinchGesture: boolean canStart(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.sceneform.rendering.CameraProvider: float getFarClipPlane()
com.google.android.filament.Skybox: void nBuilderShowSun(long,boolean)
com.google.ar.schemas.sceneform.Vec4Init: int endVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelPipelineImportDef: float cmPerUnit()
com.google.ar.sceneform.lullmodel.DataVec4: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.filament.android.UiHelper: void setRenderCallback(com.google.android.filament.android.UiHelper$RendererCallback)
com.google.android.filament.Texture: void nBuilderDepth(long,int)
com.google.ar.core.SharedCamera: void onDeviceClosed(android.hardware.camera2.CameraDevice)
com.google.ar.sceneform.TouchEventSystem: void removePointersFromTouchTargets(int)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: java.lang.String source()
com.google.android.filament.VertexBuffer: int nGetVertexCount(long)
com.google.ar.schemas.sceneform.BoolVec3Init: int createBoolVec3Init(com.google.flatbuffers.FlatBufferBuilder,boolean,boolean,boolean)
com.google.ar.core.exceptions.ImageInsufficientQualityException: ImageInsufficientQualityException(java.lang.String)
com.google.ar.sceneform.math.Matrix: void makeTrs(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.ux.BaseArFragment: void onSingleTap(android.view.MotionEvent)
com.google.ar.sceneform.Camera: float getVerticalFovDegrees()
com.google.android.filament.RenderableManager: com.google.android.filament.MaterialInstance getMaterialInstanceAt(int,int)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: ModelPipelineMaterialDef()
com.google.ar.core.ImageMetadata: long[] nativeGetAllKeys(long,long)
com.google.ar.sceneform.utilities.LoadHelper: java.util.concurrent.Callable fromUri(android.content.Context,android.net.Uri,java.util.Map)
com.google.ar.core.Earth: com.google.ar.core.Anchor createAnchor(double,double,double,float[])
com.google.ar.sceneform.lullmodel.DataHashValue: void startDataHashValue(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.Skybox: void access$100(long,long)
com.google.ar.core.SharedCamera: void onCaptureSessionActive(android.hardware.camera2.CameraCaptureSession)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.ar.sceneform.math.Matrix: com.google.ar.sceneform.math.Vector3 transformPoint(com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.sceneform.ScalarInit: com.google.ar.schemas.sceneform.ScalarInit getRootAsScalarInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.ScalarInit)
com.google.ar.core.exceptions.DataUnsupportedVersionException: DataUnsupportedVersionException(java.lang.String)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.google.android.filament.TextureSampler$CompareFunction: com.google.android.filament.TextureSampler$CompareFunction valueOf(java.lang.String)
com.google.ar.sceneform.rendering.AnimatorImpl: void end()
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.nio.ByteBuffer compiledMaterialInByteBuffer(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.window.core.Bounds: boolean isZero()
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: java.nio.ByteBuffer sourceAsByteBuffer()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.google.ar.sceneform.collision.CollisionSystem: void removeCollider(com.google.ar.sceneform.collision.Collider)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addReportErrorsToStdout(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.flatbuffers.Utf8Safe: int encodedLengthGeneral(java.lang.CharSequence,int)
com.google.android.filament.LightManager: void setSunHaloSize(int,float)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.ar.schemas.lull.DataBytes: int endDataBytes(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer shaderToMeshBonesAsByteBuffer()
com.google.android.filament.Skybox: long access$300(long,long)
com.google.ar.core.SharedCamera: android.media.ImageReader getCpuImageReader()
androidx.fragment.app.Fragment: int getNextTransition()
com.google.android.filament.RenderableManager: void nBuilderBlendOrder(long,int,int)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.ar.schemas.lull.DataQuat: com.google.ar.schemas.lull.DataQuat getRootAsDataQuat(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataQuat)
com.google.android.filament.EntityManager: boolean nIsAlive(long,int)
com.google.android.filament.Texture: void nDestroyBuilder(long)
com.google.ar.sceneform.utilities.MovingAverage: MovingAverage(double,double)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
com.google.flatbuffers.FlatBufferBuilder: void addInt(int)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: void addVertexData(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Stream: void access$600(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.android.filament.Engine: com.google.android.filament.SwapChain createSwapChain(java.lang.Object)
com.google.android.filament.TextureSampler$MinFilter: com.google.android.filament.TextureSampler$MinFilter valueOf(java.lang.String)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyScene(com.google.android.filament.Scene)
com.google.ar.sceneform.lullmodel.Mat4x3: Mat4x3()
com.google.ar.core.Earth: boolean equals(java.lang.Object)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: Texture$Sampler$Builder()
com.google.ar.core.Config: int nativeGetCloudAnchorMode(long,long)
com.google.ar.schemas.sceneform.CompiledMaterialDef: int createCompiledMaterialDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int)
com.google.ar.schemas.sceneform.DoubleInit: com.google.ar.schemas.sceneform.DoubleInit getRootAsDoubleInit(java.nio.ByteBuffer)
com.google.ar.core.RecordingConfig: android.net.Uri getMp4DatasetUri()
com.google.ar.schemas.lull.ModelPipelineImportDef: void addUseSpecularGlossinessTexturesIfPresent(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry getTextureRegistry()
com.google.ar.core.Session: long nativeReleaseSessionOwnership(long)
com.google.ar.sceneform.ux.AugmentedFaceNode: java.lang.Object checkNotNull(java.lang.Object)
com.google.ar.schemas.sceneform.VersionDef: int endVersionDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.Vec2i: int createVec2i(com.google.flatbuffers.FlatBufferBuilder,int,int)
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState[] $values()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: com.google.android.filament.Camera createCamera(int)
com.google.ar.schemas.sceneform.CubemapSamplerInit: java.nio.ByteBuffer pathAsByteBuffer()
com.google.ar.sceneform.lullmodel.Vec2i: int x()
com.google.ar.core.Config$AugmentedFaceMode: com.google.ar.core.Config$AugmentedFaceMode[] values()
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setRegistryId(java.lang.Object)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
com.google.ar.core.PointCloud: void release()
com.google.ar.sceneform.ux.PinchGestureRecognizer: PinchGestureRecognizer(com.google.ar.sceneform.ux.GesturePointersUtility)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder setTriangleIndices(java.util.List)
com.google.ar.schemas.sceneform.DoubleVec4Init: void addW(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.ar.schemas.lull.KeyVariantPairDef: void startKeyVariantPairDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.SharedCamera: void onCaptureSessionReady(android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef: void startMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.PlaneRenderer: void loadPlaneMaterial()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.ar.core.AugmentedFace: void populateMeshData()
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$Builder setWrapModeS(com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode)
com.google.android.filament.android.TextureHelper: void setBitmap(com.google.android.filament.Engine,com.google.android.filament.Texture,int,android.graphics.Bitmap)
com.google.android.filament.Platform: boolean validateSharedContext(java.lang.Object)
com.google.ar.core.LightEstimate: float[] getEnvironmentalHdrMainLightDirection()
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.LightManager getLightManager()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.filament.Stream: long nCreateBuilder()
com.google.ar.schemas.lull.DataVec2: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.Node getBoneAttachment(java.lang.String)
com.google.android.filament.Renderer: int nReadPixels(long,long,int,int,int,int,java.nio.Buffer,int,int,int,int,int,int,int,java.lang.Object,java.lang.Runnable)
com.google.ar.sceneform.rendering.Renderer: void setAntiAliasing(com.google.android.filament.View$AntiAliasing)
com.google.ar.schemas.sceneform.SamplerParamsDef: int endSamplerParamsDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.Fence createFence(com.google.android.filament.Fence$Type)
com.google.ar.sceneform.assets.RenderableSource$RecenterMode: com.google.ar.sceneform.assets.RenderableSource$RecenterMode[] values()
com.google.android.filament.IndexBuffer: void clearNativeObject()
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineRenderableDef renderables(int)
com.google.ar.sceneform.ux.BaseArFragment: void access$000(com.google.ar.sceneform.ux.BaseArFragment,android.view.MotionEvent)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.google.ar.sceneform.rendering.Renderable: void detatchFromRenderer()
com.google.android.filament.Material$Parameter$Precision: com.google.android.filament.Material$Parameter$Precision[] values()
com.google.android.filament.LightManager: void nBuilderSpotLightCone(long,float,float)
com.google.ar.sceneform.collision.Plane: void setNormal(com.google.ar.sceneform.math.Vector3)
com.google.ar.core.TrackData: void nativeReleaseTrackData(long,long)
com.google.android.filament.Filament: Filament()
com.google.ar.schemas.lull.SkeletonDef: int createSkeletonDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder setReflectionScaleForFilament(float)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.filament.android.UiHelper$2: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
com.google.android.filament.AndroidPlatform: boolean validateSurface(java.lang.Object)
com.google.android.filament.RenderableManager: void access$1400(long,boolean)
com.google.ar.schemas.lull.SkeletonDef: int boneParents(int)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
com.google.ar.core.PlaybackStatus: com.google.ar.core.PlaybackStatus forNumber(int)
com.google.ar.sceneform.assets.RenderableSource: java.lang.Object call()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: com.google.ar.sceneform.lullmodel.VariantArrayDefImpl getRootAsVariantArrayDefImpl(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.VariantArrayDefImpl)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.ar.schemas.lull.ModelInstanceDef: int vertexAttributesLength()
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,boolean,boolean)
com.google.ar.schemas.sceneform.LightingCubeFaceType: LightingCubeFaceType()
com.google.ar.schemas.sceneform.AnimationDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.android.filament.android.UiHelper$TextureViewHandler: void resize(int,int)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.google.ar.core.LightEstimate: com.google.ar.core.LightEstimate$State getState()
com.google.ar.schemas.lull.SkeletonDef: void __init(int,java.nio.ByteBuffer)
com.google.flatbuffers.FlatBufferBuilder: FlatBufferBuilder(int,com.google.flatbuffers.FlatBufferBuilder$ByteBufferFactory)
com.google.ar.schemas.sceneform.ParameterInitDef: byte initType()
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
com.google.ar.sceneform.lullmodel.MaterialDef: void addTextures(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.HandMotionAnimation: HandMotionAnimation(android.view.View,android.view.View)
com.google.ar.core.Pose: com.google.ar.core.Pose compose(com.google.ar.core.Pose)
com.google.android.filament.RenderableManager: int nGetInstance(long,int)
com.google.android.filament.Material$VertexDomain: Material$VertexDomain(java.lang.String,int)
androidx.fragment.app.Fragment: boolean isInBackStack()
com.google.android.filament.Stream: void access$300(long,int)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: boolean useSpecularGlossinessTexturesIfPresent()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
com.google.android.filament.VertexBuffer: void access$200(long,int)
com.google.ar.sceneform.ux.PinchGesture: void debugLog(java.lang.String)
com.google.ar.schemas.sceneform.LightingDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.android.filament.View: void setPostProcessingEnabled(boolean)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 negated()
com.google.ar.schemas.sceneform.IntVec2Init: void startIntVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$Builder setWrapMode(com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode)
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState valueOf(java.lang.String)
com.google.ar.schemas.lull.DataFloat: void startDataFloat(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.ar.schemas.sceneform.DoubleInit: com.google.ar.schemas.sceneform.DoubleInit getRootAsDoubleInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.DoubleInit)
com.google.android.filament.View: void setClearTargets(boolean,boolean,boolean)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable makeRenderable()
com.google.android.filament.Stream$Builder: com.google.android.filament.Stream$Builder stream(java.lang.Object)
com.google.ar.sceneform.rendering.LightProbe$Builder: java.util.concurrent.CompletableFuture build()
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
com.google.ar.core.Config: com.google.ar.core.Config setFocusMode(com.google.ar.core.Config$FocusMode)
com.google.ar.core.ImageMetadata: android.util.Rational nativeGetRationalFromMetadataEntry(long,long)
com.google.android.filament.View$AmbientOcclusionOptions: View$AmbientOcclusionOptions()
com.google.ar.core.Session: void nativeGetRandomAccessStats(long,long)
com.google.flatbuffers.FlatBufferBuilder: int offset()
com.google.ar.core.RecordingConfig: java.lang.String getMp4DatasetFilePath()
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: CompiledMaterialDeclDef()
com.google.ar.schemas.sceneform.TransformDef: void addOffset(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.BoolVec4Init: BoolVec4Init()
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: com.google.android.filament.SwapChain createSwapChainFromNativeSurface(com.google.android.filament.NativeSurface,long)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,int,int,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.math.Quaternion getRotation()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.google.ar.core.Track: void nativeSetMimeType(long,long,java.lang.String)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: java.lang.String access$200(com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.google.ar.core.Frame: com.google.ar.core.PointCloud acquirePointCloud()
com.google.ar.core.CameraConfig$DepthSensorUsage: java.util.EnumSet forBitFlags(int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.google.ar.schemas.sceneform.Vec4Init: void __init(int,java.nio.ByteBuffer)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.android.filament.SwapChain: SwapChain(long,java.lang.Object)
com.google.ar.schemas.lull.MaterialTextureDef: int usagePerChannelLength()
com.google.flatbuffers.FlatBufferBuilder: void startObject(int)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.google.ar.sceneform.rendering.Vertex$UvCoordinate: Vertex$UvCoordinate(float,float)
com.google.ar.sceneform.lullmodel.Vec3: com.google.ar.sceneform.lullmodel.Vec3 __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineImportDef: boolean flipTextureCoordinates()
com.google.android.filament.Texture: boolean nIsTextureFormatSupported(long,int)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: com.google.ar.schemas.lull.ModelPipelineMaterialDef getRootAsModelPipelineMaterialDef(java.nio.ByteBuffer)
com.google.ar.sceneform.math.MathHelper: boolean almostEqualRelativeAndAbs(float,float)
com.google.ar.core.Camera: com.google.ar.core.TrackingFailureReason getTrackingFailureReason()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder depth(int)
com.google.android.filament.Engine: void destroyIndirectLight(com.google.android.filament.IndirectLight)
com.google.ar.sceneform.rendering.LightProbe$Builder: com.google.ar.sceneform.math.Quaternion access$200(com.google.ar.sceneform.rendering.LightProbe$Builder)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.ar.sceneform.collision.Box: com.google.ar.sceneform.collision.Box makeCopy()
com.google.ar.core.Earth$EarthState: com.google.ar.core.Earth$EarthState forNumber(int)
com.google.ar.core.Trackable: java.util.Collection getAnchors()
com.google.android.filament.VertexBuffer: long getNativeObject()
com.google.ar.core.Plane: com.google.ar.core.Pose nativeGetCenterPose(long,long)
com.google.ar.schemas.sceneform.SamplerParamsDef: int usageType()
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer tangentDataAsByteBuffer()
com.google.ar.core.Trackable: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.ar.schemas.sceneform.Vec4Init: Vec4Init()
com.google.ar.sceneform.Node: void onActivate()
com.google.android.filament.android.UiHelper: void access$100(com.google.android.filament.android.UiHelper,android.view.Surface)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder setDirectIntensityForFilament(float)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.ar.schemas.lull.DataBool: boolean value()
com.google.ar.schemas.sceneform.InputDef: com.google.ar.schemas.sceneform.InputDef getRootAsInputDef(java.nio.ByteBuffer)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.NodeParent: boolean lambda$findByName$0$NodeParent(int,java.lang.String,com.google.ar.sceneform.Node)
com.google.ar.schemas.lull.AabbDef: com.google.ar.schemas.lull.AabbDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.rendering.Material getMaterial(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.android.filament.Stream$Builder: com.google.android.filament.Stream build(com.google.android.filament.Engine)
com.google.ar.sceneform.rendering.ModelRenderable: ModelRenderable(com.google.ar.sceneform.rendering.ModelRenderable$Builder,com.google.ar.sceneform.rendering.ModelRenderable$1)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.ar.core.Config: void nativeSetPlaneFindingMode(long,long,int)
com.google.ar.schemas.sceneform.InputDef: int endInputDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.filament.Engine: void nDestroyEngine(long)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.resources.ResourceRegistry getMaterialRegistry()
com.google.android.filament.Skybox: void setLayerMask(int,int)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.google.ar.core.exceptions.DataUnsupportedVersionException: DataUnsupportedVersionException()
com.google.ar.core.Camera: long nativeAcquireCamera(long,long)
com.google.ar.schemas.sceneform.VersionDef: void __init(int,java.nio.ByteBuffer)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.ar.sceneform.rendering.PlaneRenderer: void loadShadowMaterial()
com.google.ar.core.Quaternion: Quaternion()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.filament.LightManager: void nBuilderHaloSize(long,float)
com.google.ar.schemas.lull.ModelPipelineImportDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.ModelPipelineImportDef: java.nio.ByteBuffer fileInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.Node: void onAddChild(com.google.ar.sceneform.Node)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
com.google.android.filament.Platform: boolean isAndroid()
com.google.android.filament.NioUtils: long getBasePointer(java.nio.Buffer,long,int)
com.google.android.filament.LightManager: void access$500(long,float,float,float)
com.google.ar.sceneform.Scene: java.lang.Void lambda$setupLightProbe$5$Scene(java.lang.Throwable)
com.google.ar.sceneform.resources.ResourceRegistry: long reclaimReleasedResources()
com.google.ar.schemas.lull.BlendShape: BlendShape()
com.google.ar.schemas.sceneform.AnimationDef: int endAnimationDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.LightInstance: void detachFromRenderer()
com.google.ar.schemas.lull.DataBytes: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.IndirectLight: float getIntensity()
com.google.android.filament.View$AmbientOcclusion: com.google.android.filament.View$AmbientOcclusion valueOf(java.lang.String)
com.google.android.filament.VertexBuffer: VertexBuffer(long)
com.google.ar.schemas.sceneform.IntInit: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.PlaneRenderer: com.google.ar.sceneform.rendering.Material lambda$loadPlaneMaterial$2(com.google.ar.sceneform.rendering.Material,com.google.ar.sceneform.rendering.Texture)
com.google.ar.sceneform.Scene: com.google.ar.sceneform.Camera getCamera()
com.google.ar.sceneform.lullmodel.TextureDef: int createDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.google.ar.sceneform.SceneView: void updateAnimation(long)
com.google.ar.schemas.sceneform.CubemapSamplerInit: com.google.ar.schemas.sceneform.CubemapSamplerInit getRootAsCubemapSamplerInit(java.nio.ByteBuffer)
com.google.ar.core.PointCloud: void nativeReleasePointCloud(long,long)
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: java.util.List access$400(com.google.ar.sceneform.rendering.RenderableDefinition$Builder)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
com.google.ar.sceneform.rendering.Light: void setColorTemperature(float)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: com.google.ar.schemas.sceneform.LightingCubeFaceDef getRootAsLightingCubeFaceDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.LightingCubeFaceDef)
com.google.android.filament.Camera: void setModelMatrix(float[])
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.google.ar.sceneform.lullmodel.ArcDef: float innerRadius()
com.google.ar.sceneform.lullmodel.Vec2: Vec2()
com.google.ar.sceneform.rendering.Material$Builder: com.google.ar.sceneform.rendering.Material$Builder setSource(android.content.Context,android.net.Uri)
com.google.ar.sceneform.NodeParent: boolean isIterating()
com.google.android.filament.R$string: R$string()
androidx.window.embedding.SplitPairFilter: int hashCode()
com.google.ar.core.Session: void setCameraTextureName(int)
com.google.ar.sceneform.rendering.Renderer: void destroyAllResources()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.google.ar.core.LightEstimate$State: com.google.ar.core.LightEstimate$State forNumber(int)
com.google.android.filament.Engine: com.google.android.filament.Camera createCamera()
com.google.ar.core.Config: void nativeSetFocusMode(long,long,int)
com.google.ar.core.exceptions.UnavailableUserDeclinedInstallationException: UnavailableUserDeclinedInstallationException()
com.google.flatbuffers.FlatBufferBuilder: void finish(int,java.lang.String,boolean)
com.google.ar.sceneform.ux.HandMotionView: HandMotionView(android.content.Context)
com.google.ar.schemas.sceneform.DoubleInit: void startDoubleInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.Renderer: void removeInstance(com.google.ar.sceneform.rendering.RenderableInstance)
com.google.flatbuffers.FlatBufferBuilder: void finish(int,boolean)
com.google.ar.sceneform.R$bool: R$bool()
com.google.ar.schemas.sceneform.CubemapSamplerInit: void addPath(com.google.flatbuffers.FlatBufferBuilder,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.google.ar.sceneform.collision.Box: boolean shapeIntersection(com.google.ar.sceneform.collision.CollisionShape)
com.google.ar.sceneform.AnchorNode: boolean isSmoothed()
com.google.android.filament.Material: void clearNativeObject()
com.google.android.filament.RenderTarget: int nGetLayer(long,int)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Scene: void addOnUpdateListener(com.google.ar.sceneform.Scene$OnUpdateListener)
com.google.ar.schemas.lull.ArcDef: com.google.ar.schemas.lull.ArcDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Node: com.google.ar.sceneform.rendering.Light getLight()
com.google.ar.sceneform.Scene: void onRemoveChild(com.google.ar.sceneform.Node)
com.google.ar.schemas.lull.VariantMapDef: void startValuesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.Material: void setExternalTexture(java.lang.String,com.google.ar.sceneform.rendering.ExternalTexture)
com.google.ar.core.Config: void nativeSetCloudAnchorMode(long,long,int)
com.google.ar.schemas.lull.DataVec4: com.google.ar.schemas.lull.DataVec4 __assign(int,java.nio.ByteBuffer)
com.google.ar.core.PointCloud: void finalize()
com.google.ar.core.CameraConfigFilter: long nativeCreateCameraConfigFilter(long)
com.google.ar.schemas.lull.Vec2: com.google.ar.schemas.lull.Vec2 __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Material: void copyMaterialParameters(com.google.ar.sceneform.rendering.MaterialParameters)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
com.google.android.filament.RenderableManager: java.util.Set getEnabledAttributesAt(int,int)
com.google.ar.schemas.lull.DataHashValue: void startDataHashValue(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.TransformManager: boolean nHasComponent(long,int)
com.google.ar.sceneform.rendering.MaterialParameters: void setInt(java.lang.String,int)
com.google.ar.sceneform.ux.BaseArFragment: void handleSessionException(com.google.ar.core.exceptions.UnavailableException)
com.google.android.filament.Colors: void nCct(float,float[])
com.google.android.filament.View: void nGetClearColor(long,float[])
com.google.android.filament.RenderableManager: void access$400(long,int,long)
com.google.ar.sceneform.rendering.Texture$Builder: com.google.ar.sceneform.rendering.Texture$Builder setRegistryId(java.lang.Object)
com.google.android.filament.Stream: long getNativeObject()
com.google.ar.schemas.sceneform.DoubleVec3Init: void addX(com.google.flatbuffers.FlatBufferBuilder,double)
com.google.ar.sceneform.lullmodel.DataHashValue: int endDataHashValue(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.Scene: java.util.ArrayList hitTestAll(android.view.MotionEvent)
com.google.ar.sceneform.Camera: void refreshProjectionMatrix()
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$Builder builder()
com.google.ar.sceneform.ArSceneView: com.google.ar.core.Frame getArFrame()
com.google.ar.sceneform.rendering.RenderableInstance$SkinningModifier: java.nio.FloatBuffer modifyMaterialBoneTransformsBuffer(java.nio.FloatBuffer)
com.google.ar.schemas.sceneform.SamplerDef: com.google.ar.schemas.sceneform.SamplerParamsDef params(com.google.ar.schemas.sceneform.SamplerParamsDef)
com.google.ar.core.TrackableBase: com.google.ar.core.TrackingState getTrackingState()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.google.ar.sceneform.collision.Plane: com.google.ar.sceneform.math.Vector3 getNormal()
com.google.ar.core.Session$Feature: com.google.ar.core.Session$Feature[] $values()
com.google.ar.sceneform.assets.RenderableSource$RecenterMode: com.google.ar.sceneform.assets.RenderableSource$RecenterMode valueOf(java.lang.String)
com.google.android.filament.android.UiHelper$ContextErrorPolicy: com.google.android.filament.android.UiHelper$ContextErrorPolicy[] values()
com.google.ar.sceneform.rendering.CameraProvider: void updateTrackedPose(com.google.ar.core.Camera)
com.google.ar.sceneform.lullmodel.DataString: void startDataString(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int renderablesLength()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.ar.schemas.sceneform.SceneformBundleDef: int createMaterialsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.android.filament.Material: boolean isDepthCullingEnabled()
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.ModelIndexRange ranges(com.google.ar.schemas.lull.ModelIndexRange,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.google.ar.sceneform.lullmodel.DataVec3: com.google.ar.sceneform.lullmodel.DataVec3 getRootAsDataVec3(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataVec3)
com.google.ar.schemas.lull.ModelInstanceDef: int createVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.sceneform.ux.PinchGesture: float gapDeltaInches()
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: void destroySwapChain(com.google.android.filament.SwapChain)
com.google.ar.schemas.sceneform.BoolVec4Init: boolean z()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
com.google.ar.schemas.lull.ModelPipelineDef: void addTextures(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: void __init(int,java.nio.ByteBuffer)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.google.ar.core.Camera: void nativeGetImageIntrinsics(long,long,long)
com.google.ar.sceneform.lullmodel.BlendShape: int createTangentIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.android.filament.Skybox$Builder: com.google.android.filament.Skybox$Builder environment(com.google.android.filament.Texture)
com.google.ar.schemas.sceneform.LightingCubeFaceDef: void startLightingCubeFaceDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewSizer getSizer()
com.google.ar.core.ImageFormat: ImageFormat()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.google.ar.sceneform.Node$TransformChangedListener: void onTransformChanged(com.google.ar.sceneform.Node,com.google.ar.sceneform.Node)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.filament.Engine: com.google.android.filament.TransformManager getTransformManager()
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: int createCompiledMaterialDeclDef(com.google.flatbuffers.FlatBufferBuilder,int,int)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.google.ar.sceneform.Sun: void setParent(com.google.ar.sceneform.NodeParent)
com.google.ar.sceneform.ux.TranslationController: void setAllowedPlaneTypes(java.util.EnumSet)
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.InputDef inputs(com.google.ar.schemas.sceneform.InputDef,int)
com.google.android.filament.EntityManager$Holder: EntityManager$Holder()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
com.google.ar.sceneform.SceneView: void stopMirroringToSurface(android.view.Surface)
com.google.android.filament.Texture: int getLevels()
com.google.ar.sceneform.lullmodel.VariantArrayDefImpl: void addValueType(com.google.flatbuffers.FlatBufferBuilder,byte)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.google.ar.sceneform.lullmodel.Recti: int w()
com.google.ar.sceneform.utilities.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.ar.schemas.sceneform.ParameterInitDef: com.google.ar.schemas.sceneform.ParameterInitDef getRootAsParameterInitDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.ParameterInitDef)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.ar.core.Frame: long nativeGetAndroidCameraTimestamp(long,long)
com.google.ar.sceneform.math.Vector3: float dot(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.rendering.ModelRenderable: int getAnimationDataCount()
com.google.ar.sceneform.Node: int getScaledTouchSlop()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.ar.core.Point: boolean equals(java.lang.Object)
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda1: SharedCamera$1$$ExternalSyntheticLambda1(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice)
com.google.ar.sceneform.rendering.LightProbe: void setEnvironmentalHdrSphericalHarmonics(float[],float,com.google.ar.sceneform.utilities.EnvironmentalHdrParameters)
com.google.ar.schemas.sceneform.ParameterDef: ParameterDef()
com.google.ar.schemas.lull.DataVec3: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.RenderableManager: void nBuilderPriority(long,int)
com.google.ar.core.Config$AugmentedFaceMode: com.google.ar.core.Config$AugmentedFaceMode[] $values()
com.google.ar.sceneform.rendering.RenderableDefinition: RenderableDefinition(com.google.ar.sceneform.rendering.RenderableDefinition$Builder,com.google.ar.sceneform.rendering.RenderableDefinition$1)
com.google.ar.schemas.lull.BlendShape: int endBlendShape(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.MaterialInstance: void setDoubleSided(boolean)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: com.google.ar.schemas.lull.Vec3 size()
com.google.ar.schemas.sceneform.IntInit: com.google.ar.schemas.sceneform.IntInit getRootAsIntInit(java.nio.ByteBuffer)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: MovingAverageMillisecondsTracker(com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker$Clock)
com.google.ar.sceneform.lullmodel.DataBool: int endDataBool(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 min(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.lull.Color: int createColor(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.ar.sceneform.rendering.MaterialInternalData: MaterialInternalData()
com.google.ar.core.RecordingStatus: com.google.ar.core.RecordingStatus valueOf(java.lang.String)
com.google.ar.sceneform.collision.CollisionSystem: int lambda$raycastAll$0$CollisionSystem(com.google.ar.sceneform.collision.RayHit,com.google.ar.sceneform.collision.RayHit)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.google.ar.schemas.lull.Rect: com.google.ar.schemas.lull.Rect __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.ModelRenderable makeRenderable()
com.google.ar.sceneform.lullmodel.TextureDef: void addWrapS(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.rendering.DpToMetersViewSizer: DpToMetersViewSizer(int)
com.google.android.filament.Material: long nBuilderBuild(long,java.nio.Buffer,int)
com.google.ar.sceneform.Camera: void setProjectionMatrix(com.google.ar.sceneform.math.Matrix)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
com.google.ar.core.Pose: Pose(float[],com.google.ar.core.Quaternion)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.ar.sceneform.collision.CollisionShape: void onChanged()
androidx.window.layout.WindowMetrics: java.lang.String toString()
com.google.ar.core.exceptions.AnchorNotSupportedForHostingException: AnchorNotSupportedForHostingException(java.lang.String)
com.google.ar.sceneform.rendering.Vertex$Builder: Vertex$Builder()
com.google.android.filament.LightManager: void setDirection(int,float,float,float)
com.google.ar.sceneform.AnchorNode: void setWorldRotation(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.lullmodel.BlendShape: int createTangentDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.filament.RenderTarget: long nCreateBuilder()
com.google.ar.sceneform.rendering.ViewRenderable: void prepareForDraw()
com.google.ar.core.exceptions.DeadlineExceededException: DeadlineExceededException(java.lang.String)
com.google.ar.sceneform.ux.BaseTransformationController: com.google.ar.sceneform.ux.BaseTransformableNode getTransformableNode()
com.google.ar.core.Frame: android.media.Image acquireCameraImage()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyView(com.google.android.filament.View)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: com.google.ar.sceneform.lullmodel.ModelPipelineImportDef getRootAsModelPipelineImportDef(java.nio.ByteBuffer)
com.google.android.filament.Texture: void nSetExternalStream(long,long,long)
com.google.ar.schemas.sceneform.IntInit: com.google.ar.schemas.sceneform.IntInit getRootAsIntInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.IntInit)
com.google.android.filament.LightManager: float nGetFalloff(long,int)
com.google.ar.core.ArCoreApk: ArCoreApk()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.ar.core.Frame: boolean hasDisplayGeometryChanged()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.ar.sceneform.rendering.Renderer: int getDesiredWidth()
com.google.ar.core.Frame: java.util.List convertNativeHitResultsToList(long[])
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getLeft()
com.google.ar.schemas.lull.TextureDef: void addFile(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.android.UiHelper$RenderSurface: void detach()
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: com.google.ar.schemas.lull.Vec3 center()
com.google.ar.schemas.sceneform.SamplerInit: com.google.ar.schemas.sceneform.SamplerInit __assign(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.google.ar.core.ImageMetadata: float nativeGetFloatFromMetadataEntry(long,long)
com.google.ar.schemas.lull.ModelInstanceDef: void addShaderToMeshBones(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.lull.VariantMapDef: int createValuesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.lullmodel.BlendShape: java.nio.ByteBuffer tangentIndices16InByteBuffer(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.google.ar.core.PlaybackStatus: PlaybackStatus(java.lang.String,int,int)
com.google.ar.schemas.lull.DataVec2: com.google.ar.schemas.lull.DataVec2 getRootAsDataVec2(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Renderer: void addInstance(com.google.ar.sceneform.rendering.RenderableInstance)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.ar.core.ArCoreApkJniAdapter: ArCoreApkJniAdapter()
com.google.ar.core.SharedCamera: void setAppSurfaces(java.lang.String,java.util.List)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.google.ar.core.InstallActivity: void -$$Nest$fputlastEvent(com.google.ar.core.InstallActivity,com.google.ar.core.t)
com.google.ar.sceneform.rendering.AnimationData: com.google.ar.sceneform.rendering.AnimationData$Factory makeDefaultFactory()
com.google.ar.schemas.lull.DataVec4: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.SamplerParamsDef: int compareMode()
com.example.downgrade_filtro.MainActivity: MainActivity()
com.google.ar.sceneform.lullmodel.MaterialTextureDef: int createUsagePerChannelVector(com.google.flatbuffers.FlatBufferBuilder,int[])
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.ar.sceneform.rendering.ViewRenderable: void setSizer(com.google.ar.sceneform.rendering.ViewSizer)
com.google.ar.schemas.lull.BlendShape: int createVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.android.filament.RenderableManager$Builder$BuilderFinalizer: void finalize()
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: java.nio.ByteBuffer matSha1sumAsByteBuffer()
com.google.ar.schemas.lull.ModelPipelineDef: com.google.ar.schemas.lull.ModelPipelineSkeletonDef skeleton(com.google.ar.schemas.lull.ModelPipelineSkeletonDef)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.google.ar.sceneform.lullmodel.SubmeshAabb: com.google.ar.sceneform.lullmodel.SubmeshAabb getRootAsSubmeshAabb(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.SubmeshAabb)
androidx.window.core.Version: int getMinor()
com.google.ar.sceneform.rendering.RenderableDefinition: void addQuaternionToBuffer(com.google.ar.sceneform.math.Quaternion,java.nio.FloatBuffer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.google.ar.core.Plane: float[] nativeGetPolygon(long,long)
com.google.ar.schemas.lull.ModelPipelineMaterialDef: ModelPipelineMaterialDef()
com.google.ar.sceneform.rendering.TextureInternalData: void onDispose()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.google.ar.core.ImageMetadata: android.util.Rational[] nativeGetRationalArrayFromMetadataEntry(long,long)
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.google.android.filament.LightManager$Builder: com.google.android.filament.LightManager$Builder sunAngularRadius(float)
com.google.ar.sceneform.lullmodel.DataVec4: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Node: void addLifecycleListener(com.google.ar.sceneform.Node$LifecycleListener)
com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.LightManager: float[] getPosition(int,float[])
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.google.ar.sceneform.rendering.LightProbe: com.google.ar.sceneform.rendering.LightProbe$Builder builder()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.google.ar.sceneform.utilities.Preconditions: void checkElementIndex(int,int,java.lang.String)
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda4: void run()
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.google.ar.core.SharedCamera: void setCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler)
com.google.ar.schemas.lull.SubmeshAabb: void addMaxPosition(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.Vec2i: int y()
com.google.android.filament.TextureSampler: com.google.android.filament.TextureSampler$WrapMode getWrapModeT()
com.google.ar.sceneform.utilities.AndroidPreconditions: void checkUiThread()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
com.google.ar.schemas.sceneform.SamplerParamsDef: void addMinFilter(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.ux.TranslationController: void onEndTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.schemas.sceneform.BoolVec2Init: int endBoolVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.TextureSampler$MagFilter: TextureSampler$MagFilter(java.lang.String,int)
com.google.ar.core.ae: com.google.ar.core.ae[] values()
com.google.android.filament.RenderableManager: void nBuilderCastShadows(long,boolean)
com.google.ar.sceneform.rendering.Vertex: Vertex(com.google.ar.sceneform.rendering.Vertex$Builder)
com.google.ar.core.DepthPoint: com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose)
com.google.ar.sceneform.lullmodel.MaterialDef: int endMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.google.ar.sceneform.rendering.IEngine: void destroyEntity(int)
com.google.ar.sceneform.rendering.AnimatorImpl$Factory: com.google.ar.sceneform.rendering.AnimatorImpl create(com.google.ar.sceneform.rendering.AnimatorImpl)
com.google.android.filament.NioUtils$BufferType: com.google.android.filament.NioUtils$BufferType valueOf(java.lang.String)
com.google.android.filament.TextureSampler: int nGetCompareMode(int)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.SubmeshAabb aabbs(int)
com.google.ar.core.Track: com.google.ar.core.Track setMetadata(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.VariantArrayDef: void startVariantArrayDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.LightManager$ShadowOptions: LightManager$ShadowOptions()
androidx.fragment.app.Fragment: void performStop()
com.google.ar.sceneform.TouchEventSystem: android.view.MotionEvent splitMotionEvent(android.view.MotionEvent,int)
androidx.window.core.Version: int getMajor()
androidx.fragment.app.Fragment: android.view.View getView()
com.google.ar.sceneform.SkeletonNode: void onUpdate(com.google.ar.sceneform.FrameTime)
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState forNumber(int)
com.google.ar.sceneform.rendering.CameraStream: void adjustCameraUvsForOpenGL()
com.google.android.filament.Skybox: void nBuilderEnvironment(long,long)
com.google.ar.core.CameraConfig$FacingDirection: com.google.ar.core.CameraConfig$FacingDirection[] values()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
com.google.ar.sceneform.rendering.ThreadPools: void setThreadPoolExecutor(java.util.concurrent.Executor)
com.google.ar.core.AugmentedFace: com.google.ar.core.Pose getRegionPose(com.google.ar.core.AugmentedFace$RegionType)
com.google.android.filament.Texture: int nGeneratePrefilterMipmap(long,long,int,int,java.nio.Buffer,int,int,int,int,int,int,int,int[],java.lang.Object,java.lang.Runnable,int,boolean)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.google.ar.sceneform.lullmodel.TextureDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Box: Box()
com.google.ar.core.CameraConfig$DepthSensorUsage: com.google.ar.core.CameraConfig$DepthSensorUsage valueOf(java.lang.String)
com.google.ar.schemas.lull.BlendShape: void startBlendShape(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ArSceneView: void lambda$resumeAsync$0$ArSceneView(java.lang.ref.WeakReference)
com.google.flatbuffers.FlatBufferBuilder: void addBoolean(int,boolean,boolean)
com.google.android.filament.View: void setFrontFaceWindingInverted(boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.google.ar.sceneform.collision.CollisionShape: boolean shapeIntersection(com.google.ar.sceneform.collision.CollisionShape)
com.google.android.filament.Engine: com.google.android.filament.View createView()
com.google.ar.sceneform.rendering.Renderer: void render(boolean)
com.google.ar.sceneform.collision.Collider: com.google.ar.sceneform.collision.CollisionShape getShape()
com.google.ar.core.InstallActivity: void closeInstaller()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.VersionDef version()
com.google.ar.sceneform.ux.GesturePointersUtility: void retainPointerId(int)
com.google.flatbuffers.FlatBufferBuilder: java.nio.ByteBuffer dataBuffer()
com.google.android.filament.Material: float getSpecularAntiAliasingThreshold()
com.google.android.filament.LightManager: int nGetInstance(long,int)
com.google.android.filament.Stream: void access$100(long,java.lang.Object)
com.google.ar.schemas.sceneform.IntInit: int endIntInit(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Camera: com.google.ar.core.Pose nativeGetPose(long,long)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.ar.sceneform.ux.TwistGestureRecognizer: TwistGestureRecognizer(com.google.ar.sceneform.ux.GesturePointersUtility)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void startTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Session: void nativeSetDisplayGeometry(long,int,int,int)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.ar.sceneform.ux.BaseGesture: void complete()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: java.nio.ByteBuffer attributesInByteBuffer(java.nio.ByteBuffer)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.ar.sceneform.rendering.MaterialParameters: void setInt3(java.lang.String,int,int,int)
com.google.android.filament.RenderableManager: void access$100(long,int,int,long,long)
com.google.ar.schemas.lull.ModelPipelineDef: void startTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.google.ar.schemas.lull.SkeletonDef: int endSkeletonDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.BaseGesture$OnGestureEventListener: void onFinished(com.google.ar.sceneform.ux.BaseGesture)
com.google.android.filament.VertexBuffer: int getVertexCount()
com.google.android.filament.Renderer: double getUserTime()
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: EnvironmentalHdrParameters$Builder()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
com.google.android.filament.android.UiHelper: void destroySwapChain()
com.google.android.filament.android.UiHelper: int access$300(com.google.android.filament.android.UiHelper)
com.google.android.filament.Material: float getSpecularAntiAliasingVariance()
com.google.ar.sceneform.ux.TranslationController: boolean canStartTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.schemas.sceneform.Vec3Init: void addX(com.google.flatbuffers.FlatBufferBuilder,float)
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.ar.sceneform.rendering.RenderableInstance: void setModelMatrix(com.google.android.filament.TransformManager,float[])
com.google.ar.core.AugmentedFace$RegionType: com.google.ar.core.AugmentedFace$RegionType[] $values()
com.google.ar.schemas.sceneform.RenderFlags: RenderFlags()
com.google.ar.sceneform.resources.SharedReference: void release()
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: com.google.ar.sceneform.rendering.RenderableDefinition$Builder setSubmeshes(java.util.List)
com.google.ar.sceneform.rendering.IEngine: com.google.android.filament.Scene createScene()
com.google.ar.schemas.lull.MaterialDef: com.google.ar.schemas.lull.MaterialDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.LightingDef: com.google.ar.schemas.sceneform.LightingDef __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Camera: void setPerspective(float,float,float,float)
androidx.window.embedding.SplitRule: int hashCode()
com.google.ar.core.exceptions.UnsupportedConfigurationException: UnsupportedConfigurationException(java.lang.String)
com.google.ar.sceneform.math.Vector3: java.lang.String toString()
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler$Builder setWrapModeR(com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.google.ar.sceneform.ArSceneView: java.util.concurrent.CompletableFuture resumeAsync(java.util.concurrent.Executor)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.ModelInstanceDef __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Pose: com.google.ar.core.Pose makeRotation(float[])
com.google.ar.sceneform.lullmodel.SkeletonDef: int boneTransformsLength()
com.google.ar.core.Frame: android.media.Image acquireRawDepthConfidenceImage()
com.google.ar.sceneform.rendering.HeadlessEngineWrapper: com.google.android.filament.SwapChain createSwapChain(java.lang.Object)
com.google.android.filament.Texture: void access$600(long,int)
com.google.ar.schemas.lull.VertexAttributeUsage: java.lang.String name(int)
com.google.ar.core.Config$FocusMode: com.google.ar.core.Config$FocusMode forNumber(int)
com.google.ar.schemas.lull.BlendShape: int createTangentIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.ux.PinchGesture: boolean updateGesture(com.google.ar.sceneform.HitTestResult,android.view.MotionEvent)
com.google.ar.schemas.lull.ModelDef: int createTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters$Builder: com.google.ar.sceneform.utilities.EnvironmentalHdrParameters build()
com.google.ar.sceneform.lullmodel.DataVec4: com.google.ar.sceneform.lullmodel.DataVec4 __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Session: long nativeResolveCloudAnchor(long,java.lang.String)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.ar.schemas.sceneform.LightingCubeDef: int facesLength()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.ar.schemas.lull.Recti: com.google.ar.schemas.lull.Recti __assign(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
com.google.ar.sceneform.lullmodel.MaterialDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.utilities.LoadHelper: LoadHelper()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.google.android.filament.RenderTarget: long nBuilderLayer(long,int,int)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer indices32AsByteBuffer()
com.google.ar.core.ImageMetadata: ImageMetadata()
com.google.ar.core.Session: void configure(com.google.ar.core.Config)
com.google.ar.sceneform.rendering.ModelRenderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder setSource(android.content.Context,android.net.Uri,boolean)
com.google.android.filament.View$AmbientOcclusion: View$AmbientOcclusion(java.lang.String,int)
com.google.ar.sceneform.utilities.Preconditions: void checkState(boolean)
com.google.ar.sceneform.rendering.Light: void addChangedListener(com.google.ar.sceneform.rendering.Light$LightChangedListener)
com.google.ar.core.Earth: Earth(long,com.google.ar.core.Session)
com.google.ar.core.GeospatialPose: double getHeadingAccuracy()
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter getMagFilter()
com.google.ar.sceneform.rendering.CameraProvider: com.google.ar.sceneform.math.Matrix getViewMatrix()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.LightingDef lightingDefs(com.google.ar.schemas.sceneform.LightingDef,int)
com.google.android.filament.LightManager$Type: com.google.android.filament.LightManager$Type valueOf(java.lang.String)
com.google.ar.schemas.lull.ModelPipelineRenderableDef: int createAttributesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.schemas.sceneform.LightingDef: int endLightingDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.rendering.SceneformBundle: SceneformBundle()
com.google.android.filament.Texture$CompressedFormat: com.google.android.filament.Texture$CompressedFormat valueOf(java.lang.String)
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: long hashKey()
com.google.android.filament.Scene: void addEntities(int[])
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.google.ar.core.Pose: float qz()
com.google.android.filament.RenderableManager: void nSetAxisAlignedBoundingBox(long,int,float,float,float,float,float,float)
com.google.ar.sceneform.ux.PinchGesture: void cancel()
com.google.ar.sceneform.rendering.LightProbe: java.util.concurrent.CompletableFuture loadInBackground(java.util.concurrent.Callable)
com.google.ar.sceneform.SceneView: void doUpdate(long)
com.google.ar.sceneform.lullmodel.ModelPipelineImportDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.ar.core.exceptions.AnchorNotSupportedForHostingException: AnchorNotSupportedForHostingException()
com.google.ar.core.dependencies.c: android.os.Parcel b(int,android.os.Parcel)
com.google.ar.schemas.lull.ModelInstanceDef: com.google.ar.schemas.lull.BlendShape blendShapes(int)
com.google.ar.core.InstallActivity: void animateToSpinner()
com.google.ar.schemas.lull.Mat4x3: int createMat4x3(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float,float,float,float,float,float,float,float,float)
com.google.ar.schemas.lull.SubmeshAabb: void addMinPosition(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelDef: void addSkeleton(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.AnimationDef: void startDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: ViewRenderable$Builder(com.google.ar.sceneform.rendering.ViewRenderable$1)
com.google.ar.schemas.lull.MaterialTextureDef: com.google.ar.schemas.lull.MaterialTextureDef getRootAsMaterialTextureDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.MaterialTextureDef)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.google.ar.sceneform.lullmodel.VariantMapDef: com.google.ar.sceneform.lullmodel.KeyVariantPairDef values(com.google.ar.sceneform.lullmodel.KeyVariantPairDef,int)
com.google.ar.core.Quaternion: Quaternion(float,float,float,float)
com.google.ar.schemas.sceneform.BoolVec3Init: void addX(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.android.filament.LightManager: void access$1200(long,float)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
com.google.ar.core.exceptions.SessionPausedException: SessionPausedException(java.lang.String)
com.google.ar.sceneform.ux.RotationController: void onContinueTransformation(com.google.ar.sceneform.ux.BaseGesture)
com.google.ar.schemas.lull.LayoutVerticalAlignment: LayoutVerticalAlignment()
com.google.ar.sceneform.lullmodel.SkeletonDef: java.lang.String boneNames(int)
com.google.ar.sceneform.Node: com.google.ar.sceneform.rendering.SkeletonRig getSkeletonRig()
com.google.ar.sceneform.lullmodel.ModelInstanceDef: java.nio.ByteBuffer vertexDataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Renderer: void setFrontFaceWindingInverted(java.lang.Boolean)
com.google.android.filament.Texture: void clearNativeObject()
com.google.android.filament.Engine: long nGetTransformManager(long)
com.google.ar.sceneform.utilities.LoadHelper: java.util.concurrent.Callable fromUri(android.content.Context,android.net.Uri)
com.google.android.filament.Renderer: void nCopyFrame(long,long,int,int,int,int,int,int,int,int,int)
com.google.ar.sceneform.utilities.FlatBufferUtils: byte[] parseJsonNative(java.lang.String,java.lang.String)
com.google.android.filament.Texture$PixelBufferDescriptor: Texture$PixelBufferDescriptor(java.nio.Buffer,com.google.android.filament.Texture$Format,com.google.android.filament.Texture$Type,int,int,int,int,java.lang.Object,java.lang.Runnable)
com.google.android.filament.TextureSampler$CompareMode: TextureSampler$CompareMode(java.lang.String,int)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
com.google.ar.schemas.lull.TextureDef: int dataLength()
com.google.ar.sceneform.ArSceneView: boolean shouldRecalculateCameraUvs(com.google.ar.core.Frame)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
com.google.android.filament.RenderableManager: void setGeometryAt(int,int,com.google.android.filament.RenderableManager$PrimitiveType,com.google.android.filament.VertexBuffer,com.google.android.filament.IndexBuffer,int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
com.google.ar.sceneform.math.Quaternion: com.google.ar.sceneform.math.Quaternion eulerAngles(com.google.ar.sceneform.math.Vector3)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.ar.schemas.sceneform.MaterialDef: com.google.ar.schemas.sceneform.MaterialDef getRootAsMaterialDef(java.nio.ByteBuffer)
com.google.ar.core.AugmentedFace: AugmentedFace()
com.google.ar.sceneform.collision.Sphere: boolean rayIntersection(com.google.ar.sceneform.collision.Ray,com.google.ar.sceneform.collision.RayHit)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef getRootAsSuggestedCollisionShapeDef(java.nio.ByteBuffer)
com.google.ar.sceneform.ux.ScaleController: float getElasticity()
com.google.android.filament.MaterialInstance: com.google.android.filament.Material getMaterial()
com.google.ar.sceneform.AnchorNode: boolean isTracking()
com.google.ar.sceneform.math.Matrix: void makeScale(com.google.ar.sceneform.math.Vector3)
com.google.ar.sceneform.rendering.LightInstance: boolean access$002(com.google.ar.sceneform.rendering.LightInstance,boolean)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void addRenderables(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.ar.schemas.sceneform.MaterialDef: com.google.ar.schemas.sceneform.ParameterDef parameters(com.google.ar.schemas.sceneform.ParameterDef,int)
com.google.ar.schemas.lull.DataBool: void addValue(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.rendering.LightInstance: com.google.ar.sceneform.rendering.Light getLight()
com.google.ar.sceneform.lullmodel.SubmeshAabb: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.ViewRenderable: com.google.ar.sceneform.rendering.ViewRenderable$Builder builder()
com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef: int createModelPipelineCollidableDef(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.LightManager: void nSetColor(long,int,float,float,float)
com.google.android.filament.Material: long getNativeObject()
androidx.window.embedding.SplitRule: int getLayoutDirection()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.filament.View: void nSetVisibleLayers(long,int,int)
com.google.ar.core.ArCoreApk: com.google.ar.core.ArCoreApk getInstance()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.ar.core.LightEstimate$State: com.google.ar.core.LightEstimate$State valueOf(java.lang.String)
com.google.ar.sceneform.rendering.Texture: com.google.ar.sceneform.rendering.Texture$Sampler getSampler()
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
com.google.ar.schemas.sceneform.DoubleVec2Init: int endDoubleVec2Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.core.Session: long nativeCreateSessionAndWrapperWithFeatures(android.content.Context,int[])
com.google.android.filament.Engine: long nCreateEngine(long,long)
com.google.ar.sceneform.rendering.DpToMetersViewSizer: com.google.ar.sceneform.math.Vector3 getSize(android.view.View)
com.google.android.filament.Camera: Camera(long)
com.google.ar.sceneform.ArSceneView: void setLightDirectionUpdateEnabled(boolean)
com.google.ar.core.ImageMetadata: int[] nativeGetIntArrayFromMetadataEntry(long,long)
com.google.flatbuffers.FlatBufferBuilder: void addDouble(double)
com.google.ar.sceneform.collision.Sphere: Sphere()
com.google.ar.core.Pose: float tz()
com.google.ar.schemas.lull.MaterialTextureDef: java.nio.ByteBuffer nameInByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: int endModelPipelineMaterialDef(com.google.flatbuffers.FlatBufferBuilder)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.google.ar.sceneform.rendering.LightInstance: boolean lightTypeRequiresPosition(com.google.ar.sceneform.rendering.Light$Type)
com.google.android.filament.Engine: long nGetRenderableManager(long)
com.google.ar.core.CameraIntrinsics: void getFocalLength(float[],int)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh$Builder: com.google.ar.sceneform.rendering.RenderableDefinition$Submesh build()
com.google.android.filament.Engine: void destroySwapChain(com.google.android.filament.SwapChain)
com.google.ar.core.Config$DepthMode: Config$DepthMode(java.lang.String,int,int)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.ar.schemas.sceneform.SuggestedCollisionShapeDef: int endSuggestedCollisionShapeDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelInstanceDef: java.nio.ByteBuffer vertexDataAsByteBuffer()
com.google.flatbuffers.Table: com.google.flatbuffers.Table __union(com.google.flatbuffers.Table,int)
com.google.android.filament.Skybox: void access$400(long)
com.google.ar.schemas.sceneform.Vec2Init: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.MaterialDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Session: com.google.ar.core.PlaybackStatus getPlaybackStatus()
com.google.ar.sceneform.AnchorNode: void setLocalPosition(com.google.ar.sceneform.math.Vector3)
com.google.ar.core.InstantPlacementPoint: com.google.ar.core.InstantPlacementPoint$TrackingMethod getTrackingMethod()
com.google.android.filament.Material: float nGetSpecularAntiAliasingThreshold(long)
com.google.android.filament.Texture$PixelBufferDescriptor: void setCallback(java.lang.Object,java.lang.Runnable)
com.google.ar.sceneform.AnchorNode: void updateTrackedPose(float,boolean)
com.google.ar.core.Plane: java.nio.FloatBuffer getPolygon()
com.google.ar.sceneform.utilities.AndroidPreconditions: boolean isMinAndroidApiLevel()
com.google.ar.schemas.lull.DataString: java.nio.ByteBuffer valueAsByteBuffer()
com.google.android.filament.RenderTarget$Builder: com.google.android.filament.Texture[] access$000(com.google.android.filament.RenderTarget$Builder)
com.google.ar.schemas.sceneform.SamplerInit: void addPath(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer vertexIndices32AsByteBuffer()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.filament.Renderer: void nResetUserTime(long)
com.google.ar.schemas.lull.ModelDef: com.google.ar.schemas.lull.ModelDef __assign(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.SceneformBundleDef: int createAnimationsVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.android.filament.TransformManager: void openLocalTransformTransaction()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.ar.sceneform.lullmodel.TextureDef: int wrapS()
com.google.ar.sceneform.SkeletonNode: void setRenderable(com.google.ar.sceneform.rendering.Renderable)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.google.ar.sceneform.rendering.FixedHeightViewSizer: float getHeight()
com.google.flatbuffers.FlatBufferBuilder: byte[] sizedByteArray(int,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.google.ar.schemas.sceneform.BoolInit: void __init(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.ar.schemas.lull.MaterialDef: void addTextures(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.utilities.Preconditions: Preconditions()
com.google.ar.sceneform.rendering.CameraStream: void setCameraMaterialToDefault()
com.google.ar.schemas.lull.ModelIndexRange: long start()
com.google.flatbuffers.Utf8Safe: void encodeUtf8Buffer(java.lang.CharSequence,java.nio.ByteBuffer)
com.google.ar.sceneform.Scene: void onTouchEvent(android.view.MotionEvent)
com.google.ar.sceneform.ux.TranslationController: void updatePosition(com.google.ar.sceneform.FrameTime)
com.google.ar.core.SharedCamera$2$$ExternalSyntheticLambda3: void run()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.ar.sceneform.collision.Box: void setRotation(com.google.ar.sceneform.math.Quaternion)
com.google.ar.sceneform.rendering.ViewRenderable: void detatchFromRenderer()
com.google.ar.sceneform.lullmodel.KeyVariantPairDef: void addValueType(com.google.flatbuffers.FlatBufferBuilder,byte)
com.google.ar.sceneform.lullmodel.BlendShape: com.google.ar.sceneform.lullmodel.BlendShape __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.ux.BaseTransformationController: BaseTransformationController(com.google.ar.sceneform.ux.BaseTransformableNode,com.google.ar.sceneform.ux.BaseGestureRecognizer)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
com.google.android.filament.VertexBuffer: void setBufferAt(com.google.android.filament.Engine,int,java.nio.Buffer)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.ar.sceneform.lullmodel.DataBytes: void startDataBytes(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.math.Quaternion: float dot(com.google.ar.sceneform.math.Quaternion,com.google.ar.sceneform.math.Quaternion)
com.google.ar.schemas.sceneform.ParameterInitDef: void addInitType(com.google.flatbuffers.FlatBufferBuilder,byte)
com.google.ar.sceneform.collision.CollisionSystem: void intersectsAll(com.google.ar.sceneform.collision.Collider,java.util.function.Consumer)
com.google.ar.schemas.sceneform.SamplerDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.ar.sceneform.rendering.Light: com.google.ar.sceneform.math.Vector3 getLocalPosition()
com.google.ar.sceneform.ux.PinchGesture: com.google.ar.sceneform.ux.PinchGesture getSelf()
com.google.ar.sceneform.ux.HandMotionView: HandMotionView(android.content.Context,android.util.AttributeSet)
com.google.ar.schemas.lull.KeyVariantPairDef: void addHashKey(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.ar.schemas.lull.KeyVariantPairDef: java.lang.String key()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.ar.schemas.sceneform.Vec3Init: float y()
com.google.ar.sceneform.ux.BaseArFragment: void requestDangerousPermissions()
com.google.ar.core.Config: void nativeSetAugmentedFaceMode(long,long,int)
com.google.ar.sceneform.lullmodel.BlendShape: int endBlendShape(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.DataBool: int createDataBool(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.ArSceneView: void resumeScene()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MagFilter[] values()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
androidx.fragment.app.Fragment: boolean isPostponed()
com.google.ar.sceneform.rendering.LightProbe: void access$700(com.google.ar.sceneform.rendering.LightProbe,com.google.ar.schemas.sceneform.LightingDef)
com.google.ar.sceneform.ux.BaseGesture: void onFinish()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.filament.Camera: void nGetViewMatrix(long,float[])
com.google.ar.schemas.lull.ModelPipelineImportDef: int maxBoneWeights()
com.google.ar.core.Pose: com.google.ar.core.Pose inverse()
com.google.ar.schemas.lull.ModelDef: ModelDef()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.lull.ModelDef model(com.google.ar.schemas.lull.ModelDef)
com.google.android.filament.RenderableManager: boolean access$1500(long,long,int)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.ar.schemas.sceneform.SamplerParamsDef: void addMagFilter(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.DoubleInit: com.google.ar.schemas.sceneform.DoubleInit __assign(int,java.nio.ByteBuffer)
com.google.android.filament.IndexBuffer$Builder$BuilderFinalizer: IndexBuffer$Builder$BuilderFinalizer(long)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.google.ar.sceneform.rendering.Renderer: void setClearColor(com.google.ar.sceneform.rendering.Color)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.ar.core.Config$GeospatialMode: Config$GeospatialMode(java.lang.String,int,int)
com.google.flatbuffers.Table: Table()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int sourcesLength()
com.google.ar.schemas.lull.Mat4x3: com.google.ar.schemas.lull.Vec4 c0()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.google.ar.sceneform.ux.HandMotionView: void onAttachedToWindow()
com.google.ar.core.Anchor$TerrainAnchorState: com.google.ar.core.Anchor$TerrainAnchorState forNumber(int)
com.google.ar.schemas.sceneform.IntVec4Init: int w()
com.google.ar.schemas.lull.BlendShape: void startVertexDataVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Material$Parameter$Type: com.google.android.filament.Material$Parameter$Type[] values()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.ar.sceneform.lullmodel.DataVec2: com.google.ar.sceneform.lullmodel.Vec2 value()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.ar.sceneform.ArSceneView: boolean isEnvironmentalHdrLightingAvailable()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
com.google.android.filament.Material: int nGetShading(long)
com.google.ar.core.Pose: float qw()
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.google.ar.sceneform.utilities.Preconditions: void checkState(boolean,java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.google.ar.core.CameraConfigFilter: CameraConfigFilter(com.google.ar.core.Session)
com.google.ar.sceneform.ux.TransformableNode: com.google.ar.sceneform.ux.ScaleController getScaleController()
com.google.ar.sceneform.FrameTime: void update(long)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.google.ar.sceneform.ux.DragGesture: void debugLog(java.lang.String)
com.google.ar.sceneform.collision.Box: Box(com.google.ar.sceneform.math.Vector3,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.sceneform.LightingDef: com.google.ar.schemas.sceneform.LightingDef getRootAsLightingDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Renderer: void setDefaultClearColor()
com.google.android.filament.Stream: long access$500(long,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.google.ar.sceneform.rendering.Renderable: void setRenderPriority(int)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int endModelPipelineDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.VariantArrayDef: void startValuesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.lullmodel.ModelDef: com.google.ar.sceneform.lullmodel.ModelInstanceDef lods(com.google.ar.sceneform.lullmodel.ModelInstanceDef,int)
com.google.ar.core.ImageMetadata: int nativeGetIntFromMetadataEntry(long,long)
com.google.ar.sceneform.lullmodel.MaterialDef: void startTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.RenderableManager: void nSetMaterialInstanceAt(long,int,int,long)
com.google.ar.schemas.lull.DataInt: int createDataInt(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Pose: float qy()
com.google.ar.schemas.sceneform.SamplerDef: SamplerDef()
com.google.ar.schemas.sceneform.ParameterDef: int endParameterDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.schemas.lull.ModelPipelineImportDef: void startTargetMeshesVector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment: ViewRenderable$HorizontalAlignment(java.lang.String,int)
com.google.android.filament.Colors: Colors()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.google.ar.schemas.sceneform.SamplerMinFilter: java.lang.String name(int)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.ar.core.AugmentedImage$TrackingMethod: com.google.ar.core.AugmentedImage$TrackingMethod valueOf(java.lang.String)
com.google.ar.sceneform.rendering.CameraStream: CameraStream(int,com.google.ar.sceneform.rendering.Renderer)
com.google.ar.schemas.lull.ModelInstanceDef: int indices16Length()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.google.ar.core.Session: void nativeCloseSession(long)
com.google.ar.sceneform.rendering.IEngine: void destroyFence(com.google.android.filament.Fence)
com.google.ar.core.Pose: float[] getRotationQuaternion()
com.google.ar.sceneform.rendering.FilamentEngineWrapper: void destroyRenderer(com.google.android.filament.Renderer)
com.google.ar.schemas.sceneform.MaterialDef: int compiledIndex()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.google.ar.sceneform.Node: com.google.ar.sceneform.math.Vector3 getForward()
com.google.android.filament.Stream: long nGetTimestamp(long)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.ar.schemas.sceneform.SamplerDef: com.google.ar.schemas.sceneform.SamplerDef getRootAsSamplerDef(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.SamplerDef)
com.google.ar.schemas.lull.MaterialDef: com.google.ar.schemas.lull.MaterialDef getRootAsMaterialDef(java.nio.ByteBuffer,com.google.ar.schemas.lull.MaterialDef)
com.google.android.filament.Fence$Type: com.google.android.filament.Fence$Type[] values()
com.google.ar.schemas.sceneform.ScalarInit: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.Vec4Init: void startVec4Init(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.ux.R$dimen: R$dimen()
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.ar.sceneform.rendering.MaterialParameters: void setBoolean3(java.lang.String,boolean,boolean,boolean)
com.google.ar.schemas.lull.VariantArrayDef: int createValuesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.utilities.EnvironmentalHdrParameters: float getDirectIntensityForFilament()
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.google.ar.sceneform.lullmodel.DataVec3: com.google.ar.sceneform.lullmodel.DataVec3 __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Plane$Type: com.google.ar.core.Plane$Type valueOf(java.lang.String)
com.google.ar.core.Session: com.google.ar.core.Trackable createTrackable(long)
com.google.ar.schemas.lull.TextureDef: void addIsRgbm(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.android.filament.Texture$Builder: com.google.android.filament.Texture$Builder usage(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.google.ar.sceneform.rendering.Light$Type: com.google.ar.sceneform.rendering.Light$Type[] values()
com.google.ar.schemas.lull.DataBool: com.google.ar.schemas.lull.DataBool getRootAsDataBool(java.nio.ByteBuffer,com.google.ar.schemas.lull.DataBool)
com.google.ar.sceneform.lullmodel.ModelPipelineDef: void addSources(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.ar.schemas.lull.TextureDef: java.nio.ByteBuffer dataInByteBuffer(java.nio.ByteBuffer)
com.google.ar.schemas.lull.TextureDef: int endTextureDef(com.google.flatbuffers.FlatBufferBuilder)
com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef: void __init(int,java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void onResume()
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
com.google.ar.sceneform.rendering.AnimatorImpl$Factory: AnimatorImpl$Factory()
com.google.ar.core.Anchor$CloudAnchorState: com.google.ar.core.Anchor$CloudAnchorState[] $values()
com.google.ar.sceneform.lullmodel.Mat4x3: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.DataHashValue: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.math.Matrix: boolean invert(com.google.ar.sceneform.math.Matrix,com.google.ar.sceneform.math.Matrix)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: com.google.ar.sceneform.lullmodel.ModelIndexRange ranges(com.google.ar.sceneform.lullmodel.ModelIndexRange,int)
com.google.ar.schemas.lull.ModelInstanceDef: int shaderToMeshBonesLength()
com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker: MovingAverageMillisecondsTracker()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.ar.schemas.sceneform.BoolInit: void startBoolInit(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
com.google.ar.schemas.lull.ModelInstanceDef: int createShaderToMeshBonesVector(com.google.flatbuffers.FlatBufferBuilder,byte[])
com.google.ar.core.SharedCamera: void nativeSharedCameraCaptureSessionClosed(long,android.hardware.camera2.CameraCaptureSession)
com.google.ar.sceneform.rendering.Material$Builder: java.lang.Boolean hasSource()
com.google.ar.sceneform.lullmodel.ModelPipelineDef: int createTexturesVector(com.google.flatbuffers.FlatBufferBuilder,int[])
com.google.ar.sceneform.ux.PlaneDiscoveryController: void show()
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.google.ar.sceneform.lullmodel.DataInt: com.google.ar.sceneform.lullmodel.DataInt getRootAsDataInt(java.nio.ByteBuffer,com.google.ar.sceneform.lullmodel.DataInt)
com.google.ar.sceneform.rendering.Renderable: void attachToRenderer(com.google.ar.sceneform.rendering.Renderer)
com.google.ar.core.SharedCamera$1$$ExternalSyntheticLambda2: void run()
com.google.ar.schemas.sceneform.DoubleVec4Init: com.google.ar.schemas.sceneform.DoubleVec4Init getRootAsDoubleVec4Init(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter: com.google.ar.sceneform.rendering.Texture$Sampler$MinFilter[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.ar.sceneform.rendering.ModelRenderable: ModelRenderable(com.google.ar.sceneform.rendering.ModelRenderable)
com.google.ar.schemas.lull.Rect: float x()
com.google.android.filament.RenderableManager: void nSetMorphWeights(long,int,float[])
com.google.ar.core.Point: int hashCode()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
com.google.android.filament.Material$Builder: com.google.android.filament.Material$Builder payload(java.nio.Buffer,int)
com.google.android.filament.Engine: long nCreateRenderer(long)
com.google.ar.schemas.lull.DataHashValue: void addValue(com.google.flatbuffers.FlatBufferBuilder,long)
com.google.android.filament.IndirectLight: void clearNativeObject()
androidx.fragment.app.Fragment: void performDestroy()
com.google.ar.sceneform.Sun: void setEnvironmentalHdrLightEstimate(float[],com.google.ar.sceneform.rendering.Color,float,float,com.google.ar.sceneform.utilities.EnvironmentalHdrParameters)
com.google.ar.schemas.sceneform.BoolVec2Init: com.google.ar.schemas.sceneform.BoolVec2Init __assign(int,java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.SkeletonRig: void getMatrixForBone(int,com.google.ar.sceneform.math.Matrix)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.ar.sceneform.rendering.Color: Color(float,float,float,float)
com.google.ar.sceneform.rendering.RenderableDefinition$Builder: java.util.List access$500(com.google.ar.sceneform.rendering.RenderableDefinition$Builder)
com.google.ar.core.Point: Point(long,com.google.ar.core.Session)
com.google.ar.schemas.lull.DataVec3: void addValue(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.ar.schemas.lull.Quat: void __init(int,java.nio.ByteBuffer)
com.google.android.filament.Camera: double[] getProjectionMatrix(double[])
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.ar.sceneform.lullmodel.Rect: int createRect(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.android.filament.Scene: com.google.android.filament.IndirectLight getIndirectLight()
com.google.ar.sceneform.rendering.CameraStream: java.lang.Void lambda$new$1(java.lang.Throwable)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
com.google.android.filament.RenderTarget$Builder$BuilderFinalizer: RenderTarget$Builder$BuilderFinalizer(long)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.window.layout.WindowLayoutInfo: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.ar.core.InstantPlacementPoint: com.google.ar.core.Pose getPose()
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,com.google.android.filament.MaterialInstance$BooleanElement,boolean[],int,int)
com.google.android.filament.MaterialInstance: void nSetBooleanParameterArray(long,java.lang.String,int,boolean[],int,int)
com.google.android.filament.MaterialInstance: void setSpecularAntiAliasingThreshold(float)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: int createIndices16Vector(com.google.flatbuffers.FlatBufferBuilder,short[])
com.google.ar.sceneform.rendering.R: R()
com.google.ar.schemas.sceneform.SceneformBundleDef: com.google.ar.schemas.sceneform.TransformDef transform(com.google.ar.schemas.sceneform.TransformDef)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.ar.sceneform.Scene: java.util.ArrayList overlapTestAll(com.google.ar.sceneform.Node)
com.google.ar.core.Session: Session(android.content.Context,java.util.Set)
com.google.ar.sceneform.rendering.ResourceManager: com.google.ar.sceneform.rendering.ResourceManager getInstance()
com.google.ar.core.Config: com.google.ar.core.Config setGeospatialMode(com.google.ar.core.Config$GeospatialMode)
com.google.ar.schemas.lull.ModelPipelineImportDef: void addFlipTextureCoordinates(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.sceneform.rendering.Texture$Sampler$Builder: com.google.ar.sceneform.rendering.Texture$Sampler build()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.filament.RenderableManager$Builder$BuilderFinalizer: RenderableManager$Builder$BuilderFinalizer(long)
com.google.ar.sceneform.lullmodel.MaterialTextureDef: int createMaterialTextureDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int)
com.google.ar.sceneform.utilities.AndroidPreconditions: void checkMinAndroidApiLevel()
com.google.ar.sceneform.math.Vector3: float componentMax(com.google.ar.sceneform.math.Vector3)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.google.ar.core.AugmentedFace: com.google.ar.core.Pose nativeGetRegionPose(long,long,int)
com.google.android.filament.View$QualityLevel: com.google.android.filament.View$QualityLevel[] values()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.google.ar.schemas.sceneform.DoubleVec3Init: void __init(int,java.nio.ByteBuffer)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.google.ar.sceneform.ux.ScaleController: void setMaxScale(float)
com.google.ar.sceneform.math.Quaternion: Quaternion()
com.google.android.filament.LightManager: void nSetShadowCaster(long,int,boolean)
androidx.window.R$attr: R$attr()
com.google.ar.core.RecordingConfig: java.lang.String nativeGetMp4DatasetUri(long,long)
com.google.android.filament.View: com.google.android.filament.View$RenderQuality getRenderQuality()
com.google.ar.sceneform.rendering.ModelRenderable: void copyAnimationFrom(com.google.ar.sceneform.rendering.ModelRenderable)
com.google.ar.sceneform.rendering.Light$Builder: com.google.ar.sceneform.rendering.Light$Builder setInnerConeAngle(float)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.google.android.filament.RenderableManager$Builder: com.google.android.filament.RenderableManager$Builder geometry(int,com.google.android.filament.RenderableManager$PrimitiveType,com.google.android.filament.VertexBuffer,com.google.android.filament.IndexBuffer,int,int,int,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.google.ar.sceneform.rendering.Renderable: com.google.ar.sceneform.utilities.ChangeId getId()
com.google.ar.core.ImageMetadata: long[] nativeGetLongArrayFromMetadataEntry(long,long)
com.google.ar.core.Frame: boolean nativeHasDisplayGeometryChanged(long,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.ar.schemas.lull.ModelPipelineSkeletonDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.BoolVec4Init: com.google.ar.schemas.sceneform.BoolVec4Init __assign(int,java.nio.ByteBuffer)
com.google.ar.core.Session: int nativeCheckModuleAvailability(long,int)
com.google.ar.schemas.lull.MaterialTextureDef: java.nio.ByteBuffer nameAsByteBuffer()
com.google.flatbuffers.Utf8: int encodedLength(java.lang.CharSequence)
com.google.ar.schemas.lull.TextureDef: int wrapT()
com.google.android.filament.MaterialInstance: void nSetParameterBool(long,java.lang.String,boolean)
com.google.ar.schemas.lull.DataInt: void startDataInt(com.google.flatbuffers.FlatBufferBuilder)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.ar.sceneform.resources.ResourceRegistry: ResourceRegistry()
com.google.ar.core.exceptions.FatalException: FatalException(java.lang.String,java.lang.Throwable)
com.google.android.filament.Texture$Format: com.google.android.filament.Texture$Format[] values()
com.google.ar.schemas.lull.ModelPipelineDef: void addSources(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.ar.schemas.lull.DataVec4: void startDataVec4(com.google.flatbuffers.FlatBufferBuilder)
com.google.android.filament.Material: float getMaskThreshold()
com.google.ar.sceneform.ux.BaseArFragment: com.google.ar.core.Config getSessionConfiguration(com.google.ar.core.Session)
com.google.ar.schemas.lull.MaterialTextureDef: void addUsagePerChannel(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.CameraConfig: int nativeGetDepthSensorUsage(long,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.ar.schemas.sceneform.CompiledMaterialDef: void startCompiledMaterialVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.Platform$UnknownPlatform: boolean validateSurface(java.lang.Object)
com.google.android.filament.View: com.google.android.filament.RenderTarget getRenderTarget()
com.google.ar.schemas.sceneform.LightingDef: void startShCoefficientsVector(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.android.filament.RenderTarget: void clearNativeObject()
com.google.ar.sceneform.lullmodel.MaterialDef: int texturesLength()
com.google.android.filament.SwapChain: void clearNativeObject()
com.google.ar.schemas.lull.TextureDef: void addName(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.vr.dynamite.client.DynamiteClient: java.lang.ClassLoader getRemoteClassLoader(android.content.Context,java.lang.String,java.lang.String)
com.google.ar.schemas.sceneform.ParameterInitDef: ParameterInitDef()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.google.ar.schemas.sceneform.SamplerDef: com.google.ar.schemas.sceneform.SamplerDef getRootAsSamplerDef(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void performDetach()
com.google.android.filament.Colors: float[] toLinear(com.google.android.filament.Colors$Conversion,float[])
com.google.android.filament.VertexBuffer: void access$700(long)
com.google.ar.sceneform.math.Vector3: com.google.ar.sceneform.math.Vector3 normalized()
com.google.ar.core.annotations.NativeEnum: java.lang.String value()
com.google.ar.core.InstallActivity: void onNewIntent(android.content.Intent)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
com.google.ar.sceneform.rendering.Renderer: void onResume()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.google.android.filament.Scene: void nRemove(long,int)
com.google.ar.core.ImageMetadata: long[] getKeys()
com.google.ar.sceneform.rendering.Material: Material(com.google.ar.sceneform.rendering.MaterialInternalData)
com.google.ar.schemas.sceneform.CompiledMaterialDef: com.google.ar.schemas.sceneform.CompiledMaterialDef getRootAsCompiledMaterialDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.RenderableInstance: int createFilamentEntity(com.google.ar.sceneform.rendering.IEngine)
com.google.ar.sceneform.collision.CollisionSystem: void addCollider(com.google.ar.sceneform.collision.Collider)
com.google.ar.sceneform.rendering.Texture: Texture(com.google.ar.sceneform.rendering.TextureInternalData,com.google.ar.sceneform.rendering.Texture$1)
com.google.ar.schemas.sceneform.CompiledMaterialDeclDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.sceneform.InputDef: java.nio.ByteBuffer hashAsByteBuffer()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.google.ar.sceneform.lullmodel.DataVec3: DataVec3()
com.google.ar.sceneform.rendering.CameraStream: void setRenderPriority(int)
com.google.ar.core.CameraConfigFilter: int nativeGetTargetFps(long,long)
com.google.ar.core.RecordingConfig: java.lang.String nativeGetMp4DatasetFilePath(long,long)
com.google.ar.sceneform.Node: int getNameHash()
com.google.ar.schemas.lull.BlendShape: void __init(int,java.nio.ByteBuffer)
com.google.ar.schemas.lull.BlendShape: java.nio.ByteBuffer tangentIndices16InByteBuffer(java.nio.ByteBuffer)
com.google.ar.sceneform.lullmodel.LayoutFillOrder: LayoutFillOrder()
com.google.vr.dynamite.client.DynamiteClient: android.content.Context getRemoteContext(android.content.Context,java.lang.String,java.lang.String)
com.google.ar.schemas.sceneform.SamplerInit: com.google.ar.schemas.sceneform.SamplerInit getRootAsSamplerInit(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.SamplerInit)
com.google.ar.sceneform.rendering.Texture$Usage: Texture$Usage(java.lang.String,int)
com.google.ar.sceneform.rendering.Renderable$Builder: com.google.ar.sceneform.rendering.Renderable$Builder getSelf()
com.google.ar.sceneform.lullmodel.ModelDef: int lodsLength()
com.google.flatbuffers.FlatBufferBuilder: FlatBufferBuilder(int)
com.google.ar.core.Anchor: int hashCode()
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
com.google.ar.sceneform.rendering.RenderableInstance: void detachFromRenderer()
com.google.ar.sceneform.rendering.ViewRenderable$Builder: com.google.ar.sceneform.rendering.ViewRenderable$Builder setView(android.content.Context,int)
com.google.ar.sceneform.NodeParent: void callOnHierarchy(java.util.function.Consumer)
com.google.ar.sceneform.lullmodel.ModelInstanceDef: long numVertices()
com.google.android.filament.Texture: boolean nIsStreamValidForTexture(long,long)
com.google.ar.sceneform.rendering.ResourceManager: void addResourceHolder(com.google.ar.sceneform.resources.ResourceHolder)
com.google.ar.schemas.lull.DataHashValue: com.google.ar.schemas.lull.DataHashValue getRootAsDataHashValue(java.nio.ByteBuffer)
com.google.ar.sceneform.Node: void setParent(com.google.ar.sceneform.NodeParent)
com.google.android.filament.IndexBuffer: void setBuffer(com.google.android.filament.Engine,java.nio.Buffer,int,int)
com.google.ar.schemas.sceneform.Vec3Init: com.google.ar.schemas.sceneform.Vec3Init getRootAsVec3Init(java.nio.ByteBuffer)
com.google.ar.core.InstantPlacementPoint: int hashCode()
com.google.android.filament.IndirectLight$Builder$BuilderFinalizer: IndirectLight$Builder$BuilderFinalizer(long)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.filament.Platform: boolean isLinux()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.google.ar.core.Camera: int nativeGetTrackingFailureReason(long,long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.ar.schemas.sceneform.SamplerDef: void __init(int,java.nio.ByteBuffer)
com.google.ar.core.Config: int nativeGetAugmentedFaceMode(long,long)
com.google.android.filament.Texture: com.google.android.filament.Texture$Sampler getTarget()
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.google.ar.core.Anchor: void nativeDetach(long,long)
com.google.ar.sceneform.rendering.Texture$Sampler: com.google.ar.sceneform.rendering.Texture$Sampler$WrapMode getWrapModeS()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.google.ar.sceneform.rendering.MaterialParameters: void setFloat3(java.lang.String,float,float,float)
com.google.ar.schemas.sceneform.CompiledMaterialDef: java.nio.ByteBuffer sha1sumAsByteBuffer()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.ar.schemas.lull.ModelDef: int version()
com.google.ar.core.CameraConfigFilter: com.google.ar.core.CameraConfigFilter setDepthSensorUsage(java.util.EnumSet)
com.google.ar.sceneform.rendering.RenderableDefinition$Submesh: java.util.List getTriangleIndices()
com.google.ar.core.Plane: boolean nativeIsPoseInPolygon(long,long,com.google.ar.core.Pose)
com.google.android.filament.Material: boolean nIsColorWriteEnabled(long)
com.google.ar.sceneform.ArSceneView: void ensureUpdateMode()
com.google.ar.schemas.lull.AabbDef: int createAabbDef(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float,float,float)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.ar.schemas.sceneform.RuntimeAssetDef: com.google.ar.schemas.sceneform.RuntimeAssetDef getRootAsRuntimeAssetDef(java.nio.ByteBuffer)
com.google.android.filament.MaterialInstance: void setParameter(java.lang.String,int,int)
com.google.ar.core.Frame: void nativeTransformCoordinates2dFloatArrayOrBuffer(long,long,int,java.lang.Object,int,java.lang.Object)
com.google.android.filament.Material: float nGetSpecularAntiAliasingVariance(long)
com.google.android.filament.Stream$Builder$BuilderFinalizer: Stream$Builder$BuilderFinalizer(long)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.ar.schemas.sceneform.BoolVec3Init: boolean y()
com.google.ar.schemas.lull.ModelPipelineImportDef: void addEnsureVertexOrientationWNotZero(com.google.flatbuffers.FlatBufferBuilder,boolean)
com.google.ar.schemas.sceneform.MaterialDef: void addParameters(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.core.Frame: long nativeAcquireDepthImage(long,long)
com.google.android.filament.Platform$UnknownPlatform: Platform$UnknownPlatform()
com.google.ar.core.Session: long[] nativeAcquireAllAnchors(long)
com.google.ar.schemas.lull.BlendShape: void startVertexIndices32Vector(com.google.flatbuffers.FlatBufferBuilder,int)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.ar.schemas.lull.ModelPipelineRenderableDef: void addMaterials(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.sceneform.SceneView: void initializeAnimation()
com.google.ar.schemas.lull.ModelInstanceDef: void addRanges(com.google.flatbuffers.FlatBufferBuilder,int)
com.google.ar.schemas.sceneform.IntVec3Init: IntVec3Init()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.filament.Engine: boolean isValid()
com.google.android.filament.Material: void setDefaultParameter(java.lang.String,boolean,boolean,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.ar.schemas.lull.ModelPipelineImportDef: com.google.ar.schemas.lull.ModelPipelineImportDef getRootAsModelPipelineImportDef(java.nio.ByteBuffer)
com.google.ar.sceneform.rendering.LightProbe: void finalize()
com.google.ar.schemas.lull.ModelInstanceDef: int createModelInstanceDef(com.google.flatbuffers.FlatBufferBuilder,int,int,int,int,int,int,long,boolean,int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
com.google.ar.sceneform.rendering.Renderer: void onDetachedFromSurface()
com.google.android.filament.android.UiHelper: boolean attach(java.lang.Object)
com.google.ar.sceneform.rendering.Material: Material(com.google.ar.sceneform.rendering.MaterialInternalData,com.google.ar.sceneform.rendering.Material$1)
com.google.ar.sceneform.collision.Sphere: Sphere(float,com.google.ar.sceneform.math.Vector3)
com.google.ar.schemas.sceneform.DoubleVec2Init: com.google.ar.schemas.sceneform.DoubleVec2Init getRootAsDoubleVec2Init(java.nio.ByteBuffer)
com.google.android.filament.Camera: void setCustomProjection(double[],double,double)
com.google.ar.core.exceptions.ResourceExhaustedException: ResourceExhaustedException()
com.google.ar.sceneform.lullmodel.DataString: void __init(int,java.nio.ByteBuffer)
com.google.ar.sceneform.Node: com.google.ar.sceneform.rendering.Renderable getRenderable()
com.google.ar.sceneform.SkeletonNode: com.google.ar.sceneform.math.Matrix access$300(com.google.ar.sceneform.SkeletonNode)
com.google.ar.sceneform.rendering.CameraStream: void recalculateCameraUvs(com.google.ar.core.Frame)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.google.ar.schemas.lull.VariantArrayDef: int valuesLength()
com.google.ar.schemas.lull.DataInt: int endDataInt(com.google.flatbuffers.FlatBufferBuilder)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.ar.schemas.sceneform.LightingDef: void addScale(com.google.flatbuffers.FlatBufferBuilder,float)
com.google.ar.schemas.sceneform.RuntimeAssetDef: void addRenderPriority(com.google.flatbuffers.FlatBufferBuilder,int)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.ar.sceneform.lullmodel.Quat: float z()
com.google.android.filament.View: void nSetScene(long,long)
com.google.ar.schemas.lull.Vec4: int createVec4(com.google.flatbuffers.FlatBufferBuilder,float,float,float,float)
com.google.ar.sceneform.collision.Box: void transform(com.google.ar.sceneform.common.TransformProvider,com.google.ar.sceneform.collision.CollisionShape)
com.google.android.filament.Viewport: Viewport(int,int,int,int)
com.google.ar.schemas.sceneform.Vec3Init: com.google.ar.schemas.sceneform.Vec3Init getRootAsVec3Init(java.nio.ByteBuffer,com.google.ar.schemas.sceneform.Vec3Init)
com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment: com.google.ar.sceneform.rendering.ViewRenderable$HorizontalAlignment[] values()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.google.android.filament.IndirectLight: void access$100(long,long)
